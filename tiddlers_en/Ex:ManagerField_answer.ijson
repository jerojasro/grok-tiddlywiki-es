{
  "title": _("Ex:ManagerField/answer"),
  "created": "20200603115947939",
  "length": "s",
  "modified": "20200603210259360",
  "tags": "Answer",
  "type": "text/vnd.tiddlywiki",
  "text": _("* We could write \"Jane Doe's manager is ChrisSmith\" in Jane's tiddler.\n** //Advantages//: Simple and straightforward.\n** //Disadvantages//: The only thing TiddlyWiki will know about the relationship between Jane and Chris is that they are linked. It doesn't know Chris is Jane's manager.\n\n* We could link to the person's manager within the body text, and then tag the manager `Manager`.\n** //Advantages//: Similarly easy to create. But this time, TiddlyWiki has a vague conception that Chris is Jane's manager that we can query for.\n** //Disadvantages//: The relationship we've defined is really that \"Jane is linked to Chris, who is a manager.\" A manager is unlikely to directly manage //all// other employees of the company unless it's a very small company. Thus, if we refer to the manager in the tiddler of a contact who is not a direct report, it will look like they are a direct report.\n\n* We could tag Jane Doe with a ChrisSmith tag.\n** //Advantages//: Easy and most semantically accurate of these alternatives. As we'll see in a future chapter, we can automatically create a hierarchical (\"table of contents\") view of managers and their employees.\n** //Disadvantages//: Creates a lot of extra tags. TiddlyWiki understands the relationship to be something like \"Jane is a member of Chris['s team],\" which is more precise than a link but less precise than a \"manager\" field.")
}