[{"title":"$:/plugins/sobjornstad/GrokTiddlyWiki","description":"Extensible content for Grok TiddlyWiki","author":"Soren Bjornstad","version":"1.2.2","core-version":">=5.2.1","source":"https://groktiddlywiki.com","list":"readme copyright","dependents":"","plugin-type":"plugin","type":"application/json","text":"{\"tiddlers\":{\"$:/GrokTiddlyWikiUpgrader\":{\"title\":\"$:/GrokTiddlyWikiUpgrader\",\"created\":\"20210820145716584\",\"list-after\":\"$:/sib/TooManyTiddlersBanner\",\"modified\":\"20210820163316220\",\"tags\":\"$:/tags/SideBarSegment\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<!---------- Deleting tiddlers ---------->\\n<$list filter=\\\"[<storyTiddler>!is[blank]]\\\" variable=_>\\n<$list filter=\\\"[enlist{$:/config/sobjornstad/GrokTiddlyWiki/Upgrades/deletes}is[tiddler]first[]]\\\" variable=_ emptyMessage=\\\"You're all up to date, nothing to see here!\\\">\\n\\nThe following content tiddlers that you have modified (either manually or through a tool such as the TakeAway reviewer) have been removed in the version of //Grok TiddlyWiki// you've upgraded to, most likely because they are no longer relevant in a new version of TiddlyWiki, or they have been superseded by other content:\\n\\n<<list-links \\\"[enlist{$:/config/sobjornstad/GrokTiddlyWiki/Upgrades/deletes}is[tiddler]]\\\" emptyMessage:\\\"(none)\\\">>\\n\\nIf you would like to keep any of these tiddlers, please rename them to something else so that they disappear from the list. Then click the button below to complete the upgrade.\\n\\n<$button>\\n\\tDelete tiddlers and complete upgrade\\n\\t<$list filter=\\\"[enlist{$:/config/sobjornstad/GrokTiddlyWiki/Upgrades/deletes}is[tiddler]]\\\">\\n\\t\\t<$action-deletetiddler $tiddler=<<currentTiddler>>/>\\n\\t</$list>\\n</$button>\\n\\n</$list>\\n</$list>\\n\\n<$list filter=\\\"[<storyTiddler>is[blank]]\\\" variable=_>\\n<$list filter=\\\"[enlist{$:/config/sobjornstad/GrokTiddlyWiki/Upgrades/deletes}is[tiddler]first[]]\\\" variable=_>\\n\\t<div class=\\\"gtw-upgrade-banner\\\">\\n\\t\\t<div style=\\\"display: inline-block; vertical-align: center; margin-top: 6px; margin-left: 1em;\\\">\\n\\t\\t\\t<span style=\\\"height: 44px;\\\">{{$:/core/images/info-button}}</span>\\n\\t\\t</div>\\n\\t\\t<div style=\\\"display: inline-block; margin-left: 1em;\\\">\\n\\t\\t\\tAn upgrade to //Grok TiddlyWiki// is in progress.<br>\\n\\t\\t\\t[[Open the upgrader|$:/GrokTiddlyWikiUpgrader]] to finish the upgrade.\\n\\t\\t</div>\\n\\t</div>\\n</$list>\\n</$list>\\n\\n\\n<!---------- Version upgrade ---------->\\n\\n<$list filter=\\\"[<storyTiddler>is[blank]]\\\" variable=_>\\n<$list filter=\\\"[<version>compare:version:lt{Metadata##tw-version}]\\\" variable=_>\\n\\t<div class=\\\"gtw-upgrade-banner\\\">\\n\\t\\t<div style=\\\"text-align: center;\\\">\\n\\t\\t\\t<span style=\\\"height: 44px;\\\">{{$:/core/images/info-button}}</span>\\n\\t\\t</div>\\n\\t\\t<div style=\\\"display: inline-block; margin-left: 1em;\\\">\\n\\t\\t\\tThis version of //Grok TiddlyWiki// was written for TiddlyWiki {{Metadata##tw-version}}, but it's running on an older version, TiddlyWiki <<version>>. Some features may not work correctly. Please update it to the latest version using the [[TiddlyWiki Upgrader|https://tiddlywiki.com/upgrade]].\\n\\t\\t</div>\\n\\t</div>\\n</$list>\\n</$list>\\n\\n<!---------- Common ---------->\\n<style>\\n.gtw-upgrade-banner {\\n\\tbackground-color: <<color tiddler-background>>;\\n\\tdisplay: inline-block;\\n\\tmargin-right: 2em;\\n\\tpadding-right: 1em;\\n}\\n</style>\"},\"$:/config/SecretPasswordExample\":{\"title\":\"$:/config/SecretPasswordExample\",\"created\":\"20210207222644521\",\"modified\":\"20210207222552483\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"TiddlyWikiIsFun\"},\"$:/config/sobjornstad/GrokTiddlyWiki/Bookmarks\":{\"title\":\"$:/config/sobjornstad/GrokTiddlyWiki/Bookmarks\",\"created\":\"20210320201232026\",\"modified\":\"20210818005526890\",\"type\":\"text/vnd.tiddlywiki\"},\"$:/config/sobjornstad/GrokTiddlyWiki/ExerciseBrowserState\":{\"title\":\"$:/config/sobjornstad/GrokTiddlyWiki/ExerciseBrowserState\",\"complete\":\".*\",\"created\":\"20210408142624562\",\"modified\":\"20210408142547720\",\"type\":\"text/vnd.tiddlywiki\"},\"$:/config/sobjornstad/GrokTiddlyWiki/Feedback/UserEmail\":{\"title\":\"$:/config/sobjornstad/GrokTiddlyWiki/Feedback/UserEmail\",\"created\":\"20210209022926391\",\"modified\":\"20210503030552661\",\"type\":\"text/vnd.tiddlywiki\"},\"$:/config/sobjornstad/GrokTiddlyWiki/TakeawayBrowserState\":{\"title\":\"$:/config/sobjornstad/GrokTiddlyWiki/TakeawayBrowserState\",\"answer\":\"no\",\"created\":\"20210408142451078\",\"invertsort\":\"!\",\"modified\":\"20210511025650272\",\"seen\":\".*\",\"sort\":\"question\",\"type\":\"text/vnd.tiddlywiki\",\"viewer\":\"table\"},\"$:/config/sobjornstad/GrokTiddlyWiki/Upgrades/deletes\":{\"title\":\"$:/config/sobjornstad/GrokTiddlyWiki/Upgrades/deletes\",\"created\":\"20210820151851893\",\"modified\":\"20210820151921155\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Ta:20201229035809240 Ta:20201229035832053 Ta:20201229035903899 Ta:20210107232156811 Ta:20210107232231028 Sn:NestedVarsScope Ltc:VarsNesting Ta:20210206231220671 $:/plugins/sobjornstad/TiddlyRemember/stylesheets/remember\\n\"},\"$:/favicon.ico\":{\"title\":\"$:/favicon.ico\",\"text\":\"iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAACXBIWXMAAA7EAAAOxAGVKw4bAAASZUlEQVR4nO2da3Rc1XWAv33uaMa2LMmWTYSkO5IlDzUxhCRVIBRI4pCVR2lJkyaGkq42tBCakjYhpECSRTHkQShQVsEphEWAmNQGPxoWkBASEmJICiFYkBhwMNbDemMbg2XJkuZx7+6PubKFbEmjmTsaPe631izZM+ees+/sPfuexz77QEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAwExHV64MhwothJ8oWNTWvhPX/TRwMrAI1fnAQkRCqPZhzOvAXlQbCYfXS3Pz3sJKXUCGhlZIoWWYLBqLRYjHTwO+huuehUgxIN4rWxxgENVmjHkGkfWEw89JU1PcF6GnKVpTc9u0NQCtqCgmEjkD1fcDNqpnAjVAJN9NA4pICtW9iGzBsu5k9+5dkjaUWYGeckox+/e3TAsD0FgsQjLZQCq1GpF3AycAxd7LIrdfd664qCoivRhzJ+HweqBppnsHte0rgRsK9sV6rvwduO7HEPkrVFd47twUSqYjwqkiAkcbngKDwAbgRjo7W2aiV9ATT1xCX98uRBZPuQFoLBZhaOhs4EpEVgDlqEZIf7nTwiNlgAIgsolU6irp6WkrsDyTQqPRB1A9H6b4C9do9GRU/xs4DdXwiF/ZTFH8sTHmaVRvJJH4hezZc6jQ4oyHrlhxCv39zyNiwRR98VpXV0EicQUilwOCqoOImar2pwgFXsWYbxEOPyxNTQcLLdBoFAzR6GOofnj4vbwqQOvry0gkLgT+HVhyRI5ZpfjRKNCHMT8gHL6Npqbd06WfoLW1lThOCzBv+L28dLg0FotoTc2HSCQeAW7hiPJhdisf0vdXiut+kaGh7USjG7Sq6gyNxfI9fB0XXbPG4DhfYtQw2ndlaGVlLZZ1C/DJfNQ/IxFJ4roPIfJ16ezcVQgRNBazicefQ/X4ke/75gG0rq5CbXstlrUT+GsC5R9BtQiRTyOyXW37Rq2rq5jS5levtojHv47qcaM/y1lJWlt7NqnUN4D3IjKr1hbyyAuEQl9m9+7fTEX/QKPR96G6HoiO/ixrD6C1tXUajW7EcX6OyJmB8ifFu3Gc+6mp+XNNz3TmDW1oWABcBFQd6/OsDEBras7Ddf+I6nnk+QZmLaqVOM4Gli27JF9GoKrC3r1noXoOY7QxqUeAN5FzO6rv8yZxAnJnCMu6mqGh7/k9iaSVlQsoKroP1/3UWGUy8gBq2+Uaja7FdV8AprPyU0DC+ztTmIfj3Eg4fLuflaqqEAq9B8d5/3jlJnxu6/LlUeLxTaiePm0Vr/o6IrtQbfP6IjawGHAQiaBayojJD8BCpAjVENNjtGJQ/TuNRhcTCn2O1tbXc+4cnnjiQkQ+g8iS8YqNe/Oey/8dMD8nYfzBAQ4BvcAQIilgH5b1Kxznl7huKzBIcbEQjxchUkYyuRhjShApxXWPB5YiUorqQlRLEFmE6nFY1hJctwyRYlSLKKxRtOO6F0t39+PZVqCrVoVobf0orvtdVJeNV3bMG9Xa2r/AcR4EirIVJAdcIA70IrIfkU4c5yUsazuO08n8+QcQOUBp6X5KSg7xgQ+4ct117mHZQQRU0484oaHB0NtrCIeLGBgIEY+HSKVCFBfPI5UqReR4XLcOY05E9V1APaqDiDjAcd5rKjmEMZfS3r5+sp5AQbDtdyByFbDaM+gxOaYBqG1/DvgeU7s27wIDwGuI7ED19xjzEqHQK8yb1wX0c9JJDps2uSMvEhHNtAF96/2m/716tfDyyxZvvhmipGQB8XgJiUQ5odASRBbhuhWo/ilwNiI1ud9mxvTiup+nu3vzZIxAo9EqVL8GfAqonKj8UQag0ehHcN2fTNm4XiSJ6h7g98A2jHmeVOpVwuE9nHrqACtXprjuOpXhNfg8MtJAPA8SIhazSCbLcZwoIpeguhxYlW9ZPA5hzAXS3v5Ipheobd8NfBQ4ngyGl28xAK2qOhfL2oJqeNKiThaROLALeBL4Nao7SKVeY968Pk49Ncnmza4nYN4Vnw1aVXUGImu9ELb89RlE9iFygbS3/3JCmaLRjwCbUR0OpZu4+rdcrPoQb+0t+49qP9CIZT2G6z4DNOE4b9LTEwdU0o+CGYNGo+ej+hXg1Dw1MYTq8xizWjo6uieQZaM3OZcx4l24HNXnSA+d8kUfrvs0Ij8iEnmGRKKLioo+GhtTniDT8peeCd5o6fOIfBDVlXloohXX3YgxN0ln5xtjymHbKSY5qyie8rcBi3KVcgyGgOdw3U0Y8xThcBs1NYfYutWZyUofjcZiEVKpd5FM/gMiF5HBHMsk6Ad2YMyDJBJ3y2uv7Tuq/Wh0G6oNk61YNBrtRnXC3mIWOMAfgS3ATzFmF8cd109jY2o2KX40WldXQSp1EaoXA3U+Vt0PtCDyCxYsuFZ27uw73GZV1UVY1h0TDfmOhaht+68MkT3Ao8BGEokXWLLkADt2JGez4kdyOORd9XLgHKDMx+oHMGYt4fD10tR00Au7ewD4WDaV+W0ADiKvoHofjvMw0E5PzxDpzt2cUP5ItL6+jHj8C4hcgb+P2EEs64vS1vZ9te0PAFuzrcg/AxBJoLod172FZPJX1NTsn+3uPhO0oqIYyzoDkZsQeadvFYu0UFT0MZLJ36JannU1vhhAekz/BJZ1K8b8loaGftm8eVpEwk4XvEW1LcBpflWJSDOqsVwq8cMABhB5BMdZy6JFf2DHjoGZNpafKrS+voxkcgeqx4zOKQS5GYDqGxjzIK67FpFX6ewcmusufyK0oqKYoqL+QssxTPaLPap7MeYHWNbNFBXtHKl8BUvLy0u1oqLYN0lnCbJnzyFc94pCyzFMNh5ASa/YfR9YR0lJBzt2JAFDTc3puO5lqJaRzsrRAzxIJPIkIntn+pZqv9DKylpCoV+h6uc8QVZM1gAUkVZE7sKy7qe8vJvGxhT19aUMDV2PMf/I0WsJiqqDMa8A66Sj42b/xJ+5aHX15YjcRIG3w0/OAERagbWEw1tYtOg1aWxMKsynuvr/vFWx8VF1sKxLaW+/C1UQEbzHxlzsO6htPw9M/L3lkcytT7UL1TtQ3UQ02kNjY0rr68uort6TkfIBRCxc9z+x7eWIIODKHJ0kAkD11kKLkKkB9AIPYFlbqKjYy9atDmBIJB5HpGSSbS5E9T/mrNJHIF1d60ivlRSMTAzAAX6J6nqKi7sOz+5VVd1BtmvgIp/Q6mr/ZsVmMuHwxYVsfmIDEGnGcX5ISUnT8IKOxmIRjMnl2WUw5vwcrp81SEtLL/ClQrU/vgGk4/UeY968FzjllIHDblu1DNW35dRyertSAEA4vA7V3xSi6fENQLUHy3qKgYHXh2P0PCLknq/PzvH6WYO0tPQicjWqv2CKs4mMZwAuIjuJx1/h7W+Pj+q0xRH5Q04tT0Xg6QxCOjuflK6uD6P6Q6ZwLWU8A0iiupPS0j1er/8IIr3Aqzm1LJLI6fpZiIJFKPQNoG/Cwj4xngEMAl309Q2M/kCamuKoNpPevZMdqjuzvna2YtvfJpV6EX8jiMZlPAMYQPUNFi8+dlBHJHIvqqMfA4NACtXhVz/pOYQ4R7u1O3MRfLah0ej1wBVettQpY6JRgMv8+cecsPGGL99EZGQ+vAhwAGM6EOkmHSK2wHt/ZFvN0tV1X26izw40Fouobd+K6lcpwLrA2A2KLMCY+fT2jllGurp+DKwd8Tw3wFJvlasGkbKjIlVVdyNyae6iz3y8tLlfRfVSCrQjeWwDUF0ILGeC4Z50dFyNyDXAG4w/vatAM8b8k3R0/DwLWWcf8fgngC8XMr/SRKuBTyPy97S3t0y0C1ej0eW47rcQeT+q6fWBtGfoRORRXHejdHXlNnScRXgRw896CbMLxkSW9y5UT+ekkzpIp14ZE+noaAYu8E2y2U48ficif1JoMSbqdCxA5EL6+21ds6bwefxnCVpVdQWwmmmQnmbigBCRJHADlnULu3f3Bsu4uaE1NWfiOD/NYhk9L0z8q0734i8hmbyQFSsWqmrBrXamovX1ZTjOHTko3/cfX2ZuXbUCkX/j0KELqa1dpGvWGJ0G7msmoRUVxcTjP0Lk5Byq8f07n2xQ6H4sax2qd2NMC5/9bGKq0rfMZLSiophweAOq5+KfElP4sAU9m7DwAVSfBzYg8jjz5nWwa1diMsma5hLe8Xf3eIdZ+tWRPohl/TOOsz7XirIRaAEiZyFyM8bcy+DgBUSji4O+wdFoRUUxodAGn5XvYswXpa1tAyI5r6fkItQCXPcsjLkVkW8TjS7X1auDxNEjKSraiMi5+Kd8BdZKe/s6r/6rENmfS4V+bQ93cN1tqK6huHgrTU2JudovULCoq1tKMnk36eQQfnrGJ0gmPz4yqbTW1p6D4/wk2wr9ThDRA/wXxtxFW9uBudgv0OXLT2Zo6E5E/gw/le+6L0t39zFHEFpd3YrIsmyq9Xt2rxK4Gte9mWg0NpceCQqW1tQ0kEjc67vyRVoQ+dsxPzfm3KyrzlOOoCSuuw2RmygtfZyXXz40272B1tQ0eJM878Fft9+LSIO31jJ2+1l6gfwYQBoF9iPyEMbcztKlL7JtW2q2GYKXEOq9qN4OrMRP5asOUFR0tuze/eyERdO5Cl+cbBP5NIBhFOhGdSOWdQ/GNLNsWbrxrVuH8tx2XtFYLMLg4McRuQGo97n6BMZccrjHn4k80ehrqE7qRDLRqqoLMGYtbz3cMR8oxrSi+jCqragaLKuLcPhnNDX1zbRRg9bVVZBMfgX4F/w/T2EQ1fO8iKvMZaquPg+RjZO5Jp0qNn0z1wMXkv+4tJSXi98lnW9gOyJ3Y1k/o7V1H9N8t/Bhl++61wCrhg9h9plbpbPzsmwuVNveByzNtPyRZNGxWIRE4iO47v3AVESmDivZRTWJyAFEngXup6joMVpaDk43Q/Dy+1yJyGXeMTT5oFM6O4863y9T1LavBdZkWv7o8wKqq09H5H8Z45y5KeAQqs2IPIVlPcrAwK9l376CJlXy0r+eg+pNQDn5WQlVoAPVj+caOqe2HQcy2nl1tAGAxbJlJ5BKfZn0gYOFGMsr6Z1JcUQMIm2o/hiRLUQi2/Oda8hbvSvDmDJSqYsR+TywIH8NqgMMIvKX0tn5ZM7VRaNfQPW7mZQd+8yg9CpWLa57G/ChXIXKAT38V8TBdd/EmFcQ2YrqI0QiL2ZiEIeVGg4fMehUaiGue+T/rrsQy1qB634IOBORaDYJmCeFagqRQ8A10tl5m2/V2vYGMojRzMiVqW3/K/BNpnDL0gjcEfmEhuVV0smnXIxxSB+qMAgcBFqBXaj2opoOZBWJAKcAlYjMAwTVhd6+BcsrU0TuO54ni6I6gMjt0tl5pa8VZ5iUMuNnmVZWLsWymiiMEUBa6SMNACaWP9NyhSCOMfsR2ShtbZfnowGtrT0H131wvJ3YGQ/5pKfndS66qBzVTf6IN2lGn/iViVJHl3NJe5S0BykcKeBNVB/Csq7LVyPS1vYoqnvHLZNNxRqLlRKP3zXZ82kCgOHjbUUeJhS6Vlpb875LWm37AGN47qwmfaSp6aB0dJxPaWkJcE8uws0hFHC8vsoThELfmQrlA2BZ7x4rH4Mvz0ZduXIhBw9uJstTK+YA6uVbKkLkd4TDF0tz80tTKkBV1Y8w5pOj3/e1c6S2XQ48ApzhZ70zHAdVRWQfqi8RiXxBWlp2TbUQWlv7dhznaUadXJKX3rHGYscxNPQcUJuP+mcEqukOpzH9qL6C6h1EIg95eRUKII4K0eh3gKtGvp/X4ZFGo6d6p4/PNdKzmMZ0oHovjrNJenraCi2Urlx5PAcP/pERXmBKxsdaW/sZHOd65oZHGCI9p/8IcN902xKvtn0NcHjoOWUTJIePNYc7mJ19BAUeRXUTIm1+zOnnC7XtJtLJPwozQ6YNDQvYs+da4BIKN7PoFwOo/g+h0A3S1tZaaGEywTsh/lFErIJPkWp1te3tcJlpqWO/huN8X3p6Xi+0INmgtv0E8MGCG8BItLr604hsLrQcYyKyDsu6THbvPlBoUXJFq6vficiz08oAhvGCUp4ptBzAH4AHELmPjo6e6RahlCtaXX3PtDSAYXTVqhDNzW9DpB44C9f9GyCf5wy0AQ9hWT/gtNO2z/bDL7WurmJaG8BY6MqVYfr6luZoGG2oPovIb1B9ihNO2DnTw9SzYUYawLHQVatCdHcvYnCwDChHpAxjUrjuXoqKEl5wSC+LFw9IY2Oy0PIGBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAT4z/8DnVdL6hlJuRsAAAAASUVORK5CYII=\",\"type\":\"image/png\",\"created\":\"20210511015705540\",\"modified\":\"20210511015706053\"},\"$:/plugins/sobjornstad/GrokTiddlyWiki/Changes/1.0.1\":{\"title\":\"$:/plugins/sobjornstad/GrokTiddlyWiki/Changes/1.0.1\",\"commit\":\"4fc99def0b99c60bbf7ac682968ce83756209c3b\",\"created\":\"20210818142754702\",\"date\":\"202105211200\",\"modified\":\"20210818142920230\",\"tag\":\"v1.0.1\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"version\":\"1.0.1\",\"text\":\"* The //Takeaways// tab of the sidebar search box was mistakenly finding only collected takeaways; this has been fixed.\\n* Corrected the filter on several live examples in [[Wr:Transclusions]] so that they show output as intended.\\n* Evened out the spacing at the bottom of the in-text takeaway reviewer once all cards have been collected.\\n* Fixed several typos and confusingly worded sentences.\\n\"},\"$:/plugins/sobjornstad/GrokTiddlyWiki/Changes/1.0.2\":{\"title\":\"$:/plugins/sobjornstad/GrokTiddlyWiki/Changes/1.0.2\",\"commit\":\"154024773664662ac0bb4cbdbdc932a7dd3371e5\",\"created\":\"20210818142336453\",\"date\":\"202106061200\",\"modified\":\"20210818142913718\",\"tag\":\"v1.0.2\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"version\":\"1.0.2\",\"text\":\"* Deleting any bookmark was causing all bookmarks to be deleted. This has been fixed and you can now safely delete bookmarks.\\n* Fixed instructions for embedding a font in TW (if you're poking around in the system tiddlers wondering how I did it, you can now find the correct forum thread for reference).\\n* Expanded the prompt for [[Ex:AlphabeticallyLastDescription]] to incorporate user feedback.\\n* Fixed several more incorrect filters on live examples in [[Sn:RubberDucking]].\\n* Fixed several more typos and confusingly worded sentences.\"},\"$:/plugins/sobjornstad/GrokTiddlyWiki/Changes/1.1.0\":{\"title\":\"$:/plugins/sobjornstad/GrokTiddlyWiki/Changes/1.1.0\",\"commit\":\"782898cbc64a523a4f70b696fd1371645cc295a8\",\"created\":\"20210820154424759\",\"date\":\"202109181200\",\"modified\":\"20210918142517836\",\"tag\":\"v1.1.0\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"version\":\"1.1.0\",\"text\":\"I have bumped the minor version number because the interface has improved significantly in several places. Changes to the content are mostly incremental. I've made updates for TiddlyWiki 5.2.0, but they aren't included in this edition since 5.2.0 is still in prerelease at this time.\\n\\n!!! Text\\n\\n* Added a back-matter section on Common Misunderstandings and started it with several items. I'll add more as I encounter them in the forums and elsewhere.\\n* Broke out the instructions for installing TiddlyWiki by operating system, and give sample instructions for a Linux install.\\n* Added an appendix on ways to support //Grok TiddlyWiki// and TiddlyWiki itself.\\n* Added an explanation of why `all[tiddlers+shadows]` appears in so many live examples.\\n* Improved accuracy and completeness of the description of what makes a title CamelCase.\\n* Applied various minor wording and formatting tweaks; thanks to everyone who has pointed out typographical errors and made suggestions!\\n\\n\\n!!! Interface\\n\\n* If you study takeaways in-text on the web, you'll now receive a warning when you finish the section that you should create your own copy of GTW if you want to preserve your progress.\\n* Improved the interface for adding your own takeaways. The interface for Q&A and cloze is now clearly separated, usage guidance is attached to each, and it's no longer possible to accidentally create a blank takeaway by pressing the button without typing anything.\\n* Added contextual help throughout the interface, where a small //Tip// box appears the first time you use a new feature.\\n* Improved the Changes appendix so it shows the date and commit hash of each release.\\n* Changed the arrow symbols used to enter the first/last section of a chapter in the navigation bar, as the symbols we were using weren't in the embedded font and could be missing on some devices.\\n\\n\\n!!! Miscellaneous\\n\\n* Added an upgrader tool that guides you through the process of deleting any takeaways or other tiddlers that have become out of date in the new version.\\n* Created a [[static version|https://groktiddlywiki.com/static/]] of the book for search engines and people on low-bandwidth connections; most of the interactive features are missing, but it's enough for a quick check of a page. A large banner explains this and provides a permalink to the tiddler within the wiki version. The `<noscript>` element in the wiki version also points to the static version.\"},\"$:/plugins/sobjornstad/GrokTiddlyWiki/Changes/1.2.0\":{\"title\":\"$:/plugins/sobjornstad/GrokTiddlyWiki/Changes/1.2.0\",\"commit\":\"f5652b203c27e6a8ff7d29a3718a1eabcd7d715f\",\"created\":\"20211005133750459\",\"date\":\"202110051200\",\"modified\":\"20211005134841334\",\"tag\":\"v1.2.0\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"version\":\"1.2.0\",\"text\":\"This version of //Grok TiddlyWiki// contains content updates to align the text with the following improvements in TiddlyWiki 5.2.0:\\n\\n* Field names [[no longer have character restrictions|Contact Tiddlers]].\\n* Images can now be [[directly inserted|Images and Attachments]] into tiddlers.\\n* HTML [[comments|Comments]] can now [[appear before and between pragmas|Ex:MacroPosition/answer]].\\n* The `$edit-text` widget can now [[edit the tiddler it's contained in|Ex:EditCurrentTiddler/answer]].\\n* `:map` and `:sort` [[filter run prefixes|Multi-Run Filters]] were added.\\n* Macro calls with parameters can now be [[transcluded into a filter|Filters and Transclusions]].\"},\"$:/plugins/sobjornstad/GrokTiddlyWiki/Changes/1.2.1\":{\"title\":\"$:/plugins/sobjornstad/GrokTiddlyWiki/Changes/1.2.1\",\"commit\":\"ed11ebdec45668fe3750eb011aa777369ef2a67a\",\"created\":\"20211129232645958\",\"date\":\"202111291200\",\"modified\":\"20211129232842857\",\"tag\":\"v1.2.1\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"version\":\"1.2.1\",\"text\":\"* Fixed the Takeaway Export List showing an ID of “Preview” for all takeaways under certain circumstances, resulting in broken syncing to Anki.\\n* Fixed several typos and minor wording mistakes.\\n\"},\"$:/plugins/sobjornstad/GrokTiddlyWiki/Changes/1.2.2\":{\"title\":\"$:/plugins/sobjornstad/GrokTiddlyWiki/Changes/1.2.2\",\"commit\":\"ebce4ae167ce5563d2bc3f45ac578842f83ecad1\",\"created\":\"20220103163256891\",\"date\":\"202201031200\",\"modified\":\"20220103171824110\",\"tag\":\"v1.2.2\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"version\":\"1.2.2\",\"text\":\"* The TiddlyRemember plugin has been updated to version 1.3.2.\\n* TiddlyWiki has been updated to version 5.2.1.\\n* Scheduling information maintained by TakeAway will now be exported to Anki when you [[start studying with Anki|TakeAway Help/Studying with Anki]].\\n* The `$let` widget is now used instead of the `$vars` widget, now that it's available in 5.2.1 and pretty much strictly superior.\\n* Fixed several typos, wording mistakes, and other minor errors.\\n\"},\"$:/plugins/sobjornstad/GrokTiddlyWiki/copyright\":{\"title\":\"$:/plugins/sobjornstad/GrokTiddlyWiki/copyright\",\"created\":\"20210131153434996\",\"modified\":\"20210131153336667\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{Copyright}}\\n\"},\"$:/plugins/sobjornstad/GrokTiddlyWiki/readme\":{\"title\":\"$:/plugins/sobjornstad/GrokTiddlyWiki/readme\",\"created\":\"20210131153434996\",\"modified\":\"20210131153336667\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"This plugin contains most of the content of //Grok TiddlyWiki//. This mechanism allows you to edit the wiki freely, whether by deliberately making changes to the text of the book or system tiddlers or by using the embedded features (marking exercises complete, reviewing takeaways, etc.), and retain the ability to update the book to a newer version. Because of the [[shadowing|Shadow Tiddlers]] mechanism of TiddlyWiki, you can update the book by dragging the plugin into an old wiki from a newer version of the book.\\n\\nThe latest plugin version may be found at https://groktiddlywiki.com/#Upgrade.\\n\"},\"$:/sib/DebugRenderTiddler\":{\"title\":\"$:/sib/DebugRenderTiddler\",\"created\":\"20210103000849963\",\"modified\":\"20210103023925688\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$list filter=\\\"[{$:/temp/FeedbackCollector}get[debug]match[yes]]\\\" variable=_>\\n<$list filter=\\\"[all[current]fields[]sort[title]]\\\" variable=fieldName>\\n\\t<<fieldName>>: {{{ [<currentTiddler>get<fieldName>] }}}<br>\\n</$list>\\n</$list>\"},\"$:/sib/DonationLink\":{\"title\":\"$:/sib/DonationLink\",\"created\":\"20210502224659290\",\"modified\":\"20210503015514478\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"https://groktiddlywiki.com/donate\"},\"$:/sib/Exercise/AnswerLink\":{\"title\":\"$:/sib/Exercise/AnswerLink\",\"created\":\"20200718200300480\",\"modified\":\"20210206145709509\",\"tags\":\"$:/tags/EditTemplate $:/tags/ViewTemplate\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$list filter=\\\"[all[current]tag[Exercise]]\\\">\\n  Go to answer: {{{ [all[current]has[draft.of]get[draft.of]addsuffix[/answer]] ~[all[current]addsuffix[/answer]] }}}\\n\\t{{||$:/sib/Exercise/CompletionCheckbox}}\\n\\t\\n</$list>\\n\\n<$list filter=\\\"[all[current]tag[Answer]]\\\">\\n  Go to question: {{{ [all[current]has[draft.of]get[draft.of]removesuffix[/answer]] ~[all[current]removesuffix[/answer]] }}}\\n</$list>\"},\"$:/sib/Exercise/CompletionCheckbox\":{\"title\":\"$:/sib/Exercise/CompletionCheckbox\",\"complete\":\"\",\"created\":\"20210116164747131\",\"modified\":\"20210116213227195\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\t<div class=\\\"twx-completion\\\">\\n\\t<$checkbox field=\\\"complete\\\" checked=\\\"yes\\\" unchecked=\\\"\\\" default=\\\"\\\" tooltip=\\\"Mark this exercise as complete in the exercise list.\\\">&nbsp;Complete</$checkbox>\\n\\t</div>\"},\"$:/sib/Exercise/Stylesheet\":{\"title\":\"$:/sib/Exercise/Stylesheet\",\"created\":\"20210116164850056\",\"modified\":\"20210321002250427\",\"tags\":\"$:/tags/Stylesheet\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"div.twx-completion {\\n\\tfloat: right;\\n}\\n\\ntable.gtw-exercise-browser {\\n\\t\\tfont-size: 12px;\\n\\t\\ttable-layout: fixed;\\n\\t\\twidth: 100%;\\n}\\n\\ntable.gtw-exercise-browser td {\\n\\tvertical-align: top;\\n}\"},\"$:/sib/Fonts/Inconsolata\":{\"title\":\"$:/sib/Fonts/Inconsolata\",\"text\":\"/*! Generated by Font Squirrel (https://www.fontsquirrel.com) on March 20, 2021.\\nThese fonts are licensed under the Open Font License.\\n\\nYou can use them freely in your products & projects - print or digital, commercial or otherwise. However, you can't sell the fonts on their own.\\n\\nThis isn't legal advice, please consider consulting a lawyer and see the full license for all details.\\n*/\\n\\n\\n@font-face {\\n    font-family: 'Inconsolata';\\n    src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),\\n         url(data:application/font-woff;charset=utf-8;base64,) format('woff');\\n    font-weight: normal;\\n    font-style: normal;\\n\\n}\",\"type\":\"text/plain\",\"created\":\"20210320223948686\",\"modified\":\"20210320225403527\",\"tags\":\"$:/tags/Stylesheet\"},\"$:/sib/Fonts/SourceSansPro\":{\"title\":\"$:/sib/Fonts/SourceSansPro\",\"text\":\"/*! Generated by Font Squirrel (https://www.fontsquirrel.com) on March 20, 2021.\\n\\n+------------+--------------------------+-------------+------------+\\n|to get:     | font-family              | font-weight | font-style |\\n+------------+--------------------------+-------------+------------+\\n|regular     | Source Sans Pro          | normal      | normal     |\\n|italic      | Source Sans Pro          | normal      | italic     |\\n|bold        | Source Sans Pro          | bold        | normal     |\\n|bold italic | Source Sans Pro          | bold        | italic     |\\n|semibold    | Source Sans Pro Semibold | normal      | normal     |\\n+------------+--------------------------+-------------+------------+\\n\\nTW font embed instructions: https://groups.google.com/g/tiddlywiki/c/utsLmgHZAhM\\n\\nCopyright 2010, 2012 Adobe Systems Incorporated (http://www.adobe.com/), with Reserved Font Name 'Source'. All Rights Reserved. Source is a trademark of Adobe Systems Incorporated in the United States and/or other countries.\\n\\nThis Font Software is licensed under the SIL Open Font License, Version 1.1.\\nThis license is copied below, and is also available with a FAQ at: http://scripts.sil.org/OFL\\n\\n-----------------------------------------------------------\\nSIL OPEN FONT LICENSE Version 1.1 - 26 February 2007\\n-----------------------------------------------------------\\n\\nPREAMBLE\\nThe goals of the Open Font License (OFL) are to stimulate worldwide development of collaborative font projects, to support the font creation efforts of academic and linguistic communities, and to provide a free and open framework in which fonts may be shared and improved in partnership with others.\\n\\nThe OFL allows the licensed fonts to be used, studied, modified and redistributed freely as long as they are not sold by themselves. The fonts, including any derivative works, can be bundled, embedded, redistributed and/or sold with any software provided that any reserved names are not used by derivative works. The fonts and derivatives, however, cannot be released under any other type of license. The requirement for fonts to remain under this license does not apply to any document created using the fonts or their derivatives.\\n\\nDEFINITIONS\\n\\\"Font Software\\\" refers to the set of files released by the Copyright Holder(s) under this license and clearly marked as such. This may include source files, build scripts and documentation.\\n\\n\\\"Reserved Font Name\\\" refers to any names specified as such after the copyright statement(s).\\n\\n\\\"Original Version\\\" refers to the collection of Font Software components as distributed by the Copyright Holder(s).\\n\\n\\\"Modified Version\\\" refers to any derivative made by adding to, deleting, or substituting -- in part or in whole -- any of the components of the Original Version, by changing formats or by porting the Font Software to a new environment.\\n\\n\\\"Author\\\" refers to any designer, engineer, programmer, technical writer or other person who contributed to the Font Software.\\n\\nPERMISSION & CONDITIONS\\nPermission is hereby granted, free of charge, to any person obtaining a copy of the Font Software, to use, study, copy, merge, embed, modify, redistribute, and sell modified and unmodified copies of the Font Software, subject to the following conditions:\\n\\n1) Neither the Font Software nor any of its individual components, in Original or Modified Versions, may be sold by itself.\\n\\n2) Original or Modified Versions of the Font Software may be bundled, redistributed and/or sold with any software, provided that each copy contains the above copyright notice and this license. These can be included either as stand-alone text files, human-readable headers or in the appropriate machine-readable metadata fields within text or binary files as long as those fields can be easily viewed by the user.\\n\\n3) No Modified Version of the Font Software may use the Reserved Font Name(s) unless explicit written permission is granted by the corresponding Copyright Holder. This restriction only applies to the primary font name as presented to the users.\\n\\n4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font Software shall not be used to promote, endorse or advertise any Modified Version, except to acknowledge the contribution(s) of the Copyright Holder(s) and the Author(s) or with their explicit written permission.\\n\\n5) The Font Software, modified or unmodified, in part or in whole, must be distributed entirely under this license, and must not be distributed under any other license. The requirement for fonts to remain under this license does not apply to any document created using the Font Software.\\n\\nTERMINATION\\nThis license becomes null and void if any of the above conditions are not met.\\n\\nDISCLAIMER\\nTHE FONT SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.\\n*/\\n\\n\\n@font-face {\\n    font-family: 'Source Sans Pro';\\n    src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),\\n         url(data:application/font-woff;charset=utf-8;base64,) format('woff');\\n    font-weight: bold;\\n    font-style: normal;\\n\\n}\\n\\n\\n\\n\\n@font-face {\\n    font-family: 'Source Sans Pro';\\n    src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),\\n         url(data:application/font-woff;charset=utf-8;base64,) format('woff');\\n    font-weight: bold;\\n    font-style: italic;\\n\\n}\\n\\n\\n\\n\\n@font-face {\\n    font-family: 'Source Sans Pro';\\n    src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),\\n         url(data:application/font-woff;charset=utf-8;base64,) format('woff');\\n    font-weight: normal;\\n    font-style: normal;\\n\\n}\\n\\n\\n\\n\\n@font-face {\\n    font-family: 'Source Sans Pro Semibold';\\n    src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),\\n         url(data:application/font-woff;charset=utf-8;base64,) format('woff');\\n    font-weight: normal;\\n    font-style: normal;\\n\\n}\\n\\n\\n@font-face {\\n    font-family: 'Source Sans Pro';\\n    src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),\\n         url(data:application/font-woff;charset=utf-8;base64,) format('woff');\\n    font-weight: normal;\\n    font-style: italic;\\n\\n}\\n\",\"type\":\"text/plain\",\"created\":\"20210320220143398\",\"font-family\":\"source_sans_pro\",\"modified\":\"20210523182710809\",\"tags\":\"$:/tags/Stylesheet\"},\"$:/sib/GeneralMacros\":{\"title\":\"$:/sib/GeneralMacros\",\"created\":\"20210320143048952\",\"modified\":\"20210320143104510\",\"tags\":\"$:/tags/Macro\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define textual-button(imageName) <span class=\\\"gtw-textual-button\\\">{{$:/core/images/$imageName$}}</span>\"},\"$:/sib/Navigator/AnchorFromStaticPage\":{\"title\":\"$:/sib/Navigator/AnchorFromStaticPage\",\"created\":\"20210819150338912\",\"modified\":\"20210819205654231\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<a href={{{ [all[current]encodeuri[]search-replace[/],[%2F]search-replace[:],[%3A]addprefix[https://groktiddlywiki.com/read/#]] }}}>the wiki version of this page</a>\"},\"$:/sib/Navigator/BookmarkMacros\":{\"title\":\"$:/sib/Navigator/BookmarkMacros\",\"created\":\"20210320202428418\",\"modified\":\"20210407165201863\",\"tags\":\"$:/tags/Macro\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define bookmark-tiddler()\\n<$action-listops \\n  $tiddler=\\\"$:/config/sobjornstad/GrokTiddlyWiki/Bookmarks\\\"\\n\\t$field=\\\"text\\\"\\n\\t$subfilter=\\\"[[]addsuffix<currentTiddler>]\\\"/>\\n\\\\end\\n\\n\\\\define unbookmark-tiddler()\\n\\t<$action-listops $tiddler=\\\"$:/config/sobjornstad/GrokTiddlyWiki/Bookmarks\\\" $field=\\\"text\\\" $filter=\\\"[enlist{$:/config/sobjornstad/GrokTiddlyWiki/Bookmarks}] -[all[current]]\\\"/>\\n\\\\end\\n\"},\"$:/sib/Navigator/BookmarkRowTemplate\":{\"title\":\"$:/sib/Navigator/BookmarkRowTemplate\",\"created\":\"20210320200248115\",\"modified\":\"20210320203053743\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$button actions=<<unbookmark-tiddler>> class=\\\"tc-btn-invisible\\\">{{$:/core/images/delete-button}}</$button>&nbsp;<$link/>\"},\"$:/sib/Navigator/BookmarksList\":{\"title\":\"$:/sib/Navigator/BookmarksList\",\"caption\":\"Bookmarks\",\"created\":\"20210320195840485\",\"list-after\":\"$:/core/ui/SideBar/Open\",\"modified\":\"20210407151442059\",\"tags\":\"$:/tags/SideBar\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$list filter=\\\"[{$:/config/sobjornstad/GrokTiddlyWiki/Bookmarks}is[blank]]\\\">\\n\\t<div style=\\\"max-width: 300px;\\\">\\n\\t\\tYou have no bookmarks at the moment. To bookmark a section, click the star icon <<textual-button \\\"star-filled\\\">> in the upper-right of that section's tiddler.\\n\\t</div>\\n</$list>\\n<<list-links-draggable \\\"$:/config/sobjornstad/GrokTiddlyWiki/Bookmarks\\\" field:\\\"text\\\" itemTemplate:\\\"$:/sib/Navigator/BookmarkRowTemplate\\\" class:\\\"gtw-bookmarks-list\\\">>\"},\"$:/sib/Navigator/ContentsSidebar\":{\"title\":\"$:/sib/Navigator/ContentsSidebar\",\"caption\":\"Contents\",\"created\":\"20210313135753386\",\"list-after\":\"$:/sib/Navigator/BookmarksList\",\"modified\":\"20210322011832856\",\"tags\":\"$:/tags/SideBar\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<div class=\\\"gtw-sidebar-outline\\\">\\n\\n<div style=\\\"text-align: center;\\\">\\n[[Go to full outline|Outline]]\\n</div>\\n\\n|!Filter by section name: |<$edit-text tiddler=\\\"$:/temp/OutlineFilter\\\" tag=\\\"input\\\" default=\\\"\\\" type=\\\"text\\\"/>|\\n\\n<ul>\\n<$list filter=\\\"[list[Outline]]\\\">\\n<$list filter=\\\"[enlist{!!list}search:title,caption{$:/temp/OutlineFilter}] [{$:/temp/OutlineFilter}is[blank]then[Supplemental Exercises]] +[first[]]\\\" variable=_>\\n\\t<li>\\n\\t\\t<h3>\\n\\t\\t\\t<$link to={{!!title}}>\\n\\t\\t\\t\\t<$view field=\\\"caption\\\">\\n\\t\\t\\t\\t\\t{{!!title}}\\n\\t\\t\\t\\t</$view>\\n\\t\\t\\t</$link>\\n\\t\\t</h3>\\n\\t\\t<ul>\\n\\t\\t\\t<$list filter=\\\"[enlist{!!list}search:title,caption{$:/temp/OutlineFilter}]\\\">\\n\\t\\t\\t\\t<li><$link to={{!!title}}/></li>\\n\\t\\t\\t</$list>\\n\\t\\t</ul>\\n\\t</li>\\n\\t<br>\\n</$list>\\n</$list>\\n</ul>\\n</div>\\n\\n<style>\\ndiv.gtw-sidebar-outline ul ul {\\n\\tmargin-left: 0;\\n\\tpadding-left: 0;\\n}\\n\\ndiv.gtw-sidebar-outline ul {\\n  margin-left: 0;\\n\\tpadding-left: 0;\\n\\tlist-style-type: none;\\n}\\n\\ndiv.gtw-sidebar-outline h3 {\\n\\tmargin-top: 1ex;\\n\\tborder-bottom: 0.05px solid <<color foreground>>;\\n\\tpadding-bottom: 2px;\\n\\tmargin-bottom: 10px;\\n\\tmax-width: 300px;\\n}\\n\\ndiv.gtw-sidebar-outline svg {\\n\\theight: 16px;\\n}\\n\\ndiv.gtw-sidebar-outline table {\\n\\twidth: 90%;\\n\\tmax-width: 400px;\\n\\tmargin-bottom: 0.3in;\\n}\\ndiv.gtw-sidebar-outline table input[type=\\\"text\\\"] {\\n\\twidth: 100%;\\n}\\n</style>\"},\"$:/sib/Navigator/LinksBar\":{\"title\":\"$:/sib/Navigator/LinksBar\",\"created\":\"20210120005004574\",\"list-after\":\"$:/core/ui/SideBarSegments/site-subtitle\",\"modified\":\"20210503023308990\",\"tags\":\"$:/tags/SideBarSegment\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<div class=\\\"gtw-sidebar-links\\\">\\n[[home|Welcome to Grok TiddlyWiki]]&nbsp;·\\n[[outline|Outline]]&nbsp;·\\n[[exercises|Exercise Browser]]&nbsp;·\\n[[takeaways|Takeaway Browser]]&nbsp;·\\n<a href={{$:/sib/DonationLink}} class=\\\"tc-tiddlylink tc-tiddlylink-resolves\\\">donate</a>\\n</div>\\n<style>\\n.gtw-sidebar-links a, .gtw-sidebar-links button {\\n\\tcolor: <<color sidebar-foreground>>;\\n\\ttext-decoration: underline;\\n}\\n</style>\\n<!--\\n<$button class=\\\"tc-btn-invisible tc-tiddlylink tc-tiddlylink-resolves\\\">\\n\\t<<startReviewSessionAction>>\\n\\ttakeaways\\n</$button>&nbsp;·\\n-->\"},\"$:/sib/Navigator/NewBookmarkButton\":{\"title\":\"$:/sib/Navigator/NewBookmarkButton\",\"caption\":\"Toggle bookmark\",\"created\":\"20210320195437123\",\"description\":\"Add or remove the current tiddler to/from the //Bookmarks// sidebar tab\",\"list-after\":\"$:/core/ui/Buttons/more-tiddler-actions\",\"modified\":\"20210507013336738\",\"tags\":\"$:/tags/ViewToolbar\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\whitespace trim\\n\\n\\\\define not-selected()\\n\\t<$button actions=<<bookmark-tiddler>> class=<<tv-config-toolbar-class>> selectedClass=\\\"tc-selected\\\" tooltip=\\\"Bookmark tiddler\\\">\\n\\t\\t<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n\\t\\t\\t {{$:/core/images/star-filled}}\\n\\t\\t</$list>\\n\\t\\t<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n\\t\\t\\t<span class=\\\"tc-btn-text\\\"><$text text=\\\"Bookmark tiddler\\\"/></span>\\n\\t\\t</$list>\\n\\t</$button>\\n\\\\end\\n\\n\\\\define selected()\\n\\t<$button actions=<<unbookmark-tiddler>> class=<<tv-config-toolbar-class>> selectedClass=\\\"tc-selected\\\" tooltip=\\\"Remove bookmark\\\">\\n\\t\\t<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n\\t\\t\\t <span class=\\\"gtw-yellow-me\\\">{{$:/core/images/star-filled}}</span>\\n\\t\\t</$list>\\n\\t\\t<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n\\t\\t\\t<span class=\\\"tc-btn-text\\\"><$text text=\\\"Remove bookmark\\\"/></span>\\n\\t\\t</$list>\\n\\t</$button>\\n\\\\end\\n\\n<$list filter=\\\"[[$:/config/sobjornstad/GrokTiddlyWiki/Bookmarks]contains:text<currentTiddler>!is[blank]then[yes]]\\\" emptyMessage=<<not-selected>> variable=_>\\n\\t<<selected>>\\n</$list>\\n\\n<style>\\n.gtw-yellow-me svg {\\n  fill: yellow !important;\\n\\tstroke: black !important;\\n}\\n</style>\"},\"$:/sib/Navigator/Related\":{\"title\":\"$:/sib/Navigator/Related\",\"created\":\"20210206184132111\",\"modified\":\"20210409015113274\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define linkDisplay(title, filter, cssClass)\\n<div class=<<__cssClass__>>>\\n<div style=\\\"text-align: center;\\\">$title$:</div>\\n\\n<ul>\\n<$list filter=<<__filter__>> emptyMessage=\\\"<div style='text-align: center;'>//(none)//</div>\\\">\\n  <li>\\n        <$link/>&ensp;\\n\\t\\t\\t\\t<span style=\\\"font-size: 80%;\\\">\\n\\t\\t\\t\\t\\t<$list filter=\\\"[enlist{!!tags}sort[]]\\\">\\n\\t\\t\\t\\t\\t\\t<$macrocall $name=\\\"tag-pill\\\" tag=<<currentTiddler>>/>\\n\\t\\t\\t\\t\\t</$list>\\n\\t\\t\\t\\t</span>\\n        <div class=\\\"sib-excerpt\\\">{{!!description}}</div>\\n  </li>\\n</$list>\\n</ul>\\n</div>\\n\\\\end\\n\\n\\n<$reveal stateTitle=\\\"$:/temp/ReferenceState\\\"\\n\\t\\t\\t   stateIndex=<<currentTiddler>>\\n\\t\\t\\t   type=\\\"match\\\"\\n\\t\\t\\t   text=\\\"hide\\\"\\n\\t\\t\\t   default=\\\"hide\\\">\\n\\t<div style=\\\"text-align: center;\\\">\\n\\t<$button setTitle=\\\"$:/temp/ReferenceState\\\"\\n\\t\\t\\t\\t\\t setIndex=<<currentTiddler>>\\n\\t\\t\\t\\t\\t setTo=\\\"show\\\"\\n\\t\\t\\t\\t\\t class=\\\"tc-btn-invisible tc-tiddlylink\\\">\\n\\t\\t\\t\\t\\t {{$:/core/images/unfold-button}} show related topics\\n\\t</$button>\\n\\t</div>\\n</$reveal>\\n\\n<$reveal stateTitle=\\\"$:/temp/ReferenceState\\\"\\n\\t\\t\\t   stateIndex=<<currentTiddler>>\\n\\t\\t\\t   type=\\\"match\\\"\\n\\t\\t\\t   text=\\\"show\\\"\\n\\t\\t\\t   default=\\\"hide\\\">\\n\\t<div style=\\\"text-align: center;\\\">\\n\\t<$button setTitle=\\\"$:/temp/ReferenceState\\\"\\n\\t\\t\\t\\t\\t setIndex=<<currentTiddler>>\\n\\t\\t\\t\\t\\t setTo=\\\"hide\\\"\\n\\t\\t\\t\\t\\t class=\\\"tc-btn-invisible tc-tiddlylink\\\">\\n\\t\\t{{$:/core/images/fold-button}} hide related topics\\n\\t</$button>\\n\\t</div>\\n\\t<div class=\\\"gtw-bordered-element sib-link-display\\\">\\n\\t\\t<$set name=\\\"xrefName\\\" value={{{ [[Mentioned by //]addsuffix<currentTiddler>addsuffix[//]] }}}>\\n\\t\\t\\t<$macrocall $name=linkDisplay title=<<xrefName>>  filter=\\\"[all[current]links[]sort[]]\\\" cssClass=\\\"sib-links\\\"/>\\n\\t\\t</$set>\\n\\t\\t<$set name=\\\"xrefName\\\" value={{{ [[Mentions of //]addsuffix<currentTiddler>addsuffix[//]] }}}>\\n\\t\\t\\t<$macrocall $name=linkDisplay title=<<xrefName>> filter=\\\"[[$:/plugins/sobjornstad/GrokTiddlyWiki]plugintiddlers[]] :filter[links[]match<currentTiddler>] [all[current]backlinks[]]\\\" cssClass=\\\"sib-backlinks\\\"/>\\n\\t\\t</$set>\\n\\t</div>\\n</$reveal>\\n\\n\\n<style>\\ndiv.sib-link-display {\\n\\tmargin-top: 0.5em;\\n  overflow: auto;\\n}\\ndiv.sib-link-display div ul {\\n  list-style-type: none;\\n  padding-left: 0;\\n}\\ndiv.sib-link-display div ul div.sib-excerpt {\\n  padding-left: 1em;\\n  color: <<colour muted-foreground>>;\\n}\\n\\ndiv.sib-links {\\n  width: 50%;\\n  float: left;\\n  padding-right: 0.5em;\\n}\\ndiv.sib-backlinks {\\n  width: 50%;\\n  float: right;\\n  padding-left: 0.5em;\\n}\\n</style>\\n\"},\"$:/sib/Navigator/SectionNavigation\":{\"title\":\"$:/sib/Navigator/SectionNavigation\",\"created\":\"20210124164801589\",\"list-before\":\"$:/sib/Navigator/Related\",\"modified\":\"20210819132450925\",\"tags\":\"$:/tags/ViewTemplate\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$list filter=\\\"[all[current]tag[Chapter]] [all[current]tag[Section]]\\\">\\n<$vars prevSection={{{ [list{!!parent}before{!!title}] }}}\\n       nextSection={{{ [list{!!parent}after{!!title}] }}}\\n\\t\\t\\t upChapter={{!!parent}}>\\n\\n<div class=\\\"gtw-section-manager\\\">\\n\\t<div style=\\\"text-align: left;\\\">\\n\\t\\t<$list filter=\\\"[<prevSection>!is[blank]tag[Section]]\\\">\\n\\t\\t\\t←&nbsp;<$link to=<<prevSection>>>Previous: <<prevSection>></$link>\\n\\t\\t</$list>\\n\\t\\t<$list filter=\\\"[<prevSection>!is[blank]tag[Chapter]]\\\" variable=_>\\n\\t\\t\\t<$list variable=\\\"lastSectionInPreviousChapter\\\" filter=\\\"[list<prevSection>last[]]\\\">\\n\\t\\t\\t\\t&larr;&nbsp;<$link to=<<lastSectionInPreviousChapter>>>Last section in previous chapter: <$text text=<<lastSectionInPreviousChapter>>>/</$text></$link>\\n\\t\\t\\t\\t<br>\\n\\t\\t\\t</$list>\\n\\t\\t\\t&#10232;&nbsp;<$link to=<<prevSection>>>Previous chapter: <<prevSection>></$link>\\n\\t\\t</$list>\\n\\t\\t<$list filter=\\\"[<prevSection>is[blank]]\\\" variable=_>\\n\\t\\t\\t<$set name=\\\"endMessage\\\" filter=\\\"[all[current]tag[Chapter]]\\\" value=\\\"//at beginning of book//\\\" emptyValue=\\\"//at first section//\\\">\\n\\t\\t\\t<$list filter=\\\"[list[Outline]before<upChapter>]\\\" emptyMessage=<<endMessage>>>\\n\\t\\t\\t\\t&#10232;&nbsp;<$link to=<<currentTiddler>>>Previous chapter: <<currentTiddler>></$link>\\n\\t\\t\\t</$list>\\n\\t\\t\\t</$set>\\n\\t\\t</$list>\\n\\t</div>\\n\\t\\n\\t<div style=\\\"text-align: right;\\\">\\n\\t\\t<$list filter=\\\"[<nextSection>!is[blank]tag[Section]]\\\">\\n\\t\\t\\t<$link to=<<nextSection>>>Next: <<nextSection>></$link>&nbsp;→\\n\\t\\t</$list>\\n\\t\\t<$list filter=\\\"[<nextSection>!is[blank]tag[Chapter]]\\\" variable=_>\\n\\t\\t\\t<$list variable=\\\"firstSectionInThisChapter\\\" filter=\\\"[list<currentTiddler>first[]]\\\">\\n\\t\\t\\t\\t<$link to=<<firstSectionInThisChapter>>>First section in this chapter: <$text text=<<firstSectionInThisChapter>>>/</$text></$link>&nbsp;&rarr;\\n\\t\\t\\t\\t<br>\\n\\t\\t\\t</$list>\\n\\t\\t\\t<$link to=<<nextSection>>>Next chapter: <<nextSection>></$link>&nbsp;&#10233;\\n\\t\\t</$list>\\n\\t\\t<$list filter=\\\"[<nextSection>is[blank]]\\\" variable=_>\\n\\t\\t\\t<$list filter=\\\"[list[Outline]after<upChapter>]\\\">\\n\\t\\t\\t\\t<$link to=<<currentTiddler>>>Next chapter: <<currentTiddler>></$link>&nbsp;&#10233;\\n\\t\\t\\t</$list>\\n\\t\\t\\t<$list filter=\\\"[list[Outline]after<upChapter>then[]else[x]!is[blank]]\\\" variable=_>\\n\\t\\t\\t\\t<$list filter=\\\"[all[current]tag[Chapter]]\\\">\\n\\t\\t\\t\\t\\t<$list variable=\\\"firstSectionInThisChapter\\\" filter=\\\"[list<currentTiddler>first[]]\\\">\\n\\t\\t\\t\\t\\t\\t<$link to=<<firstSectionInThisChapter>>>First section in this chapter: <$text text=<<firstSectionInThisChapter>>>/</$text></$link>&nbsp;&rarr;\\n\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t</$list>\\n\\t\\t\\t\\t\\t//at last chapter//\\n\\t\\t\\t\\t</$list>\\n\\t\\t\\t\\t<$list filter=\\\"[all[current]!tag[Chapter]]\\\">\\n\\t\\t\\t\\t  //at end of book//\\n\\t\\t\\t\\t</$list>\\n\\t\\t\\t</$list>\\n\\t\\t</$list>\\n\\t</div>\\n</div>\\n\\n<div style=\\\"text-align: center; clear: both; padding-top: 1em;\\\">\\n\\t<$list filter=\\\"[all[current]tag[Section]]\\\">\\n\\t\\t&uarr;&nbsp;<$link to=<<upChapter>>><$text text={{{ [<upChapter>get[caption]] }}}/></$link>\\n\\t</$list>\\n\\t<$list filter=\\\"[all[current]tag[Chapter]]\\\">\\n\\t\\t&uarr;&nbsp;[[Outline]]\\n\\t</$list>\\n</div>\\n<div style=\\\"text-align: center; padding-top: 0.2em;\\\">\\n<<sendFeedbackLink icon:\\\"{{$:/core/images/mail}}\\\" tooltip:\\\"Suggest an improvement to this section.\\\">>\\n</div>\\n<div style=\\\"padding-top: 0.2em;\\\">\\n  {{||$:/sib/Navigator/Related}}\\n</div>\\n\\n</$vars>\\n\\n<style>\\ndiv.gtw-section-manager div {\\n\\tborder-top: 1px solid <<color table-border>>;\\n\\tpadding-top: 10px;\\n\\tmargin-top: 6ex;\\n\\twidth: 50%;\\n\\tfloat: left;\\n}\\n</style>\\n</$list>\"},\"$:/sib/Navigator/SectionSelector\":{\"title\":\"$:/sib/Navigator/SectionSelector\",\"created\":\"20210131192658407\",\"modified\":\"20210209021626335\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$select tiddler=\\\"$:/temp/SelectedSection\\\" default=\\\"\\\">\\n\\t<option value=\\\"\\\">(any section)</option>\\n\\t<$list filter=<<selectorFilter>>>\\n\\t\\t<option value=<<currentTiddler>>><<currentTiddler>></option>\\n\\t</$list>\\n</$select>\"},\"$:/sib/PaletteSwitchButton\":{\"title\":\"$:/sib/PaletteSwitchButton\",\"created\":\"20210322234549335\",\"list-before\":\"$:/core/ui/Buttons/save-wiki\",\"modified\":\"20210322235453069\",\"tags\":\"$:/tags/PageControls\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define darken-palette() <$action-setfield $tiddler=\\\"$:/palette\\\" $value=\\\"$:/palettes/Twilight\\\"/>\\n\\\\define lighten-palette() <$action-setfield $tiddler=\\\"$:/palette\\\" $value=\\\"$:/palettes/SpartanDay\\\"/>\\n\\n\\\\define darken-button()\\n<$button actions=<<darken-palette>> class=<<tv-config-toolbar-class>> selectedClass=\\\"tc-selected\\\" tooltip=\\\"Switch to dark mode\\\">\\n\\t\\t<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n\\t\\t\\t {{$:/core/images/palette}}\\n\\t\\t</$list>\\n\\t\\t<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n\\t\\t\\t<span class=\\\"tc-btn-text\\\"><$text text=\\\"Dark mode\\\"/></span>\\n\\t\\t</$list>\\n\\t</$button>\\n\\\\end\\n\\n\\\\define lighten-button()\\n<$button actions=<<lighten-palette>> class=<<tv-config-toolbar-class>> selectedClass=\\\"tc-selected\\\" tooltip=\\\"Switch to light mode\\\">\\n\\t\\t<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n\\t\\t\\t {{$:/core/images/palette}}\\n\\t\\t</$list>\\n\\t\\t<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n\\t\\t\\t<span class=\\\"tc-btn-text\\\"><$text text=\\\"Light mode\\\"/></span>\\n\\t\\t</$list>\\n\\t</$button>\\n\\\\end\\n\\n<$list filter=\\\"[[$:/palette]text[$:/palettes/SpartanDay]]\\\" emptyMessage=<<lighten-button>>><<darken-button>></$list>\"},\"$:/sib/SendFeedbackWidget\":{\"title\":\"$:/sib/SendFeedbackWidget\",\"text\":\"/*\\\\\\ntitle: action-sendfeedback\\ntype: application/javascript\\nmodule-type: widget\\nAction widget to call an API.\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nlet ENDPOINT = \\\"https://zaoi8ogjy4.execute-api.us-east-1.amazonaws.com/default/ReceiveGrokTiddlyWikiFeedback\\\";\\n\\nfunction gfv(id) {\\n\\t\\treturn document.getElementById(id).value\\n}\\n\\nfunction sendRequest(url, params, callback) {\\n\\t\\tlet xhr = new XMLHttpRequest();\\n\\t\\txhr.open('POST', url, true);\\n\\t\\txhr.responseType = 'json';\\n\\t\\txhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\\n\\n\\t\\txhr.onload = () => {\\n\\t\\t\\t\\tlet status = xhr.status;\\n\\t\\t\\t\\tif (status == 200) {\\n\\t\\t\\t\\t\\t\\tconsole.log(xhr.response);\\n\\t\\t\\t\\t\\t\\tif (xhr.response[\\\"status\\\"] == \\\"success\\\") {\\n\\t\\t\\t\\t\\t\\t\\t\\tcallback(null, xhr.response);\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tcallback(status, xhr.response);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tcallback(status, xhr.response);\\n\\t\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\t// Turn the data object into an array of URL-encoded key/value pairs.\\n\\t\\t// https://stackoverflow.com/questions/9713058/send-post-data-using-xmlhttprequest\\n\\t\\tlet urlEncodedDataPairs = [], name;\\n\\t\\tfor (name in params) {\\n\\t\\t\\t\\turlEncodedDataPairs.push(encodeURIComponent(name) + '=' + encodeURIComponent(params[name]));\\n\\t\\t}\\n\\t\\txhr.send(urlEncodedDataPairs.join('&'))\\n};\\n\\nfunction submitFeedback(tiddler, email, comment, debug) {\\n\\t\\tvar params = new Object();\\n\\t\\tparams.tiddler = tiddler\\n\\t\\tparams.email = email\\n\\t\\tparams.comment = comment\\n\\t\\tparams.debug = debug\\n\\n\\t\\tsendRequest(ENDPOINT, params, (err, data) => {\\n\\t\\t\\t\\tif (err != null) {\\n\\t\\t\\t\\t\\t\\talert(\\\"Error submitting feedback: \\\" + data.reason);\\n\\t\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\talert(\\\"Thank you! Your feedback was successfully submitted.\\\");\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t});\\n}\\n\\n\\nvar Widget = require(\\\"$:/core/modules/widgets/widget.js\\\").widget;\\n\\nvar FeedbackWidget = function(parseTreeNode,options) {\\n\\tthis.initialise(parseTreeNode,options);\\n};\\n\\n/*\\nInherit from the base widget class\\n*/\\nFeedbackWidget.prototype = new Widget();\\n\\n/*\\nRender this widget into the DOM\\n*/\\nFeedbackWidget.prototype.render = function(parent,nextSibling) {\\n\\tthis.computeAttributes();\\n\\tthis.execute();\\n};\\n\\n/*\\nCompute the internal state of the widget\\n*/\\nFeedbackWidget.prototype.execute = function() {\\n\\tthis.tiddlerName = this.getAttribute(\\\"tiddler\\\");\\n\\tthis.email = this.getAttribute(\\\"email\\\");\\n\\tthis.comment = this.getAttribute(\\\"comment\\\");\\n\\tthis.debuginfo = this.getAttribute(\\\"debuginfo\\\");\\n};\\n\\n/*\\nRefresh the widget by ensuring our attributes are up to date\\n*/\\nFeedbackWidget.prototype.refresh = function(changedTiddlers) {\\n\\tvar changedAttributes = this.computeAttributes();\\n\\tif(changedAttributes[\\\"name\\\"]) {\\n\\t\\tthis.refreshSelf();\\n\\t\\treturn true;\\n\\t}\\n\\treturn this.refreshChildren(changedTiddlers);\\n};\\n\\n/*\\nInvoke the action associated with this widget\\n*/\\nFeedbackWidget.prototype.invokeAction = function(triggeringWidget,event) {\\n\\treturn submitFeedback(this.tiddlerName, this.email, this.comment, this.debuginfo);\\n};\\n\\nexports[\\\"action-sendfeedback\\\"] = FeedbackWidget;\\n\\n})();\",\"type\":\"application/javascript\",\"module-type\":\"widget\",\"created\":\"20210102234204312\",\"modified\":\"20210103023121649\",\"tags\":\"\"},\"$:/sib/SimpleAnalytics\":{\"title\":\"$:/sib/SimpleAnalytics\",\"text\":\"<!--\\nThis snippet sends pageviews to Simple Analytics, a privacy-friendly analytics service.\\nIt records only aggregate statistics and cannot identify you.\\n-->\\n<script>window.sa_event=window.sa_event||function(){a=[].slice.call(arguments);sa_event.q?sa_event.q.push(a):sa_event.q=[a]};</script>\\n<script async defer src=\\\"https://scripts.simpleanalyticscdn.com/latest.js\\\"></script>\\n<noscript><img src=\\\"https://queue.simpleanalyticscdn.com/noscript.gif\\\" alt=\\\"\\\"\\n/></noscript>\",\"type\":\"text/html\",\"created\":\"20200913152403709\",\"modified\":\"20210507013622338\",\"tags\":\"$:/tags/RawMarkup\"},\"$:/sib/Snippet/MagicEditor\":{\"title\":\"$:/sib/Snippet/MagicEditor\",\"caption\":\"{{$:/core/images/edit-button}} Edit\",\"created\":\"20210117004717893\",\"modified\":\"20210321011733040\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<div class=\\\"msbs-snippet\\\" style=\\\"padding-top: 3ex;\\\">\\n\\n<$edit\\n  field=\\\"text\\\"\\n  class=\\\"tc-edit-texteditor tc-edit-texteditor-body\\\"\\n  placeholder={{$:/language/EditTemplate/Body/Placeholder}}\\n  tabindex={{$:/config/EditTabIndex}}\\n  focus={{{ [{$:/config/AutoFocus}match[text]then[true]] ~[[false]] }}}\\n  cancelPopups=\\\"yes\\\"\\n/>\\n\\n</div>\\n<div class=\\\"msbs-snippet\\\">\\n\\n{{||$:/sib/Snippet/TiddlerAsRendered}}\\n\\n</div>\\n<!--{{||$:/core/ui/EditTemplate/body/editor}}-->\"},\"$:/sib/Snippet/MagicSideBySide\":{\"title\":\"$:/sib/Snippet/MagicSideBySide\",\"caption\":\"{{$:/core/images/full-screen-button}} Side-by-side\",\"created\":\"20210116173017782\",\"modified\":\"20210320140908903\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<div class=\\\"msbs-snippet\\\">\\n\\n{{||$:/sib/Snippet/TiddlerAsWikitext}}\\n\\n</div>\\n<div class=\\\"msbs-snippet\\\">\\n\\n{{||$:/sib/Snippet/TiddlerAsRendered}}\\n\\n</div>\"},\"$:/sib/Snippet/TiddlerAsRendered\":{\"title\":\"$:/sib/Snippet/TiddlerAsRendered\",\"caption\":\"{{$:/core/images/preview-open}} Output\",\"created\":\"20201231195658011\",\"modified\":\"20210320140633946\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{!!text}}\"},\"$:/sib/Snippet/TiddlerAsWikitext\":{\"title\":\"$:/sib/Snippet/TiddlerAsWikitext\",\"caption\":\"{{$:/core/images/file}} Wikitext\",\"created\":\"20201231193531505\",\"modified\":\"20210320140852289\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$codeblock code={{!!text}} language=\\\"html\\\"/>\"},\"$:/sib/SplashScreen\":{\"title\":\"$:/sib/SplashScreen\",\"created\":\"20210213212106138\",\"modified\":\"20210213212120444\",\"tags\":\"$:/tags/RawMarkupWikified/TopBody\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\import [[$:/core/ui/PageMacros]] [all[shadows+tiddlers]tag[$:/tags/Macro]!has[draft.of]]\\n\\\\rules only filteredtranscludeinline transcludeinline macrocallinline\\n\\n<!-- Spinner mechanism shamelessly stolen from https://tiddlywiki.org. -->\\n\\n<div class=\\\"tc-remove-when-wiki-loaded\\\">\\n<style scoped>\\n\\n.tc-splash-text {\\n    font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n    font-size: 16px;\\n    text-rendering: optimizeLegibility;\\n    -webkit-font-smoothing: antialiased;\\n\\tmargin: 20px auto 0;\\n\\twidth: 200px;\\n\\ttext-align: center;\\n\\tcolor: <<colour foreground>>;\\n\\tfill: <<colour foreground>>;\\n}\\n\\n.tc-splash-text img {\\n\\twidth: 150px;\\n\\t<<box-shadow \\\"2px 2px 10px rgba(0, 0, 0, 0.5)\\\">>\\n}\\n\\nhtml body.tc-body {\\n\\tbackground: <<colour page-background>>;\\n}\\n\\n/*\\nSpinner from https://github.com/tobiasahlin/SpinKit/ by Tobias Ahlin\\n\\nThe MIT License (MIT)\\n\\nCopyright (c) 2015 Tobias Ahlin\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of\\nthis software and associated documentation files (the \\\"Software\\\"), to deal in\\nthe Software without restriction, including without limitation the rights to\\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\\nthe Software, and to permit persons to whom the Software is furnished to do so,\\nsubject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n*/\\n\\n.tc-splash-spinner {\\n\\tmargin: 20px auto 0;\\n\\twidth: 70px;\\n\\ttext-align: center;\\n}\\n\\n.tc-splash-spinner > div {\\n\\twidth: 18px;\\n\\theight: 18px;\\n\\tborder-radius: 100%;\\n\\tdisplay: inline-block;\\n\\t-webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;\\n\\tanimation: sk-bouncedelay 1.4s infinite ease-in-out both;\\n\\tbackground-color: #f88;\\n}\\n\\n.tc-splash-spinner .tc-splash-bounce-1 {\\n\\t-webkit-animation-delay: -0.32s;\\n\\tanimation-delay: -0.32s;\\n\\tbackground-color: #8f8;\\n}\\n\\n.tc-splash-spinner .tc-splash-bounce-2 {\\n\\t-webkit-animation-delay: -0.16s;\\n\\tanimation-delay: -0.16s;\\n\\tbackground-color: #88f;\\n}\\n\\n@-webkit-keyframes sk-bouncedelay {\\n\\t0%, 80%, 100% { -webkit-transform: scale(0) }\\n\\t40% { -webkit-transform: scale(1.0) }\\n}\\n\\n@keyframes sk-bouncedelay {\\n\\t0%, 80%, 100% { \\n\\t-webkit-transform: scale(0);\\n\\ttransform: scale(0);\\n\\t} 40% { \\n\\t-webkit-transform: scale(1.0);\\n\\ttransform: scale(1.0);\\n\\t}\\n}\\n</style>\\n\\n<div class=\\\"tc-splash-spinner\\\">\\n  <div class=\\\"tc-splash-bounce-1\\\"></div>\\n  <div class=\\\"tc-splash-bounce-2\\\"></div>\\n  <div class=\\\"tc-splash-bounce-3\\\"></div>\\n</div>\\n\\n<div class=\\\"tc-splash-text\\\">\\n\\tLoading <em>Grok TiddlyWiki</em>…\\n</div>\\n</div>\\n\"},\"$:/sib/Stylesheet\":{\"title\":\"$:/sib/Stylesheet\",\"created\":\"20210116181556596\",\"modified\":\"20210817193348391\",\"tags\":\"$:/tags/Stylesheet\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"div.msbs-snippet {\\n\\twidth: 48%;\\n\\tdisplay: inline-block;\\n\\tvertical-align: top;\\n\\tmargin: 0;\\n\\tpadding-left: 5px;\\n\\tpadding-right: 5px;\\n}\\n\\ndiv.msbs-snippet pre {\\n\\tmargin-top: 0;\\n\\tmargin-bottom: 0;\\n}\\n\\n.sib-magic-bottom-border .tc-tab-content {\\n  margin: 0;\\n\\tborder-bottom: 1px solid <<color tab-border>>;\\n}\\n\\n.ltc-link {\\n\\tborder-bottom: 1px dashed <<color \\\"tiddler-link-foreground\\\">>;\\n\\tdisplay: inline;\\n}\\n\\ntable.gtw-form {\\n\\twidth: 100%;\\n\\tfont-size: 14px;\\n}\\ntable.gtw-form th {\\n\\ttext-align: left;\\n}\\ntable.gtw-form td input[type=text], table.gtw-form td select {\\n\\twidth: 100%;\\n}\\ntable.gtw-form td {\\n\\tvertical-align: top;\\n}\\n\\n.gtw-bordered-element {\\n\\tborder: 2px solid <<color button-border>>;\\n\\tpadding: 5px;\\n}\\n\\n.gtw-textual-button svg {\\n\\tfont-size: 0.6em;\\n\\tpadding: 0.2em;\\n\\tmargin: 1px;\\n\\tbackground: none;\\n\\tborder: 1px solid <<colour tiddler-controls-foreground>>;\\n\\tborder-radius: 0.25em;\\n  height: 18px;\\n\\twidth: 18px;\\n\\tmargin-bottom: -2px;\\n}\\n\\n.gtw-textual-icon svg {\\n\\tfont-size: 0.6em;\\n\\tpadding: 0.2em;\\n\\tmargin: 1px;\\n\\tbackground: none;\\n  height: 16px;\\n\\twidth: 16px;\\n\\tmargin-bottom: -3px;\\n}\\n\\n.gtw-bookmarks-list {\\n\\tlist-style-type: none;\\n\\tmargin-left: 0;\\n\\tpadding-left: 0;\\n}\\n\\n/* Add more horizontal space and a border for headings, except the title. */\\nh2:not(.tc-title) {\\n  /*margin-top: 6ex; -- for some bizarre reason Firefox and Chrome are calculating ex-height differently, so eyeballed an appropriate number of inches*/\\n  margin-top: 0.4in;\\n  padding-bottom: 5px;\\n\\tborder-bottom: 0.05px solid <<color foreground>>;\\n}\\n\\n/* Limit line length to a traditionally-longish but readable value. */\\ndiv.tc-tiddler-body {\\n  max-width: 35em;\\n\\tmargin: auto;\\n}\\n\\ndiv[data-tiddler-title*=\\\"Outline\\\"] div.tc-tiddler-body,\\ndiv[data-tiddler-title*=\\\"Exercise Browser\\\"] div.tc-tiddler-body,\\ndiv[data-tiddler-title*=\\\"Takeaway Browser\\\"] div.tc-tiddler-body,\\ndiv[data-tiddler-title*=\\\"interface.png\\\"] div.tc-tiddler-body,\\ndiv[data-tiddler-title*=\\\"Send Feedback\\\"] div.tc-tiddler-body,\\ndiv[data-tiddler-title*=\\\"Wikitext Reference\\\"] div.tc-tiddler-body\\n{\\n\\tmax-width: 100%;\\n}\\n\\n/* Allow the story river to get a good bit wider than the text since this gives useful space to the navbars and balances out any empty space more nicely, but not so long that it looks ridiculous. */\\ndiv.tc-tiddler-frame {\\n  max-width: 60em;\\n\\tmargin-left: auto;\\n\\tmargin-right: auto;\\n}\\n\\n.tc-storyview-zoomin-tiddler {\\n\\tposition: unset;\\n}\\n\\n/* Because most of our content is shadow tiddlers, it doesn't make sense to bold the links. */\\na.tc-tiddlylink-shadow {\\n\\tfont-weight: normal;\\n}\\n\\n/* The close link color is nearly invisible on the dark palette. */\\n.tc-sidebar-lists button.gtw-close-link {\\n\\tcolor: <<color muted-foreground>>;\\n}\"},\"$:/sib/TooManyTiddlersBanner\":{\"title\":\"$:/sib/TooManyTiddlersBanner\",\"created\":\"20210407162959692\",\"list-after\":\"$:/plugins/sobjornstad/TakeAway/ReviewNotificationBanner\",\"modified\":\"20210407165301941\",\"tags\":\"$:/tags/SideBarSegment\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$set name=\\\"numOpen\\\" value={{{ [enlist{$:/StoryList!!list}count[]] }}}>\\n<$list filter=\\\"[{$:/config/sobjornstad/GrokTiddlyWiki/HideOpenTiddlersWarning}!text[yes]is[blank]]\\\">\\n<$list filter=\\\"[enlist{$:/StoryList!!list}count[]compare:number:gt[20]]\\\">\\n<div class=\\\"gtw-tiddler-excess-banner\\\">\\n\\t<div style=\\\"display: inline-block; vertical-align: center; margin-top: 6px; margin-left: 1em;\\\">\\n\\t\\t<span style=\\\"height: 44px\\\">{{$:/core/images/info-button}}</span>\\n\\t</div>\\n\\t\\t<div style=\\\"display: inline-block; margin-left: 1em;\\\">\\n\\t\\tYou have <<numOpen>> tiddlers open. Having too many<br>\\n\\t\\topen tiddlers may cause poor performance.<br>\\n\\t</div>\\n\\n<div style=\\\"margin-left: calc(44px + 1em); margin-right: 4em;\\\">\\n\\nClose tiddlers from the //Open// tab of the sidebar, or use the <<textual-button \\\"close-others-button\\\">> //close others// button on a tiddler or the <<textual-button \\\"close-all-button\\\">> //close all// button in the sidebar to close tiddlers in bulk.\\n\\n<div style=\\\"text-align: center;\\\">\\n<$button set=\\\"$:/config/sobjornstad/GrokTiddlyWiki/HideOpenTiddlersWarning\\\" setTo=\\\"yes\\\" class=\\\"tc-tiddlylink tc-btn-invisible\\\">\\n  don't show this message again\\n</$button>\\n</div>\\n\\n</div>\\n</div>\\n</$list>\\n</$list>\\n</$set>\\n\\n<style>\\n.gtw-tiddler-excess-banner {\\n\\tbackground-color: <<color tiddler-background>>;\\n\\tdisplay: inline-block;\\n\\tmargin-right: 2em;\\n}\\n</style>\"},\"Acknowledgments\":{\"title\":\"Acknowledgments\",\"created\":\"20210206214220001\",\"description\":\"//Grok TiddlyWiki// exists only because of the efforts of many people.\",\"modified\":\"20210818011444979\",\"parent\":\"Appendices\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Thanks to\\nDiego M.,\\nMohammad Rahmani,\\nJennifer Bjornstad,\\nOdin Jorna,\\nSinisa Obradovic,\\nStan Dunn,\\nStéphane L.,\\nand\\nWalt Ludwick\\nfor reviewing pre-release copies of the first edition of //Grok TiddlyWiki// and offering feedback,\\nand to many folks around the web for suggesting further improvements to subsequent editions.\\n\\n//Grok TiddlyWiki// would not exist without [[TiddlyWiki|https://tiddlywiki.com]] itself; thanks to Jeremy Ruston for spending fifteen years working on it, and to all the community members who have helped to make this open-source project what it is.\\n\\nIn particular, thanks to all the members of the [[TiddlyWiki forum|https://groups.google.com/g/tiddlywiki]] for helping me learn to use TiddlyWiki, and for not just putting up with but reliably and cheerfully answering a wide variety of impractical questions I posed while trying to understand TiddlyWiki deeply enough to write a book about it. All users of TiddlyWiki are lucky to have such a friendly and helpful resource!\\n\\nThanks to Andy Matuschak and Michael Nielsen for doing pioneering work on the [[mnemonic medium|https://numinous.productions/ttft/]] and [[Orbit|https://withorbit.com]], which was the inspiration for [[TakeAway|TakeAway Help]] and is worth a look for anyone who likes TakeAway. Thanks also to Damien Elmes and the [[Anki|https://apps.ankiweb.net]] community for developing the fantastic spaced-repetition tool that got me interested in spaced-repetition study back in 2010. I hope that TakeAway serves to advance the cause of spaced-repetition use at least a little bit.\\n\\nThe primary text font in //Grok TiddlyWiki// is Paul Hunt's Source Sans Pro, and the monospaced font used for code examples is Raph Levien's Inconsolata. Thanks to the designers of these excellent fonts for making them available for free.\\n\\n<div style=\\\"text-align: center; margin-top: 0.3in;\\\">\\n<div>//five hundred sixty-two press//</div>\\n<div style=\\\"font-variant: small-caps; font-size: 125%; letter-spacing: 0.5px;\\\">mmxxi</div>\\n<div style=\\\"font-variant: small-caps;\\\">q.e.f.</div>\\n</div>\"},\"Adding to the Sidebar\":{\"title\":\"Adding to the Sidebar\",\"created\":\"20200718041838565\",\"description\":\"Arbitrary tiddlers can be added to the sidebar to expose custom navigation options or any other content you like.\",\"modified\":\"20210502190226638\",\"parent\":\"Looking Under the Hood\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"It's frequently useful to add content or navigational functions to the sidebar. In particular, there are several types of custom navigation that would be immediately helpful for our office-notes wiki:\\n\\n* There is currently no easy way to order and ''look at journal tiddlers by date'', something which will likely be a common task.\\n* Similarly, ''listing our meetings by date'' would be helpful. We already have a `MeetingList`, but right now we have to remember that it exists and search for it.\\n* We might like a ''hierarchical view of our projects'', or at least a list of them, in the sidebar so we can quickly navigate through them.\\n\\nLet's create a new tab in the sidebar called `Views` to store custom ways of looking at some of our tiddlers. Within the `Views` tab, we'll add some vertical tabs, just like the default `More` tab does, for `Journal`, `Meetings`, and `Projects`.\\n\\nThe first step is to ''create a tiddler for each inner tab''. As noted earlier, we already have a tiddler that can serve as the meeting list, `MeetingList`; you may, however, want to clean out some extra crud that we have added to it in previous exercises, so that it just shows a simple list of meetings. For the journal list, clone the meeting list and tweak the filter so that it selects tiddlers with the `Journal` tag instead of the `Meeting` tag. \\n\\nFor the project list, let's look at a slightly different method. All of our tiddlers are tagged `Project`, so why not just make `Project` -- the tagging tiddler -- into the list? This fits perfectly with the standard dual function of tags in TiddlyWiki as both tiddlers (units of content) and a mechanism for building structure. Go ahead and edit this tiddler, or create it if it doesn't exist in your wiki, and add an appropriate TOC macro to it. (Have a look at [[Creating Hierarchies with a Table of Contents]] if you've forgotten how.)\\n\\nThe next step is to create a tiddler that ''combines those inner tabs into a single tiddler''. Let's call this tiddler `$:/yourname/Views`. We'll set things up so that we can add new tabs by simply tagging the tab tiddler `$:/yourname/Views`:\\n\\n```html\\n<<tabs\\n  tabsList:\\\"[tag[$:/yourname/Views]]\\\"\\n  default:\\\"JournalList\\\"\\n  class:\\\"tc-vertical\\\">>\\n```\\n\\nGo back and tag each of the inner-tab tiddlers with `$:/yourname/Views`. You should immediately see tabs appear for them within the `$:/yourname/Views` tiddler.\\n\\nThe last step is to make the Views tiddler itself show up as a new tab on the sidebar. This is left as an exercise.\\n\\n\\n!! Exercises\\n\\n{{Ex:ViewsOnSidebar||ExerciseTemplate}}\\n{{Ex:FriendlyViewsNames||ExerciseTemplate}}\\n{{Ex:SidebarCurrentTiddler||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Advantages of WYSIWYM\":{\"title\":\"Advantages of WYSIWYM\",\"created\":\"20210115210638130\",\"description\":\"Some of the reasons that TiddlyWiki and many other systems choose to use markup languages instead of visual editors.\",\"modified\":\"20210502154549106\",\"parent\":\"Appendices\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"TiddlyWiki's [[Wikitext]] is an example of a WYSIWYM (“What You See is What You Mean”) formatting language, meaning that you see only plain text, and you include special characters or phrases along with the text to explain how it should be formatted. These kinds of languages are extremely popular among software developers and other technical types, but relatively rare elsewhere. You might wonder why they're preferred; here are a few reasons.\\n\\n* WYSIWYG editors use the same kinds of formatting codes that markup languages do, but they're hidden, so the document can suddenly start doing weird stuff (e.g., text mysteriously appearing in the wrong font, or lists indenting the wrong amount) and it's difficult to figure out why. With markup languages, finding issues is much easier because you can see all of the formatting instructions.\\n\\n* Markup languages can easily ''integrate other languages'' for finer control over display, content, and formatting. TiddlyWiki's markup language, for instance, also allows you to use [[HTML]], [[CSS|Stylesheets]], [[widgets|Widgets]], [[filters|Filters]], and more -- all without leaving the single editor text box. In a WYSIWYG editor, you'd have to go into separate dialog boxes and click a bunch of extra times to use each of these features.\\n\\n* In the context of TiddlyWiki in particular, ''[[macros|Macros]] and [[templates|Templates and the Current Tiddler]] would be much more challenging to write'' with a WYSIWYG editor, since you wouldn't be able to see exactly what text and formatting you were replacing. These are some of the most powerful features of TiddlyWiki, and they're challenging enough to learn as they are!\\n\\n* You can ''separate presentation and content'' in most markup languages. Suppose you have a document where you want all software code snippets to appear in red text. Instead of manually setting every code snippet to appear in red, you merely have to ensure that you mark every code snippet as a code snippet, and then elsewhere you can indicate that all code snippets should appear in red. Your markup indicates the //function// of the text, rather than the nitty-gritty details of how it should be formatted. With this setup, if you later decide that code snippets should be blue, you only have to go to the spot where you decided code snippets were red and change it to blue, and all the code snippets will update to blue at once.\\n\\n* WYSIWYG editors tend to use ''proprietary formats''. Most markup languages are open and can be read by multiple tools.\\n\\n* ''Keeping backups and previous versions'' of marked-up text is easier.\"},\"Anatomy of Filter Steps\":{\"title\":\"Anatomy of Filter Steps\",\"created\":\"20201230190557655\",\"description\":\"Filter steps have operators, suffixes, parameters, inputs, and outputs.\",\"modified\":\"20210409154639337\",\"parent\":\"Filtering and Formatting\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"We saw a few examples of filter steps in the [[previous section|Using Filter Expressions]]. Let's take a closer look at the syntax.\\n\\n!! Operators, suffixes, and parameters\\n\\nFilter steps are composed of three parts, which take this basic form:\\n\\n```html\\noperator:suffix[parameter]\\n```\\n\\n* An ''operator'' describes the task the filter performs. TiddlyWiki supports a large number of operators, and some [[plugins|Plugins]] add additional operators.\\n* A ''suffix'' further refines the meaning of the operator, often by listing a specific [[field|Fields]] that it applies to. Only some operators accept a suffix at all, and it is usually optional even when it is accepted.\\n* A ''parameter'' describes what the operator should try to find or do. For instance, with the `tag` operator, the parameter indicates which tag you want to match.\\n\\nThe exact meaning of the suffix and parameter depends on which operator is being used.\\n\\nAs briefly mentioned in the previous section, you can place a `!` (pronounced //not// or //bang//) before the operator. Typically, this negates its meaning, so that whatever tiddlers it would have allowed to pass it now filters out, and vice versa. With a few operators, it does something different and operator-specific.\\n\\nPutting this together, a simple filter step we saw in the [[previous section|Using Filter Expressions]] was `tag[Contact]`. In this step, `tag` is the operator and `Contact` is the parameter. Most commonly, the parameter goes in square brackets, but we'll learn in [[chapter 4|Variables, Macros, and Transclusions]] that it can also be placed in `<angle brackets>` or `{curly braces}` for different effects.\\n\\nThe `tag` operator has an optional suffix `strict` (don't worry about what it does for now). If we used it, our filter step would look like `tag:strict[Contact]`.\\n\\n!! Inputs and outputs\\n\\nWe can also talk about the ''inputs'' or ''input tiddlers'' and ''outputs'' or ''output tiddlers'' of a filter step. Unlike operators, suffixes, or parameters, these do not correspond to text in the filter expression; rather, they are the data that moves through the pipeline from left to right when TiddlyWiki evaluates the filter.\\n\\n''Input tiddlers'' are the tiddlers that come down the pipeline from the left side of the operator.\\n\\n* If the filter run is `[tag[Person]]`, all tiddlers in the wiki are input tiddlers to `tag[Person]`. Unless you use one of a special set of filter operators called ''constructors'' as the first step in a run, {{Ltc:AllTiddlersInTheLeft||LieToChildrenTemplate}} are the inputs to the leftmost step. Constructors ignore any input they receive and generate an entirely new set of output tiddlers based only on their suffix and parameters (i.e., they construct a list), so if TiddlyWiki sees one as the first step of a run, it saves itself some effort by not passing the constructor any input at all.\\n* If the filter run is `[title[JaneDoe]tag[Person]]`, the sole input tiddler to `tag[Person]` is `JaneDoe`. (`title` is a constructor.)\\n* If the filter run is `[tag[Application]tag[Person]]`, the input tiddlers to `tag[Person]` are all the tiddlers in the wiki tagged with `Application`.\\n\\n''Output tiddlers'', similarly, are the tiddlers that get passed off to the next step in the run (or become the result of the entire filter run, if this is the last step). In the `[tag[Application]tag[Person]]` example above, the outputs of `tag[Application]` are all the tiddlers in the wiki tagged with `Application`. Or to put it another way, the outputs of `tag[Application]` are the inputs to `tag[Person]`.\\n\\n\\n!! Multiple suffixes and parameters\\n\\nThese are uncommon, but for the sake of completeness:\\n\\n* A few operators support ''multiple suffixes'', each introduced by a colon, like `search:myfield:literal[parameter]`.\\n* A few operators support ''multiple parameters'', separated by a comma, like `pad[5],[-]`.\\n\\n!! Exercises\\n\\n{{Ex:ConstructorAfterFilterStep||ExerciseTemplate}}\\n{{Ex:NonexistentTiddlerFilter||ExerciseTemplate}}\\n{{Ex:MeaninglessSuffix||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Appendices\":{\"title\":\"Appendices\",\"caption\":\"Appendices\",\"created\":\"20200822214752880\",\"description\":\"In which you can find reference material, lists, acknowledgments, and extended digressions that didn't fit in the main flow of the book, if you're having a particularly boring afternoon.\",\"list\":\"[[Wikitext Reference]] [[Advantages of WYSIWYM]] CamelCase [[Options for Saving and Hosting Your Wiki]] [[Useful Plugins]] Changes [[Support Us]] Acknowledgments Copyright\",\"modified\":\"20210818144657804\",\"parent\":\"Outline\",\"tags\":\"Chapter\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{||ChapterOutlineTemplate}}\"},\"BasicSnippet\":{\"title\":\"BasicSnippet\",\"created\":\"20210130005356555\",\"modified\":\"20210206150314943\",\"tags\":\"Template\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<!--\\n<div style=\\\"float: right; margin-top:10px; font-size:14px;\\\">\\n\\t<$button message=\\\"tm-copy-to-clipboard\\\" param={{!!text}} class=\\\"tc-btn-invisible tc-tiddlylink\\\">copy wikitext to clipboard</$button>\\n</div>\\n<div style=\\\"clear: both;\\\"/>\\n-->\\n\\n<$transclude tiddler=\\\"$:/sib/Snippet/TiddlerAsWikitext\\\"/>\"},\"Block Mode and Inline Mode\":{\"title\":\"Block Mode and Inline Mode\",\"created\":\"20210116171851507\",\"description\":\"TiddlyWiki reads wikitext in two modes, one where elements stack horizontally and one where they stack vertically, and you occasionally have to consider which mode you should use.\",\"modified\":\"20210410142730527\",\"parent\":\"Variables, Macros, and Transclusions\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In [[HTML]], {{Ltc:BlockAndInlineMode||LieToChildrenTemplate}}. The distinction is, on its face, quite simple:\\n\\n* In ''block mode'', elements are stacked vertically, with the bottom edge of one item up against the top edge of the next.\\n* In ''inline mode'', elements are stacked horizontally, with the right edge of one item up against the left edge of the next (or vice versa if the page is in a language where text is written right-to-left). If there is not enough horizontal space to render all the consecutive inline-mode elements, the browser will insert a line break at an appropriate location, such as the end of an element or the end of a word within an element, and continue rendering on the next line.\\n\\nImportantly, in inline mode, insertion of vertical space is not allowed (except by the automatic line-breaker, or by the `<br>` tag, which forces the line-breaker to break there). For instance, you cannot start a new paragraph in inline mode -- instead, you have to leave inline mode, returning to block mode, and create a new block.\\n\\nAs an example, `div` elements are ordinarily rendered in block mode, while `span` elements {{Ltc:SpanInlineMode||LieToChildrenTemplate}}. Here's how they look:\\n\\n{{Sn:BlockInlineComparison||MagicSnippet}}\\n\\nIt's possible to alter this behavior using [[CSS|Stylesheets]], but since our focus in this book is not HTML and CSS, we will leave it there. For more technical details on the HTML side of things, check out the [[Mozilla developer docs|https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flow_Layout/Block_and_Inline_Layout_in_Normal_Flow]].\\n\\n\\n!! Block and inline mode in TiddlyWiki\\n\\n[[Wikitext rendering|Wikification]] in TiddlyWiki adds an additional layer of complexity. As TiddlyWiki reads [[wikitext|Wikitext]], it is either reading in inline mode or block mode. In ''inline mode'', it recognizes only the elements of wikitext that make sense in an inline context, such as links or bold formatting. In ''block mode'', it recognizes elements that are blocks of their own, such as lists, blockquotes, or code snippets. ''Within block elements, TiddlyWiki enters inline mode''; you re-enter block mode by leaving a blank line in your wikitext. (Note, however, that you cannot re-enter block mode with a blank line at all if you are inside certain elements that are inherently restricted to inline mode, like links or italic text -- in this case you must close that element before adding a blank line.)\\n\\nThis is why you need a blank line on either side of, e.g., lists, for them to display correctly (see the following snippet for an example). If you don't put a blank line before the list, TiddlyWiki reads the first `*` as part of a paragraph -- `*` is a perfectly valid character to have within a paragraph, after all -- and the remainder of the list is read in inline mode, which usually won't look very good. Similarly, if you don't put a blank line after the list, TiddlyWiki stays in inline mode at the end of the final list item, and it will not start a new paragraph until it leaves inline mode.\\n\\n{{Sn:CorrectAndIncorrectLists||MagicSnippet}}\\n\\n!! Transclusion\\n\\nMatters are complicated further by [[transclusion|Transclusions]], which can make sense in either a block or an inline context, but usually not both at once. For instance, if you want to transclude a field that contains a phone number into the text of a paragraph, you probably want to do that in inline mode so you don't interrupt the paragraph and put the phone number on a separate line. On the other hand, if you transclude the `text` field of a long tiddler, you probably want to do that in block mode so all its paragraphs don't get squashed into one. (I'm discussing field transclusions here, but this generally applies to macro/variable transclusions as well.)\\n\\nIn many cases, TiddlyWiki will do the right thing on its own: it chooses a mode based on ''whether you put blank lines around the reference or not''. This can become unintuitive, however, when you transclude something within a widget. For instance, let's suppose we want to show the text of all meetings at which fudge was mentioned, with a horizontal line in between each:\\n\\n```html\\n<$list filter=\\\"[tag[Meeting]search[fudge]]\\\">\\n\\t{{!!text}}\\n\\t\\n\\t------\\n</$list>\\n```\\n\\nThis doesn't work right -- can you spot the problem? There isn't a blank line before `{{!!text}}`, so the transclusion happens in inline mode! You can fix this either by putting a blank line just before `{{!!text}}`, or by forcing the transclusion to take place in block mode using the `mode` attribute of the `$transclude` widget:\\n\\n```html\\n<$list filter=\\\"[tag[Meeting]search[fudge]]\\\">\\n\\t<$transclude mode=\\\"block\\\"/>\\n\\t\\n\\t------\\n</$list>\\n```\\n\\nYou can read more about the `$transclude` widget and block/inline-mode transclusion [[in the TiddlyWiki documentation|https://tiddlywiki.com/#TranscludeWidget]]. We'll also discuss this widget in [[Hiding and Showing Things]].\\n\\n!! Inline-mode markup errors\\n\\nA common cause of a tiddler displaying funny, which you're now prepared to understand and fix more easily, is an ''unclosed inline-mode element''. For instance, suppose we have two paragraphs in a tiddler, and we open some italics and forget to close them in the first paragraph.\\n\\n{{Sn:UnclosedItalics||MagicSnippet}}\\n\\nYou'll notice that the two paragraphs got smashed into a single paragraph -- what's going on there?\\n\\nIf you inspect the content of the output tab in your browser's developer tools, as we learned how to do in [[When Things Go Wrong]], you'll see this is the HTML TiddlyWiki generated for those paragraphs:\\n\\n```html\\n<div class=\\\"msbs-snippet\\\">\\nHere is my <em>first paragraph.\\n\\nHere is my second paragraph.</em>\\n</div>\\n```\\n\\nThe surrounding `div` is part of the snippet tooling used in this wiki, so you can focus in on its content, which is the result of rendering a complete tiddler (the snippet is stored in its own tiddler). The HTML equivalent to `////` is an `em` element, short for //emphasis//.\\n\\nSince we didn't ever close the italics, TiddlyWiki automatically inserted a matching closing tag at the end of the tiddler. Herein lies our problem: because `em` is an inline element, TiddlyWiki doesn't treat two consecutive newlines as a paragraph break within that element, so it doesn't generate a `<p>` tag and you don't get a new paragraph. An entire tiddler can get smashed together this way.\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Browsing Your Tiddlers\":{\"title\":\"Browsing Your Tiddlers\",\"created\":\"20200603023508396\",\"description\":\"TiddlyWiki provides a variety of options for getting an overview of many tiddlers at once.\",\"modified\":\"20210504022432324\",\"parent\":\"Filing and Organizing\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"When you don't know what you're looking for precisely enough to formulate a [[full-text search|Searching]], you can browse through lists of tiddlers. Let's take a look at the available options. All of these are found under the ''More'' tab of the sidebar.\\n\\n; All\\n: As the name suggest, this tab lists {{Ltc:AllListsAllTiddlers||LieToChildrenTemplate}} in alphabetical order.\\n\\n; Recent\\n: This tab lists {{Ltc:MostRecentHundred||LieToChildrenTemplate}} in reverse chronological order. This is exactly the same view that's on the //Recent// tab.\\n\\n; Tags\\n: This tab shows tag pills for all of the tiddlers in your wiki that are used to tag at least one other tiddler. Clicking on a tag pill pops open the tag menu, allowing you to navigate to the tag tiddler itself or any of the tiddlers it is tagging.\\n\\n; Missing\\n: This tab lists all tiddlers in your wiki that have been linked to by at least one other tiddler, but don't yet exist. You can click on a missing tiddler to see a menu much like that for a tag, with the missing tiddler listed at the top and all the tiddlers that link to it underneath. (We discussed this view previously in the [[Knowledge Tiddlers]] section.)\\n\\n; Drafts\\n: When you edit a tiddler in TiddlyWiki, the original tiddler is preserved as-is, while a new “draft” tiddler is created to house your changes. When you accept the changes with the confirm changes button <<textual-button \\\"done-button\\\">>, the draft replaces the original tiddler.\\n: <br>The drafts tab shows any drafts that currently exist. Typically, all draft tiddlers will be open already (since you're editing them), so you'll have little reason to come in here, but occasionally a crash or network issue could cause drafts to be left in the wiki but not saved, in which case you can look for them here so you can finish your edits.\\n\\n; Orphans\\n: This tab shows tiddlers that have not been linked to within the `text` field of any other tiddler. If your wiki relies heavily on linking for relating ideas, looking for orphans periodically can help you identify which tiddlers are at risk of getting lost.\\n\\n; Types\\n: This tab lists tiddlers that aren't of a standard text type, such as images or PDFs. We'll talk more about those in [[Images and Attachments]].\\n\\n; Plugins\\n: This tab lists all [[plugin|Plugins]] tiddlers that you've installed in the wiki, split into three categories, //Languages//, //Plugins//, and //Themes//. If you are ever unsure how to use a plugin, you can likely find its documentation or a link to it by opening its tiddler here.\\n\\nIf you're following along in your own wiki, you'll notice that we skipped ''System'', ''Shadows'', and ''Explorer''. Understanding what these do requires knowing about some internals of TiddlyWiki we haven't covered yet, so we'll come back to these tabs later (in the [[System Tiddlers]] and [[Shadow Tiddlers]] sections).\\n\\n!! Managing Open Tiddlers\\n\\nThere's one more piece to cover here -- the ''Open'' tab of the sidebar. As the name suggests, it shows you at a glance all the tiddlers that are currently open in the story river. You can close or jump to an open tiddler by clicking on the <<textual-button \\\"close-button\\\">> button or the link, respectively.\\n\\nThe ''Open'' tab has another trick that's difficult to replicate any other way, and unfortunately it's the least discoverable: you can ''drag and drop the tiddlers'' in the list to change the order they appear in the story river.\\n\\nWhy is that important? Imagine you're working on a tiddler and you have eight more open above it, and you realize you need to pull up another tiddler as a reference. When you open a tiddler by searching or clicking in the sidebar, it'll open at the top of the story river. If you didn't have the option to reorder, you would now have to repeatedly scroll through eight unrelated tiddlers, or close them all even though you weren't ready to, just to move back and forth between them!\\n\\nAnother way to see several related tiddlers at once is to choose the //Open in new window// option under the more menu <<textual-button \\\"down-arrow\\\">> of a tiddler in view mode (you can't edit a tiddler in a new window, unfortunately).\\n\\nIf you find yourself doing this often, there's a nifty plugin available as part of [[Stroll|https://giffmex.org/stroll/stroll.html]] that adds a second column to the story river so you can move tiddlers side by side. But if you only need this occasionally, the additional complexity might not be worth it.\\n\\n!! Exercises\\n\\n{{Ex:LookAtBrowseOptions||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Buttons and Input Widgets\":{\"title\":\"Buttons and Input Widgets\",\"created\":\"20200718211403194\",\"creator\":\"soren\",\"description\":\"Buttons and input widgets allow you to create custom user interfaces that edit fields and take actions in the wiki.\",\"modified\":\"20210818190733312\",\"modifier\":\"soren\",\"parent\":\"Looking Under the Hood\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"So far, all we've done to customize TiddlyWiki is make new, more or less static content of various kinds show up in various places in the wiki: macros, tiddler content, sidebar tabs, snippets. This is all well and good, but sometimes we want to ''add interface elements the user can actively interact with'' as well. In other words, we want to be able to build the //machine// tiddlers we discussed in [[Slicing Up Content]].\\n\\nThe most basic tools for active interaction are ''buttons'' and ''text boxes'' that the user can click on and type into to perform simple tasks. Let's look at how these work.\\n\\n\\n!! Setting a value\\n\\nPerhaps the most common thing to do with a button is ''set the value of some field'' of a tiddler. Buttons are created, perhaps unsurprisingly, using the `$button` widget. Within a `$button` widget, we can use the `set` and `setTo` attributes of the widget to set a field to a value. `set` refers to a field using the same syntax as a [[transclusion|Transclusions]], but without the curly braces (the formal name for this is a //text reference//). `setTo` is the value the specified field will be set to.\\n\\nFor example, we can set the current tiddler's `userwhoclicked` field to `Soren` with this button:\\n\\n{{Sn:UserWhoClicked||MagicSnippet}}\\n\\nWhen I click on this button, the tiddler now contains a field recording that I clicked the button.\\n\\nOf course, this won't be right if //you// click the button (unless by chance your name is also Soren). The `$:/status/UserName` tiddler contains the username TiddlyWiki uses to sign any tiddlers you edit, if you have this function on, so we could make it use that value instead:\\n\\n```html\\n<$button set=\\\"!!userwhoclicked\\\" setTo={{$:/status/UserName}}>\\n  Big Red Button, Version 2\\n</$button>\\n```\\n\\n!! Getting the value from user input\\n\\nWhat if we want to allow the user to ''enter their own name''? We can do this by pairing the button with an `$edit-text` widget.\\n\\n{{Sn:EditableUserWhoClicked||MagicSnippet}}\\n\\nYou'll notice that the `$edit-text` widget is associated with a field of a specific tiddler (here, since we haven't explicitly named the field, it's the `text` field of the `$:/temp/EditingUserName` tiddler). In fact, as the user changes the contents of the text box, that field is being directly edited, and if the contents of the field change for some other reason, the text box will immediately update to match. We say that the text box is ''bound'' to the field.\\n\\nThe tiddler holds the text the user has entered until the user clicks the button, at which point the button will retrieve the contents and do something with them. This is a common pattern in TiddlyWiki -- even core UI elements like the search box store their current contents in a tiddler. Because of the ubiquity of tiddlers used to store the state of the user interface and configuration values, buttons can do more than they would appear to at first glance by setting values!\\n\\nThe tiddler we've bound the text box to in this case is a system tiddler whose name begins with `$:/temp/`, often called a ''temporary tiddler''. Tiddlers in `$:/temp/` {{Ltc:TempNotSaved||LieToChildrenTemplate}} -- when you close the page or hit the refresh button, they are all gone. For a situation like this one, that's usually what you want, but if you want the value to persist across a reload, you should keep that tiddler somewhere else.\\n\\nThe attribute `tag=\\\"input\\\"` used above is usually going to be what you want. If you leave it off, you get a multiple-line text area, which could be helpful for entering text into the `text` field of some tiddler, but not much else.\\n\\n\\n!! Styling\\n\\nSometimes you might want a button to ''look like a link'' rather than a button. Buttons can be styled using CSS, just like anything else in the wiki, and TiddlyWiki provides some special CSS classes for exactly this use case. To create such a “button,” add the attribute `class=\\\"tc-btn-invisible tc-tiddlylink\\\"` to your button widget.\\n\\n\\n!! Exercises\\n\\nAs we continue to move forward learning about more widgets like these, the definitive reference source is always https://tiddlywiki.com. A quick search there will get you details about widgets, field operators, terms, and so on. Looking at the documentation frequently is normal, even for experts who use spaced repetition to study TiddlyWiki. There are just too many options to remember them all!\\n\\nYou now know enough about TiddlyWiki to use the official documentation effectively and should start doing it whenever it would be helpful. From here on out, we will no longer link to the pages as they come up or include details about how to look in the documentation for information you need to know for an exercise.\\n\\n\\n{{Ex:MainSearchBoxBinding||ExerciseTemplate}}\\n{{Ex:EditCurrentTiddler||ExerciseTemplate}}\\n{{Ex:JumpToTiddler||ExerciseTemplate}}\\n{{Ex:InputExistsText||ExerciseTemplate}}\\n{{Ex:CaptionsByTag||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"CamelCase\":{\"title\":\"CamelCase\",\"created\":\"20200822214806325\",\"description\":\"Whether you should use CamelCase titles, what makes something CamelCase, and how you can get rid of CamelCase linking.\",\"modified\":\"20210918131544342\",\"parent\":\"Appendices\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"TiddlyWiki has an option to make CamelCase text (where the words are run together without spaces and capitalized) turn automatically into links. This is discussed extensively in [[the answer to the camel-case knowledge tiddlers exercise|Ex:CamelCaseKnowledgeTiddlers/answer]].\\n\\n!! Should you use CamelCase?\\n\\nCamelCase makes it easier to link to things, but some people think it's ugly. The only general advice I can give is figure out what you like, and don't feel like you have to fall solidly on one side of the fence for every wiki. For my personal notes, I love CamelCase; for the wiki I wrote this book in, it's more irritating than helpful, since I want my page titles to be friendlier and I don't want the CamelCase titles I quote to become links.\\n\\nYou can learn more about my decision to use CamelCase for my huge Zettelkasten project at the [[WikiCamelCase|https://zettelkasten.sorenbjornstad.com/#WikiCamelCase]] page there.\\n\\n\\n!! Escaping CamelCase words\\n\\nIf you have a word that is in CamelCase, but you don't want it to be a link, you need to //escape// it by placing a tilde in front of it, like `~CamelCase`. The one irritating thing about this mechanism is that if you move the text to a wiki or tiddler that has CamelCase links turned off, the tilde actually appears in the text. I am not aware of any way to ensure a CamelCase word appears exactly as itself in either mode, although you can always place it in `backticks` if you don't mind it showing up in a different font.\\n\\n\\n!! Is it CamelCase?\\n\\nThe rules for determining whether a given word is in CamelCase are not always obvious, particularly when numbers or symbols are involved. Here are several things that //aren't// CamelCase that you might think would be:\\n\\n* `CAmelcase`\\n* `Camel2Camel`\\n* `3Camels`\\n* `camelCaseWord`\\n* `Camel-Case`\\n\\nTo be considered CamelCase, the word must:\\n\\n* Begin with an uppercase letter.\\n* Contain at least one uppercase letter that immediately follows a lowercase letter.\\n* Contain only letters and numbers -- no spaces or punctuation.\\n\\nThe above cases all fail that test.\\n\\n(Folks who have been around for long enough may remember that in TiddlyWiki Classic, [[the rules were different, even going so far as to allow punctuation in some places|https://talk.tiddlywiki.org/t/the-using-of-camelcases-and-what-the-tilde-is-doing/287/16?u=sobjornstad]]. They were made quite a bit stricter in TiddlyWiki 5.)\\n\\n\\n\\n!! Temporarily turning off CamelCase linking\\n\\nEven if you normally like CamelCase in your wiki, you might occasionally find you'd like to turn it off for a particular tiddler. For instance, maybe you've copied and pasted some text that contains a bunch of CamelCase words from some other source, and you don't want to have to go through and manually escape all of them.\\n\\nFortunately, there's an easy fix in this situation. Just insert the following pragma at the top of the tiddler:\\n\\n```html\\n\\\\rules except wikilink\\n```\\n\\nNote that like any other pragma, this must go at the very beginning of your tiddler. If other lines come before it, they must be empty lines, [[comments|Comments]], or other pragmas (e.g., `\\\\define` or `\\\\import`). Otherwise, the text `\\\\rules except wikilink` will appear literally.\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Changes\":{\"title\":\"Changes\",\"created\":\"20210521203810921\",\"description\":\"What's new in recently released versions of //Grok TiddlyWiki//.\",\"modified\":\"20210820160440800\",\"parent\":\"Appendices\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"This section lists all changes made to //Grok TiddlyWiki// since the previous released version.\\n\\n<$list filter=\\\"[all[tiddlers+shadows]prefix[$:/plugins/sobjornstad/GrokTiddlyWiki/Changes/]!sort[date]]\\\">\\n\\n!! //Grok TiddlyWiki// {{!!version}}\\n\\n|!Release date |<$view format=\\\"date\\\" field=\\\"date\\\" template=\\\"DD MMM YYYY\\\"/>|\\n|!Git commit |<code>{{!!commit}}</code>|\\n\\n<$transclude mode=\\\"block\\\"/>\\n\\n</$list>\"},\"ChapterOutlineTemplate\":{\"title\":\"ChapterOutlineTemplate\",\"created\":\"20210110042913461\",\"modified\":\"20210110045004066\",\"tags\":\"Template\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<ul>\\n<$list filter={{!!list}}>\\n\\t<li><$link to={{!!title}}/> -- {{!!description}}</li>\\n</$list>\\n</ul>\\n\"},\"Classifying Tags\":{\"title\":\"Classifying Tags\",\"created\":\"20200607151655161\",\"description\":\"The colors and icons of tags can be customized to make it easier to tell tags with different functions apart.\",\"modified\":\"20220103160458959\",\"parent\":\"More Organizational Tools\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"When we use lots of tags in a wiki, it can become difficult to find the ones we want. In particular, we often end up using tags for multiple purposes, which can be somewhat confusing. Already in our example wiki, we're using tags to ''pick out types of tiddlers'' (e.g., meeting, contact, knowledge), to ''create hierarchies'', and to ''add miscellaneous bits of metadata'' to things (e.g., whether something is a software application).\\n\\nOne great way to tell apart tags used for different purposes is to add colors and icons to them. TiddlyWiki makes this easy to do using the <<textual-button \\\"tag-button\\\">> ''tag manager'', which you can find under the //Tools// tab in the sidebar.\\n\\nOne tricky point can be getting the same color across multiple tags, since the color picker does not save recently used colors. The easiest way is to pick a tag that already has the color you want, click the color picker, and copy the hex code from the bottom (that's the bit that looks like `#000000`). Then you can paste that in for the new tag.\\n\\n\\n!! Exercises\\n\\n{{Ex:TagColoring||ExerciseTemplate}}\\n{{Ex:TagMetadataStorage||ExerciseTemplate}}\\n{{Ex:RedTagsFilter||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Comments\":{\"title\":\"Comments\",\"created\":\"20210117011508196\",\"description\":\"You can leave notes to yourself in your wikitext that don't appear in the output.\",\"modified\":\"20210315202721436\",\"parent\":\"Filtering and Formatting\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"As you start trying to build more complicated functionality in wikitext, you may sometimes want to keep some information in your wikitext that doesn't appear in the rendered output. For instance, you might want to remind yourself why you chose to use a certain filter or HTML tag, or keep a copy of an old filter around while tinkering on a new filter so that you can restore to the old one if you mess something up.\\n\\nThis can be accomplished via ''comments''. TiddlyWiki piggybacks on HTML's comment syntax, which begins a comment section with `<!--` and ends it with `-->`. Comments can be used almost anywhere:\\n\\n{{Sn:HtmlComments||MagicSnippet}}\\n\\nNote, however, that comments cannot be placed inside other comments:\\n\\n{{Sn:NestedComments||MagicSnippet}}\\n\\nTurning what would otherwise be functional wikitext into a comment temporarily, preventing it from appearing in the output, is often called ''commenting out'' that wikitext.\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Common Filter Operators\":{\"title\":\"Common Filter Operators\",\"created\":\"20200603023508430\",\"description\":\"A small number of basic filter operators will handle many of your common needs.\",\"modified\":\"20210409165034995\",\"parent\":\"Filtering and Formatting\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"There are a lot of different operators available for use in filters, and many of them are very specific and rarely needed, but hard to do without in those rare circumstances. Thus, it is not worth trying to learn them all. Instead, anytime you can't remember the details of or don't know of an appropriate operator, you should review the comprehensive [[documentation|https://tiddlywiki.com/#Filter%20Operators]]. You might want to bookmark that page right now.\\n\\nThe list can be overwhelming at first, so let's take a look at the most common operators.\\n\\n\\n!! Links\\n\\n* `backlinks[]`: Get all of the tiddlers that link to the input tiddler.\\n** //Example//: `[[JaneDoe]backlinks[]]` gets all tiddlers that link to Jane.\\n* `links[]`: Get all of the tiddlers that the input tiddler links to.\\n** //Example//: `[tag[Meeting]links[]]` finds all tiddlers that were mentioned in any meeting.\\n\\n!! Tags\\n\\n* `tag[X]`: Keep all of the input tiddlers that have the tag `X`.\\n** //Example//: `[tag[Application]]` finds all tiddlers tagged `Application`.\\n* `tagging[]`: Get all tiddlers in the wiki that are tagged with the input tiddler.\\n** //Example//: `[[Application]tagging[]]` is the same thing as `[tag[Application]]`.\\n** You need to use `tagging[]` instead of `tag[]` when you don't know what tag(s) you want to look for ahead of time. For instance, let's say we wanted to find all tiddlers that are part of any project. In our wiki, we decided to tag our projects `Project`, then tag the tiddlers that are part of that project with the project tiddler (e.g., the parts of the `OnboardingProject` are tagged `OnboardingProject`). So we could use the filter `[tag[Project]tagging[]]` -- the first filter step returns all project tiddlers, and the second step finds all the tiddlers that any of //those// tiddlers is tagging.\\n\\n!! Fields\\n\\n* `field:fieldname[value]`: Keep all of the input tiddlers that have a field called `fieldname` with a value of `value`.\\n** //Example//: `[field:phone[888-555-1234]]` returns `JaneDoe` because that's Jane's phone number.\\n** This usage is common enough that you can shorten it to `fieldname[value]`, provided that your field name doesn't conflict with another filter operator (for instance, if you had a field called `backlinks`, you would have to use `field:backlinks` to refer to that field, since there is a `backlinks` filter operator already).\\n* `contains:fieldname[value]`: Like `field:`, but treats the field as a [[list|Ordering Tiddlers]] containing multiple values, and only requires `value` to be one of the items in the list.\\n** //Example//: `[contains:family[JohnDoe]]` returns `JaneDoe` and `EmilyDoe` because both of them have John as a family member.\\n* `has[fieldname]`: Keep all of the input tiddlers that have a non-empty field called `fieldname`.\\n** //Example//: `[tag[Contact]!has[phone]]` finds any contact tiddlers we forgot to add phone numbers to.\\n** For filtering purposes, TiddlyWiki treats empty fields and nonexistent fields the same.\\n* `search:field1,field2[mysearch]`: Keep all of the input tiddlers whose `field1` or `field2` field matches the search query `mysearch`.\\n** Any number of fields can be listed in the suffix, separated by commas. The single suffix `*` searches all fields. If no suffix is provided, the `tags`, `title`, and `text` fields are searched.\\n** Multiple words in the search query are searched separately with all words required to be somewhere in the text, and case is ignored, so that `my search` will find the phrase “Search my wiki”, but not “Search here”. You can change this behavior by adding an additional suffix; see the [[documentation|https://tiddlywiki.com/#search%20Operator]] for details.\\n\\n!! Miscellaneous\\n\\n* `count[]`: Output a single value describing how many input tiddlers were passed to the operator.\\n** //Example//: `[tag[Meeting]count[]]` returns `3` if we have 3 tiddlers tagged `Meeting`.\\n* `sort[field]`: Sort the input tiddlers by `field`.\\n** //Example//: `[tag[Meeting]sort[at]]` shows all meetings from earliest to latest.\\n** The sort is not case-sensitive; uppercase and lowercase letters sort identically.\\n** Adding a `!` in front of `sort` reverses the order, showing all meetings from latest to earliest.\\n** Leaving out the field, writing just `sort[]`, sorts by the title.\\n* `get[field]`: Take all of the input tiddlers and output the //values// of the field `field` on those tiddlers.\\n** //Example//: `[[JaneDoe]get[email]]` yields Jane's email address.\\n\\n\\n!! Exercises\\n\\n{{Ex:CreatingMoreFilters||ExerciseTemplate}}\\n{{Ex:JohnDoeInAnyField||ExerciseTemplate}}\\n{{Ex:AlphabeticallyLastDescription||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Common Misunderstandings\":{\"title\":\"Common Misunderstandings\",\"caption\":\"Common Misunderstandings\",\"created\":\"20210818000720603\",\"description\":\"In which we clear up some common mistakes and mixed-up mental models.\",\"list\":\"[[Macros are not functions]] [[Constant strings cannot be combined with transclusions]]\",\"modified\":\"20210820160521867\",\"parent\":\"Outline\",\"tags\":\"Chapter\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Certain aspects of TiddlyWiki's behavior may be unintuitive or unexpected, particularly if you have prior experience with tools that do similar things to TiddlyWiki but function differently. This chapter calls out some of these potential confusions and explains why they're wrong and how you should think about them instead.\\n\\n!! In this chapter\\n\\n{{||ChapterOutlineTemplate}}\"},\"Concept\":{\"title\":\"Concept\",\"created\":\"20200605171005334\",\"list\":\"Tiddlers Fields Wikitext Links Tags Filters Widgets Variables Macros Transclusions [[System Tiddlers]] Plugins [[Shadow Tiddlers]] Comments\",\"modified\":\"20210409151300854\",\"tags\":\"Index\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Here is a concise listing of the sections introducing the most important concepts in TiddlyWiki. To see all chapters and sections in the book, visit the [[Outline]].\\n\\n<dl>\\n<$list filter=\\\"[all[tiddlers+shadows]tag[Concept]]\\\">\\n<dt><$link to={{!!title}}/></dt>\\n<dd>{{!!description}}</dd>\\n</$list>\\n</dl>\"},\"Constant strings cannot be combined with transclusions.png\":{\"title\":\"Constant strings cannot be combined with transclusions.png\",\"text\":\"iVBORw0KGgoAAAANSUhEUgAAAFUAAABUCAYAAADzqXv/AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAT0ElEQVR4nO1cbXBU1Rl+7t69u5tdwm5CyAeB7CZAYmJCjKQCKQkWDVQ+CoGSKlWRj86YTsVUq0WLowQ7VSgSMJ1qNeNk0HYYbLviQCTQClPSogETXEapBJsyGjZB7a7dwEY2efoj3ePe7IYN2Q0RhmfmTrJ7zrnnPc++5z3nfc+HRJK4jqhCM9ICXIu4Tuow4Dqpw4BrktSqqqqRFYDXGFauXElJknjw4MERk+Ga09Tjx4+DJOrq6kZMhohJdbvdcLvd0ZAlYrjdbjQ3NwMADAbDiMmhjaRwZ2cnamtrIcsy7r//fowePTpacg0JjY2NAACtVouvvvpqxOSIiFS73Y6tW7dCURSkp6dj2bJl0ZJrSPjXv/4F/t+XGUlNHXL37+npwXvvvYdz587B6XTipZdeiqZcEcHn8+HQoUMjVv+QSXW73fB4PACA3t5enDp1KmpCXe0YMqldXV34/PPPxWefzxcVga4FDJlUnU6H5ORk8dntdqOrqysqQkUD58+fD/rO7Xbj0KFDwz5bGTKpSUlJSEtLg0bT9wqv1yumM980NDQ04Kc//SmysrIwe/Zs1NfXD2t9EY3+OTk5kGUZvb296O3txfHjxzFz5sxoyXbZ+PDDD8X/Ho8H3//+99HU1ISzZ8/C5/OBJEwmE06ePDmsckREqk6ng06nw8WLF9Hb24umpqawZbq6utDc3Iy2tjbYbDYUFBTAZDJdsozb7UZbWxssFgusVuuA733nnXfE53PnzuFPf/qTmGIBQFxcHL73ve+htLR0kC0cIiLxcevr6xkfH08ABMCZM2deMv/GjRs5duxYKopCWZYZExPDhQsXsqWlJWR+p9PJhx9+mBqNhunp6SwvLw+Z780332RJSQk1Go2Qxf/o9XrGx8dzypQptNvt9Hq9kTR5UIiIVIfDwezsbNGA7OzsAfM+9NBDIRsNgJmZmUH5nU4n582bJ/IYjUbm5OSo8tTV1bGoqIgxMTFB75QkiVarlT/5yU/Y1NR0Rcj0IyJSz5w5w7lz54qGTJgwQaTV1dVxw4YNrKur48aNG6nX61UEZWVlqQjor61PP/00dTodTSYTCwsLuX37dpHW0dHBjRs3UqvVBhHp/3/y5MmRNC0iRESqy+ViRUWFqqstXryYycnJlCSJkiQxOTmZZrNZNHry5Ml0OBx0uVyCaEmSWFtbq3p3fn4+NRoNrVYra2trhaZ5PB6++OKLNJlMoqwkSUxLS2NGRoaQZerUqZE0LSIMaaDq7u6Gw+HAli1b8NZbb6m+3717N3p7e8V3sizjv//9LwAgNjYW+/fvh9VqRUdHhxhEGGLt8eLFiyCJs2fPorOzU3xvMBhQWlqK9evX49ixY/D5fFi0aBHKyspw2223DaU50cdg2fd6vXQ4HHzllVdYVlbGcePGUVGUkDZSkiRqtVrOnDlTaJSiKKyuribZZy/vvvtuVZn+3f+JJ54QWhgfH88dO3ao7KLP56PH41GVmTp16jdCUwdNakVFBbOzszlu3DjqdDrq9XpaLBbqdDoVObm5udy2bRs//vhjbty4Udi5jIwMHj58mI899hhzcnIoy7Ioc8MNNwTV197eziVLllCr1VKSJGo0GqamprKmpoYulyukjLNnzxbvnDRp0tBZiRCDInXDhg1Ca8xmM/Py8njffffxmWee4fLlywVxiqLw/fffF+Vuvvlm1eDUX6M1Gg3nzZtHp9MZsl6n08ny8nIaDAZVuVtvvZWtra1B+R977DGRx2QyDZGSyHFZA9Xq1av52muv8ejRo0Jbtm3bphqoArtoUlJSSNPgf37wgx8MSKgfTqeT1dXVzMvLo6IoqoHppZdeUmltS0uLqq7+5uFKIeKFv0BSDQaDKq24uFikJSQk8I477mBubi5Xr17NnTt3DtiNQ8HlcvGFF17guHHjRM/QaDRcsGABz5w583WDAki12+2RNm9IGFZSt27dKjSrsLDwskgMBZ/Px6NHj7KoqEg1SObm5gpzYLFYVGZiJDCspH788cei8aNHj2ZzczN9Pl+kVdLlcrG6ulpFbFZWFtva2vjwww8LTdbr9dy3b9+A7/F4PNy3bx+fffbZkDZ6qBhWUn0+H+fMmSNsaXp6Oo8cORJplQINDQ1iygaAFRUVbG1tVc1IbDbbgMQ2NjYyJyeHqampQc5HJBhWUknywIEDTExMFNpjNBr5xBNPhB2gBgOfz8ff/va3KjNAknfddZfKhR09ejTXr1+v0kan08m77rqLsixz7Nix3LVrV8Ty+DHspHq9XjY0NDAlJUU1A8jOzuaRI0dCmoNQE/uB4HK5VAMXGdq5AEBZljlmzBhmZ2czJSVFBHjy8vLocDgiIyIAUSVVUZQBNdDhcLCkpEQVWJFlmbfccgurqqq4Z88eulwu+nw+tra2cseOHXS5XAOGBf1obW0NIpXsI7awsDCkxxf44yqKwjVr1kQ8iAYiYlJra2uFdyTLMnfs2DFgXq/XS7vdLgIu/R0B/+NPHz9+PDMzMwdscEtLC4uKilTv6I/NmzczJyeHBoOBGo1GeGeKotBkMvGee+6JiikKRMSkBgaqJUlicXGxqkv7NTAQra2tXLp0KWNjYy+pRZIk0WKx8PDhw6Ksx+Oh3W7n7NmzaTKZxA8BgL/73e8GlNPj8bChoYEPPvggf/jDH3L9+vVsaGgYFgchYlLb2tpYUlIiyNBqtVy3bh07Ojr4yiuvcOzYsaypqQkZJG5ra2NFRQXz8/OZnZ3NRYsWcdq0aSwoKOCYMWOo0+kYHx9PSZKYlJTE5ORkMdoHBrwVReG6detGzIPqj6hspXzqqadU0xhZloUWAeDChQsH3cVcLhfb2tq4d+9e3nLLLUJrQ2mzwWBgcnIyq6uro2oTI0VUSHW5XJw3b54q8uR/YmJiuHXr1iG99x//+AfXrVvHO+64g9OnT2dCQoIwC6WlpbTb7d8Y7QxE1Db9Op1OVlZWMiUlhVqtVgwEK1eujFiLXC4XHQ4H33rrrZA2+psGiYzukZ/Tp0/j2LFj0Ol0SE1NRU5OTtgl6GsNUSf1Oq7RgxQjjeukDgOukzoMuE7qMOA6qcOAsJspuru70dnZCZ1Oh6SkpCsh01WPS5La3d2NpqYm7N27FxaLBY8++uiVkmtY4Z9Lf/HFF0hMTERhYSFSU1Mhy3JU3h9WU7/66it0dnaiu7s7KhWOJE6fPo0lS5bgww8/VG1NSkxMRF1dXfT2rY6sQxddeL1enjx5kna7nSdOnFBFxhwOBydMmCCCPP4YAgKCQHfffXfYoPhgcM2Q6vV6uWnTJlosFsbGxrK4uJhNTU0izR+etFgszMrKYmFhIadPn84JEyYEERsprglS29vbuWrVKlWUTJIkrlixgk6nk3a7nXq9njqdjqWlpaqlcofDwZycHFHObDZHvBIQNVJHKnLkcrm4fPnyoLirJEmMiYnh448/ztzcXAJgenp6yOWelpYWEQ/W6/UR72yJCqnt7e38xS9+QafTGZXNEuTXq7Dz58/n8uXL+eKLL4bUoLq6OppMJup0OrElqLKykhaLhbIsMysri2azmTqdjosXLx5QC1NTU8Uqws9//vOIZB80qXv27OGTTz4ZUiOrqqpoNptZVVXFjo6OiATyLw5OmTKFJpOJsizTaDQyMzOTb7/9tiqvx+PhrbfeSlmWabPZuH37dno8Hnq9Xi5evJharZZGo5GKotBisXDDhg0D1puWliZWVx944IGI2jAoUg8ePCgW99asWROU7t9KPm3aNB4/fjwigVauXCm2Xfq1r7y8nK+++io///xzVV7/DhVFUVhaWsqPPvpIpPlPtfhNQVJSEv/whz+ErHPfvn1i84VOpxsw32AxKFIbGxuFrZoyZUpQuv9XHj9+PJctW8a4uDhqNJrLvnLjoYceElOdmJgYlpWVcdu2bTx58mRIs1JZWUlZlpmYmMiqqirVFOpvf/ubauAym818/fXXeebMGVVva21tFV0f6Du2FOn4EJZUr9fLBx98UPziBQUFQXnS0tKEkQ9c5ZQkiW1tbSS/3tzgX3cPRXhcXJwoW15eTqfTSY/Hw9///vf82c9+FrT9Mj09nQA4ffp0Njc3q9717rvvqmSJjY3lsmXLuHTpUubn59Nms6lWZ/3yHjhw4LJJ7I+wpHZ0dIidHrIss6ysLCiPn9RQq56rV68m2beHP/D7lJQUQTip3rArSZLYc1pTU0Oj0UiNRsOUlBRV10xOTiYAlpSUBJmG/tt+Ro0axby8PNGLAtP0ej0lSeKmTZuict4qrJvqP8L4f+8LGRkZobwy1V9JksT/+/fvR3NzM2pqalRlzp49i+3bt2PLli0AgJ07d4q0G2+8ERMmTAAA7Nq1CxcuXABJdHZ24p133sGdd94JAEhJScG5c+fQ0dGBM2fOID4+HkDfAd/XX39dVV9GRgZefvlltLW14dChQ+jp6QHQdxTU7XZj0aJFmDNnDvR6fThKwiMc6w6HQ3QRWZa5bdu2oDz+c1L+p6CgQAw2FouFZWVlYstNYBdPT08XtnLBggXie79X4/V6xSE2v9lYtGiRqHfVqlU0GAw0GAy8+eabuWHDBn7729+m0WgM6jXTpk2LWAMHi0HFU/0XJEiShISEhKB0r9cr/pdlGbNmzRJa4/P5sG/fPvT29kKr1eLJJ5+E2WwG0HdlSHt7O4C+c1N++LXF4XDg3LlzUBQFQN8NGCdPnhTBnXvuuQcJCQniWPxTTz2FxsZGnD9/HpIkqWR0Op1X7D6CsKR2d3eLm3MkSUJeXt4l8yuKgnnz5ol7AALLp6Wl4b777sNNN90EWZbR1dWFlpaWAd/15z//GV9++SViY2NhNBoB9J2OdjgcAIAZM2agrq4OU6dOhcFggCzLiImJQWpqKtLT01XEXrhwAcePHw/X3KggLKn//ve/hX3UarXIzMwMyhMYRjMajSgqKhKk+nw+9PT0QKvV4rbbboPZbEZ2dja0Wi00Gg1cLpfqXYqiICUlBR0dHXjhhRfQ09OD8ePHIysrC5Ik4fz58/jLX/4CoE+jZ8+ejT/+8Y+oqanB2rVrsXbtWvzmN7/B0qVLVe/1eDz4+9//fpn0fA23243GxsZB3WoRNkj90Ucfic/JyckhDbnf6APA5MmTYTKZYLFYxIAlSRJGjRqFFStWAACsVissFotKAydOnAhJktDb2wuXy4XNmzfjiy++QHx8vPgxPvjgA1y8eBHHjh1DV1eX2KRhtVqxatUqlUz9B6ru7m4cPHgQFRUVl72549SpU/jlL3+JTz/9FL/+9a+Rn59/yfxhNbWnpwcajUYQEwoM2I/hv+TAarWqvi8uLsbUqVMBAAsWLMDcuXMRHx+P2NhYAMCsWbNEfQcOHMBzzz0HAJg0aRKWL1+O+fPnIy4uTmhrfw3vj8AeptPp0Nvbi71792Lt2rXo6OgI12wAwIkTJzB//nwsXrwYb7/9NgoKCsIS6ifkkli3bp3wcmbNmhUyT+BI63djN2/eLDwaSZLEuVQ/nE6n6oCDy+ViWlqauGABABMTE/n000/T6/XS6/Xy+eefZ3l5Obdu3crPPvvsknJPnDhR1J2fny9klCSJNpuNjz/+eMh7AFpbW/ncc89xzZo1HDVqlGoGM9iQYFhSKyoqqNFoKMsy77zzzpB5An3smpoakn2kPfDAA0xKSmJlZeWgAi12u5033XQTk5KSmJ2dzUceeUTlIHg8Hn7yySf87LPPwkbDxowZI2T68Y9/zE2bNompln96ptVqaTAYmJiYyLS0NCYkJFCr1VKWZfEjjBkzhvfff/9lxVjDklpZWUm9Xk+TycRf/epXIfP4tSIvLy+iKJXX6+X777/PnTt3cu/evUMOFns8HnGeVaPRcPv27fR6vayvr2dJSQlHjx4dtO2z/7xWURTm5OTwkUceuexYwKAW/vz2dOzYsSHz1NbW4tChQ1ixYgUSExPD25wBoNfrkZeXF3baFg6nTp0Sc1mj0YgbbrgBer0e3/3udzFjxgy88cYb2L17N/75z3/iP//5D7q7u8X9Aj6fDzabDXPnzkV5eTkKCgou28salJsqSRKSkpIwadKkkHlmzZolBppvAgIvaIiLi0NRUZFIM5vNuPfee3HvvfcC+HqG43fFbTYbMjMzI3JXw5J64cIFSJKEG2+8MeQc9ZuGnp4evPvuuwD6nBWz2XzJKVS0ekcgwpL66KOPIjc3FwsXLoyoa0cCf1BnMNMZt9uNv/71rwAAjUaDiRMnDrd4QQhL6rRp05CbmyvcwCsNt9uNN954A3v27FFFsi6V/7333gPQ551961vfGm4RgzCogIrJZBoRQoE+G2i1WrFr165B7ZI5evQovvzySwB9Xfs73/nOcIsYhKti19/u3bsBAPX19Zcktru7W1yhLEkSEhMTB+cBRRlXBamTJ09GSkoKtmzZgtbW1gHzud1uHD58WHy22WwjcojjqiA1IyMDRqMRJ06cwMsvvzxgpOiDDz4QASBJkjBjxowrKebXGJLLMgIoKSmhoigcN24c6+vrg9K9Xq/qzhaLxSL2Ul1pXDWkVldXMy4ujpIkMS8vj2+++Sbb29vpdrv56aef8kc/+pHKzVyyZMkVvTQxEFcNqS6Xi8XFxWKtS1EUTpw4kbfffrtYqvY/cXFxQUvWVxJXDakkeeTIEVUYL9Sj0+nY0NAQtT1dQ8FVRarP52NDQwOtVqvQ2MBQXnJyMhsaGkZazOifTb0SOH36NHbv3o39+/fjk08+gc1mw5w5czB//nykpaWNmKPix/8ASLjaAferDT0AAAAASUVORK5CYII=\",\"type\":\"image/png\",\"created\":\"20210818120914756\",\"modified\":\"20210818122004775\"},\"Constant strings cannot be combined with transclusions\":{\"title\":\"Constant strings cannot be combined with transclusions\",\"created\":\"20210818025604551\",\"description\":\"You often cannot combine a `{{transclusion}}` and some other text simply by placing them next to each other.\",\"modified\":\"20220103155140693\",\"parent\":\"Common Misunderstandings\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Often we need to build a string of text out of several components, such as [[variables|Variables]], constant strings (text that doesn't change), [[tiddler fields|Transclusions]], or [[filter expressions|Filters and Transclusions]]. It's tempting to simply place the references next to each other, like `<<variable>>constant{{!!field}}`, but this does not always work correctly, because in many contexts TiddlyWiki requires just //one// of these items, not several in a row.\\n\\n\\n!! Example of the mistake\\n\\n<<<\\nI want to add a template to the [[view template|The View Template]] which displays an image associated with each tiddler tagged “Artwork”. The image name is the name of the tiddler plus `.png`. I've tried a number of ways to write this without success.\\n\\n{{Sn:BadImageTransclusions||MagicSnippet}}\\n\\nI'm at my wits' end here. What does TiddlyWiki want from me?\\n<<<\\n\\n!! Explanation\\n\\nExamples 1--3 above are syntax errors because ''you cannot use transclusions'' (`<<variable>>`, `<<macro>>`, `{{field}}`, or `{{{ filter }}}`) ''inside other links or transclusions''. As a rule of thumb, if you're putting brackets inside other brackets with a different shape and you aren't writing a [[filter|Filters]], you're probably committing a syntax error.\\n\\nExamples 4 and 6 are also syntax errors because ''you cannot combine a transclusion with a constant string'' within an HTML attribute. You have to pick //either// one transclusion //or// one constant string. To put it more broadly, the value of an HTML or widget attribute like `src` can be exactly one of four things: a \\\"constant string in quotation marks\\\" that never changes, or a transclusion of a `{{{ filter result }}}`, `{{tiddler field}}`, or `<<macro call/variable reference>>` – but never a combination of two or more of those things. (See [[Summary of Macro and Transclusion Syntax]] for more on these kinds of transclusion.)\\n\\nExamples 5 and 7 are valid syntax but ''don't do what you want''. The \\\"double quotation marks\\\" make the entire value of the `source` or `src` attribute a constant string -- that is, TiddlyWiki doesn't look inside for [[wikitext|Wikitext]] and [[wikify|Wikification]] it, it just passes the text on to the `$image` widget or `img` tag. As a result, what you're asking TiddlyWiki to do is display an image with the literal title `{{!!title}}.png`.\\n\\nTo make things a little more complicated, this //does// work even though what you just learned might suggest it wouldn't:\\n\\n{{Sn:ImageTransclusionName||MagicSnippet}}\\n\\nThis example differs from the previous ones in that (a) the quotation marks here don't indicate a constant string because they're not used as the value of an HTML or widget attribute -- they're just more characters of text to TiddlyWiki here -- and (b) TiddlyWiki wikifies anything that ends up directly within the body of a tiddler (rather than in an attribute), including `{{!!field transclusions}}`.\\n\\n\\n!! Solutions\\n\\nThere are {{Ltc:TwoWaysToConcatenate||LieToChildrenTemplate}} to //concatenate// (smash together) text that needs to be used elsewhere in wikitext or as the value of an attribute: with a ''filter expression'', or with a ''macro, using text substitution''.\\n\\n!!! With a filter expression\\n\\nThe filter expression is easier to understand and has fewer gotchas, so let's start with that. We use the `addsuffix` [[filter operator|Anatomy of Filter Steps]] to add more text to the end of an existing input tiddler (or `addprefix` to add it to the beginning):\\n\\n{{Sn:GoodImageTransclusionFilter||MagicSnippet}}\\n\\nIn this particular filter expression, we start with the title of the current tiddler, then add a constant suffix to it. The `{{{ triple braces }}}` transclude the result of the filter expression directly into a tiddler. We can use constant strings, variables, or fields for any component of the filter, and add as many `suffix`es or `prefix`es as we need, so we could say for example:\\n\\n{{Sn:StringConcatenationWithFilters||MagicSnippet}}\\n\\nThis approach is still a transclusion, we're just simplifying it to a //single// transclusion rather than several pieces in a row. So it only works with text that's bound for the body of a tiddler or for an HTML tag or widget attribute; it still doesn't work within things like `[[wikitext links]]`. This isn't a big deal because [[there is an associated HTML or widget form for every feature of wikitext|Widgets]], but if you want to use the wikitext form, you might prefer the macro method.\\n\\n\\n!!! With a macro\\n\\nTo use a macro, we place the concatenation inside a [[macro|Macros]], performing [[text substitution|Text Substitution]] with $dollar signs$ on the part that changes. Then we call the macro as the value of our `source` attribute:\\n\\n{{Sn:GoodImageTransclusionMacro||MagicSnippet}}\\n\\nOr, if we prefer, since we're using text substitution, we can even use the wikitext syntax:\\n\\n{{Sn:GoodImageTransclusionMacroWikitext||MagicSnippet}}\\n\\nIf you aren't sure why this works better than the wrong examples, read the [[Text Substitution]] section for an explanation.\\n\\nNotice that we directly substituted a variable into the macro with the `$(parenthesized)$` syntax, rather than passing the tiddler title as a parameter and using the `$parameter$` syntax. This is because using the result of a macro call inside a macro call, like this, isn't valid syntax:\\n\\n```html\\n<$image source=<<myImageFilename <<currentTiddler>>>>/>\\n```\\n\\nAs a result, we actually //can't// pass `<<currentTiddler>>` in as a parameter; this is an irritating limitation, but for now it's how TiddlyWiki works. See [[Filters and Transclusions]] and [[Using Variables in Macros]] for more on this situation.\\n\\n(You can put `<<currentTiddler>>` in quotation marks to make the syntax valid, but then you're just passing the string `<<currentTiddler>>` rather than the name of the current tiddler to the macro, which isn't very helpful.)\"},\"Contact Tiddlers\":{\"title\":\"Contact Tiddlers\",\"created\":\"20200530203548943\",\"description\":\"How to track the people we meet at work, linking to the ideas they're involved in and modeling their attributes as discrete fields of information.\",\"modified\":\"20210818165302118\",\"parent\":\"The Shape of TiddlyWiki\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The second tiddler type to consider is the ''contact''. Let's create a contact and explore how we can organize contact information.\\n\\n!! Creating a contact tiddler\\n\\nStart by adding a [[link|Links]] to a contact to your [[journal tiddler|Journal Tiddlers]]. As a reminder, to edit an existing tiddler, click the pencil icon in the upper-right corner of the tiddler.\\n\\nRecall that to create a link, you can either surround the name of the tiddler you want to link to with `[[double square brackets]]`, or just write the text in [[CamelCase]]. I like CamelCase for personal notes for its simplicity of use, even though it's not quite as pretty, so let's try that. (Note that `JaneDoe` doesn't appear as a link in the following live example, because this book's wiki has CamelCase linking turned off -- but it will when you paste it into your own wiki, because we left it turned on there.)\\n\\n{{Sn:JaneDoeJournalStart||MagicSnippet}}\\n\\nWhen you type or paste this into your journal tiddler, if you have the live preview open you'll see the text `JaneDoe` immediately change color to indicate a link. It will be in italics, which indicates the tiddler doesn't yet exist. Let's click the link to open the nonexistent tiddler, then click the edit button to create it.\\n\\nWe'll want to tag our contacts `Contact`, so go ahead and click in the //Tag name// box under the title, type `Contact`, and press Enter. A <<tag-pill Contact>>tag pill will appear. Notice the drop-down menu that allows you to select an existing tag; you can continue typing to filter the list of tags, and use the up and down arrow keys and the Enter key to pick a tag from the list.\\n\\nWe don't necessarily even have to add any content to Jane's tiddler. Maybe to start with, we just want to let TiddlyWiki know that ''Jane is a contact''. So let's save the tiddler; either use the check icon <<textual-button \\\"done-button\\\">> again, or press Control+Enter (if you don't learn any other keyboard shortcuts, this is a really helpful one). If you look back up at the journal tiddler, you'll see that `JaneDoe` is no longer in italics, meaning that tiddler now exists.\\n\\n\\n!! Finding what Jane is involved in\\n\\nLet's imagine that, a week into your new job, you remember that you did something important with Jane in your action-packed first couple of days, but you can't for the life of you remember what or on which day. How do you figure out where that information went?\\n\\nSince TiddlyWiki keeps track of ''backlinks'', as long as we remembered to link to `JaneDoe` rather than just saying plain old “Jane Doe,” we can easily find everywhere we mentioned Jane. Click on the info button <<textual-button \\\"info-button\\\">> on the `JaneDoe` tiddler, then the //Backlinks// tab, and voilà, you'll see the journal tiddler show up, with a link directly to it. (If you don't see the info button, look in the menu under the more button <<textual-button \\\"down-arrow\\\">>; we made the info button show directly on the view toolbar in [[Tweaking Your Settings]].)\\n\\nBecause of this linking functionality, it's a smart idea to //always// link to people's names in your notes when you mention them, unless you explicitly don't want to find that mention of them when looking them up. The same goes for meetings, software applications, or any other concepts you might plausibly want to find mentions of. You don't need to actually create a tiddler for the concept for this to work -- you can get the backlinks even of a nonexistent tiddler.\\n\\nYou might be wondering why you wouldn't just search for the name of the person, application, or concept to find mentions of it. You certainly could, but unless the name of the concept is extremely unusual and there's only one form of the name, search is subject to both false positives (places where you used the word “Jane” but weren't talking about Jane Doe) and false negatives (places where you called Jane by a nickname, so they don't show up in the search). Explicitly created links never get missed, and they're only spurious if you were mistaken when you added them, so if you create the links yourself, you can ''be assured your lists are exactly correct'', making later searches much more efficient.\\n\\n\\n!! Adding some information about Jane\\n\\nWe said back in our requirements that we wanted to keep track of some information about Jane, not just be able to look up places we talked about her. Here's what I wrote:\\n\\n> Keep track of people we meet, their contact information, their managers, anyone else at the company they're related to, what they do, and what projects they're involved in.\\n\\nWe've already satisfied “keep track of people we meet” by mentioning Jane in our journal and creating a tiddler for her, and we'll satisfy “what projects they're involved in” by linking to Jane's tiddler from the relevant projects, once we create them. For “what they do,” let's put a brief description of Jane and her role in the company in the text of the tiddler:\\n\\n```html\\nJane works in the HR department managing the employee information system and onboarding new hires.\\n```\\n\\nEasy enough, but hold up just a second -- are there other things we might want to link to? TiddlyWiki's power is directly proportional to the amount of care you put into linking together and otherwise relating ideas, so it's worth being thoughtful here.\\n\\nI see at least two distinct concepts here that we might want to keep notes on, the HR department and the employee information system. You could argue that the onboarding process for this company is a concept as well. It's up to you whether these are ideas you'll want to keep track of, but if they are, you'll want to link to them. (This is one case where it's not so effective to create structure retroactively once you decide you need it: if you've created fifteen tiddlers that refer to the employee information system without calling it out as a concept, you have to go back and relink all of them once you realize they should be related. Further, you quite likely didn't use the same words to refer to the system in every case, so a search might not be that effective at finding all the instances. You may not even know it would be useful to //have// these relationships unless you've been linking as you go along!)\\n\\nFor our purposes, let's say we don't really care about keeping track of every note that discusses the HR department, nor about keeping notes about the department itself, so we'll leave that one off. However, the employee information system is probably going to be important, so let's link that one up by putting it in CamelCase. \\n\\n```html\\nJane works in the HR department managing the EmployeeInformationSystem and onboarding new hires.\\n```\\n\\nYou'll notice the link is in italics again since we haven't created the tiddler. It's up to you how fussy you want to be about creating tiddlers once you link to them. Many people like to leave them missing, and add content only when they have some content to put in them. Others prefer to create them immediately with some dummy content, or no content, so that it's more obvious if they misspell a concept the second time (if it shows up missing and it's something you think you would have referred to previously, that's a red flag). Personally, I generally create missing tiddlers once I know some tags that apply to them (e.g., Jane is a `Contact`), or once I have some useful content to put in them.\\n\\nOne more thing here: you might notice that I didn't link to `JaneDoe`, I just wrote “Jane,” even though I said just a little while ago that it was best practice to always link to contacts. That's because it's a pet peeve of mine to see a link to the current tiddler //within that tiddler// (since you're already there, if you click on it, nothing happens). So this is the one exception. If you're not as fussy as I am, you might just make it a habit to always link.\\n\\n!! Adding fields\\n\\nThere were a couple more pieces of information about Jane we wanted to keep track of:\\n\\n* contact information\\n* relationships to other people at the company -- manager and family\\n\\nSince this is a textbook example, let's keep life simple and say that at our company, email address and company phone number are the only contact information we need to know. We'll also consider only one type of “family relation,” whether it's the person's spouse, child, or third cousin twice removed.\\n\\nWe could just write this information in the text of the tiddler. However, as we create more contacts, it's likely we'd end up doing that in a slightly different way on each contact's tiddler. As a result, if we later decided we wanted to get a list of all the phone numbers of our contacts, we'd have to go through and pick them out manually. If we instead put each piece of information in a separate [[field|Fields]], we can easily search on or reference just that information from elsewhere in the wiki -- for instance, we could find everyone whose phone number starts with the area code 612, or create a table of all our contacts and their email addresses. You'll see much more on this later.\\n\\nSo let's create some fields. We can map the information onto fields this way:\\n\\n|!Name|!Value|\\n|`email`|`janedoe@company.com`|\\n|`phone`|`888-555-1234`|\\n|`manager`|`ChrisSmith`|\\n|`family`|`JohnDoe EmilyDoe`|\\n\\nTo actually add the fields, look under the text of the tiddler where it says //Add a new field//, fill in the //field name// and //field value// textboxes as appropriate, and click the //add// button or press the Enter key.\\n\\nA couple of notes about fields:\\n\\n* We'll want to be sure we ''use the same field names'' on every contact tiddler, or else we won't be able to cross-reference the values across different tiddlers. The drop-down for //field name// will show the names you've used in the past to reduce the chances of misremembering what you called it.\\n* Similarly, it's a good idea to be sure to use a ''consistent format'' across all tiddlers. For instance, for the phone number, decide that you use the `nnn-nnn-nnnn` format, rather than `nnnnnnnnnn` or `(nnn) nnn-nnnn`, and then use that across all contact tiddlers.\\n* The `family` field is an example of a ''tiddler list'' (or just ''list''), which consists of tiddler names separated by spaces. If your tiddler names have spaces in them, you put each tiddler name in double square brackets as if it were a link: `[[John Doe]] [[Emily Doe]]`. TiddlyWiki understands that lists are a series of separate tiddler names and can work with the values individually. We'll learn [[more about lists|Ordering Tiddlers]] in the next chapter.\\n\\nGo ahead and save the `JaneDoe` tiddler. You'll see that your custom fields don't show up anywhere on the tiddler itself, but if you click the info button <<textual-button \\\"info-button\\\">> and then the //Fields// tab, they'll appear there.\\n\\n!! Outstanding issues\\n\\nYou've probably noticed there are some annoying things about our implementation of contacts. These include:\\n\\n# ''You can't see the fields'' with Jane's contact information on the tiddler. Having to click the info button and then the //Fields// tab just to see Jane's phone number might annoy you. We'll solve this in an [[exercise|Ex:JaneDataTransclusion]] in chapter 4.\\n# Further, the people in the `family` and `manager` fields shown in the info area ''aren't linked'', so you'd have to go search for them if you wanted more information. The exercise mentioned in #1 will solve this issue too.\\n# You ''have to remember to add the fields'' every time you create a contact, and there is no prompting about what information to include in the field. We'll discuss how to create custom buttons that [[create tiddlers with prefilled fields|Creating Tiddlers With Predefined Fields]] in chapter 6.\\n\\nFor now, we have a working if suboptimal implementation of contacts, so let's proceed to creating some more tiddler types.\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Copyright\":{\"title\":\"Copyright\",\"created\":\"20210322221603280\",\"description\":\"Legal notices and information on redistributing //Grok TiddlyWiki//.\",\"modified\":\"20220103163329694\",\"parent\":\"Appendices\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Content copyright © 2021--<<now YYYY>> Soren Bjornstad. The TiddlyWiki core and the plugins found in this wiki belong to their respective owners and are used under license.\\n\\n//Grok TiddlyWiki//, including all custom TiddlyWiki templates and logic found in the wiki under `$:/sib/` and `$:/plugins/sobjornstad/`, is available under the ''CC BY-NC-ND 4.0'' [[license|https://creativecommons.org/licenses/by-nc-nd/4.0/?ref=chooser-v1]]. In summary, this means you are free to copy and share it with whomever you want, and to modify and remix it for your own personal use. You may //not// distribute all or part of //Grok TiddlyWiki// or its custom logic commercially, nor modify or adapt it and distribute a modified version, without first getting my permission. And while I have tried my best to be understandable and accurate, //Grok TiddlyWiki// is offered as-is with no warranty, and I will not be liable for any consequences that may arise from your use or redistribution of this free resource.\\n\\nIf you are interested in commercially distributing or adapting //Grok TiddlyWiki// in some way, or in using TakeAway for your own project, [[let's talk|https://sorenbjornstad.com/contact]].\\n\\nSome of the plugins found in the wiki, as well as the TiddlyWiki core itself, are available under licenses other than CC BY-NC-ND 4.0 -- either the MIT license or the 3-clause BSD license. Both of these licenses allow for freer use than CC BY-NC-ND 4.0, so this should not pose any difficulty, but it is ultimately your legal responsibility to ensure you comply with those licenses as well when redistributing //Grok TiddlyWiki//.\\n\\nThe summary above is for your convenience only and does not alter or supersede the text of any of these licenses, nor does it constitute legal advice. See the full licenses for your exact rights and obligations.\\n\\nThis is version ''{{Metadata##version}}'' of GTW. The latest version can always be found at https://groktiddlywiki.com.\\n\\n<p class=\\\"gtw-cc-copyright\\\" xmlns:cc=\\\"http://creativecommons.org/ns#\\\" xmlns:dct=\\\"http://purl.org/dc/terms/\\\"><a class=\\\"tc-tiddlylink-external\\\" property=\\\"dct:title\\\" rel=\\\"cc:attributionURL\\\" href=\\\"https://groktiddlywiki.com\\\">Grok TiddlyWiki</a> by <a class=\\\"tc-tiddlylink-external\\\" rel=\\\"cc:attributionURL dct:creator\\\" property=\\\"cc:attributionName\\\" href=\\\"https://sorenbjornstad.com\\\">Soren Bjornstad</a> is licensed under <a class=\\\"tc-tiddlylink-external\\\" href=\\\"http://creativecommons.org/licenses/by-nc-nd/4.0/?ref=chooser-v1\\\" target=\\\"_blank\\\" rel=\\\"license noopener noreferrer\\\" style=\\\"display:inline-block;\\\">CC BY-NC-ND 4.0.<img style=\\\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\\\" src=\\\"https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1\\\"><img style=\\\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\\\" src=\\\"https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1\\\"><img style=\\\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\\\" src=\\\"https://mirrors.creativecommons.org/presskit/icons/nc.svg?ref=chooser-v1\\\"><img style=\\\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\\\" src=\\\"https://mirrors.creativecommons.org/presskit/icons/nd.svg?ref=chooser-v1\\\"></a></p>\\n\\n<style>\\n.gtw-cc-copyright {\\n\\tborder: 1px solid;\\n\\tpadding: 5px;\\n\\ttext-align: center;\\n}\\n</style>\"},\"Creating Evergreen Notes\":{\"title\":\"Creating Evergreen Notes\",\"created\":\"20200603023508505\",\"description\":\"TiddlyWiki can prevent your old notes from withering and being lost when you use its features appropriately.\",\"modified\":\"20210502173906498\",\"parent\":\"Filing and Organizing\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"A recent exercise, [[Ex:FudgeAdviceReflection]], brings up some crucial points about how we organize our notes -- less about TiddlyWiki than about notes, but germane to TiddlyWiki. You can use TiddlyWiki without thinking about these points, but you'll be missing a lot of its value if you do. (If you're using TiddlyWiki for a purpose other than taking notes, some of this section may not apply, but most of it will likely still be helpful; you may just need to think a little bit about how it applies to your use case.)\\n\\nIf you skipped the last two exercises in [[Creating Hierarchies with a Table of Contents]], go back and do them (the last one follows on from the penultimate one). Then let's review what we did. We were in the `EmployeeProfileSetupMeeting`, and we extracted a tiddler for a part of that meeting in which Jane told us to be careful about using the word “fudge.” We then made it a child -- a hierarchical subcomponent -- of that meeting.\\n\\nThis section might be about to make you realize that, over your lifetime, you've lost track of a great deal of useful information that you could have saved, so buckle up!\\n\\n!! Why notes shouldn't stay where they're taken\\n\\nLet's think about what we did with the fudge note for a moment. Why did we take the time to write down this piece of information anyway? I don't know your motivation for keeping notes, and maybe you've never even thought about it, but mine for making this note would go something like this. I hope that the notes will have one or more of these functions:\\n\\n# ''Integration'': The act of making the note will help me think harder about the ideas in it and how they relate to what I already know, thus increasing my chance of remembering it without needing the notes at all.\\n# ''Reference'': When I'm about to talk about fudge in the future, even though I don't remember exactly what I needed to be careful about, I'll remember there was something about fudge that I made a note of, and I can then look it up.\\n# ''Serendipity'': The note about fudge will end up in a location where I happen across it at a time when it's relevant, even if I have completely forgotten the information existed at all (perhaps when I'm making plans to send an email to the whole office about getting fudge).\\n\\nI am guessing that your motivation is not altogether different.\\n\\nNone of these purposes are particularly well-served by keeping Jane's useful social tip ''within the notes about the meeting''. This may sound like an odd idea, because most people never move notes after they take them, and they take them in chronological bursts, perhaps divided into categories (e.g., a “meetings” notebook, a “project planning” notebook, a “calculus class” notebook). But think about it:\\n\\n* In scenario (2), unless the situation in which Jane told us this information was particularly unusual or shocking, it's highly unlikely that a month from now we'll remember that Jane was the one who gave it to us in this particular onboarding meeting and know to look in this meeting's notes for the information.\\n* In scenario (3), the chance we will stumble upon this meeting's notes again while writing new notes about fudge is similarly small.\\n* The concern with scenario (1) is less obvious, but if we spend some time making sure all of our notes are in the right place, chances are that will force us to [[think about the notes more thoroughly and connect them to related things we know about|https://en.wikipedia.org/wiki/Memory_rehearsal#Elaborative_rehearsal]], which means we're much more likely to remember them later.\\n\\nYou might object that we could just do a [[search|Searching]] for “fudge” to find it, so it doesn't matter where it is. I'm not bashing full-text search, because it's a fantastically useful tool, but it only goes so far. First of all, it only helps at all for scenario (2). No matter how good the search is, it doesn't help you find things you didn't know you were looking for, as in scenario (3), nor does it improve your memory, as in scenario (1). Second, while this is all fine at first, once you have several years of detailed notes, full-text search becomes considerably less helpful -- there are just too many matches to wade through for common words. (Most people have never been able to take notes that actually scale this far, so they haven't experienced this phenomenon!)\\n\\n(Sidebar: Machine-learning tools may be able to help suggest related notes in the future, as well as offering more intelligent options for full-text searches, thus helping with both (2) and (3), but the technology hasn't been tested in small-scale databases like personal notes yet as far as I'm aware, and it seems unlikely to ever do as well as relationships you describe yourself.)\\n\\n!! Making notes evergreen\\n\\nAn important insight when organizing notes is that ''the context in which you learn something is usually not the one in which that information is useful long-term''. New and interesting ideas usually consist of placing an existing idea in a new context, and unless you're taking an exam, even ideas you need to regurgitate unmodified are unlikely to be needed exactly in their original context. (You don't need to know the Pythagorean Theorem when you're looking at your math textbook; you need to know it when you have the dimensions of a room in your new house and want to figure out how much space your couch will take up if you put it diagonally in a corner.) Therefore, your goal when taking notes should be to ''put the idea in the context where it will be most useful'', rather than the context where you learned it.\\n\\nOf course, you're unlikely to know ahead of time precisely what that most useful context will be -- after all, if you did, you'd already have your next great idea. To approximate this ideal, we should:\\n\\n# Strive to place each note in a ''retrieval context'', i.e., one which will be permanently applicable and which will make sense when we are looking for the note.\\n# Relate the note to ''as many relevant things as possible'' to increase the chance of serendipitous associations later.\\n# Regularly ''return to each note'' to add additional links, insights, and references and move content around. Your thoughts change over time; your notes should change with them.\\n\\n[[Andy Matuschak|https://notes.andymatuschak.org/]] calls notes that follow this pattern ''evergreen notes''. These notes evolve and stay relevant, meaningful, and accessible over time, as opposed to traditional notes, which wither and die shortly after they're created as the original context ceases to matter. In his book //How to Take Smart Notes//, Sönke Ahrens likens the traditional note-taking pattern of storing notes chronologically to keeping your pants with your bleach because you bought them on the same day: chronology doesn't help you create any useful order here.\\n\\n!! Applying the principles\\n\\nLet's take each of the considerations for creating evergreen notes one at a time. First, the ''retrieval context''. The context we put a note in should be //permanently applicable// and //relevant to the situations where the note would be useful//.\\n\\nClearly, the meeting with Jane is not a permanently applicable context; once a meeting has happened, unless it made a truly remarkable impression or went down in company history for some reason, it's likely to be entirely forgotten within a week or two. The applicable contexts here are probably something like “things to be careful about at this company,” “bringing food to the office,” and maybe “fudge” (though you're unlikely to need a great deal of information about fudge at the office, you might want some in a more general wiki that included your favorite recipes).\\n\\nIn addition to being permanently applicable, the context should be one in which the note will actually be useful. We won't of course know exactly how the note will be useful in advance, so this can't be an exact science, but it's all too common to see people tag or otherwise classify their notes based on useless criteria. For instance, in the exercise that spawned this whole section, the scenario said that this was advice Jane gave us that shouldn't stray. We might then choose to classify this as “advice someone gave us that we shouldn't share” -- but this is a useless context. There is no situation in which we would plausibly say, “Hmm, what's some advice I've gotten at this company that I shouldn't tell John about?” These useless contexts not only waste our time but also make it harder to identify the most important parts of the note every time we return to it.\\n\\nIn TiddlyWiki, we'll want to add links or tags to put the item in appropriate contexts. A “things to be careful about” tag sounds like a grand idea: as we're starting the job, every time we hear about or experience a sore or touchy point, we can make a tiddler describing it, and we can periodically review the contents and have them as a reference if something catches our attention. (“Wait, fudge? I'm getting a bad feeling about this.”) Let's go ahead and add such a tag to the fudge tiddler. The tag tiddler won't exist yet, but that's fine -- if we later find content we should include in it, we can create it then.\\n\\nSecond, ''relating the item to as many relevant things as possible''. By now you have identified at least one sensible retrieval context for the item. But we want to put the item into multiple retrieval contexts, since we do not know which one it will be useful in later, and doing this may require taking a few moments to sit and think about what concepts it's related to. Certainly, if you spot any phrases in the text of your tiddler that might make good links, you can use those. But if you stop to think about it, you might also recognize connections to other things you've been working on or pondering that the text doesn't currently allude to. Add those links or tags in too. If it's not immediately obvious how some interesting but vague connection relates to the current tiddler and I'm not moved to spend a lot of time thinking about it, I often write something like `Cf. OtherTiddler` at the bottom of the tiddler.\\n\\nIf you feel like it, or if there's a particularly strong connection between the two notes, you can go to the tiddler at the other end of the link and see if it makes sense to work a mention to this tiddler into that as well. However, since TiddlyWiki will automatically list this tiddler as a backlink on the other tiddler, this isn't critical.\\n\\nLast, ''continuing to evolve our notes in the future''. The first two principles make it possible to continually revisit and improve on our notes by ensuring that we'll regularly encounter the notes whenever they're relevant. But it's this final item -- revisiting and improving on our notes over time, and deleting them if they are clearly never going to be useful again -- that really makes them //evergreen// and prevents them from decaying into uselessness.\\n\\nFortunately, TiddlyWiki is a low-friction editing environment: if we spot something that could use additional information, is related to another topic but doesn't have a link, or has gone out of date, all we have to do is click on the edit button and fix it. Do this! Notes that are out of date aren't useful, and the more out-of-date notes you have, the less useful the system as a whole becomes and the less motivated you'll be to refer to it and keep it updated. If you spot something wrong, fix it immediately. The [[broken windows theory|https://en.wikipedia.org/wiki/Broken_windows_theory]] definitely applies to notes.\\n\\n\\n!! What notes should be evergreen?\\n\\nCreating and maintaining evergreen notes, as you can see, requires some effort. If you like being creative, having useful ideas, and keeping the most important information for your work close at hand, this effort is worth it. However, it's also important not to spend our time rereading and carefully maintaining useless notes; not only is this a waste of time, it makes our work dull and draws our attention away from the ideas that matter.\\n\\nA lot of notes don't deserve to become evergreen; they //should// wither and die. Your brain does this: if something's inconsequential in the long term, you forget it. So your notes should do the same. Since computers don't automatically prune the information we put into them, you have to expend a little bit of conscious effort to help them along.\\n\\nThe question to ask yourself when you review notes on a meeting or a task you completed or a random thought you had in the shower is: ''do I want this idea to outlive the day?'' If the answer is yes, figure out how to pull that idea out into a tiddler of its own (or maybe integrate it into an existing tiddler). If the answer is no, save your time for a more valuable endeavor and leave the idea where it sits. If later you still remember that you had it and realize you badly need it, you'll probably be able to find it eventually with some searching and some manual effort. If not, as will happen over 99% of the time, your notes and your brain will have that much less useless clutter in them.\\n\\n!! Exercises\\n\\n{{Ex:FudgeTiddlerRevisited||ExerciseTemplate}}\\n{{Ex:IdentifyingRecentEvergreenNotes||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Creating Hierarchies with a Table of Contents\":{\"title\":\"Creating Hierarchies with a Table of Contents\",\"created\":\"20200603023508492\",\"description\":\"TiddlyWiki can produce hierarchical tables of contents from tag structures.\",\"modified\":\"20210817202551965\",\"parent\":\"Filing and Organizing\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Being able to browse by tags and links is nice. For many use cases that's enough, and indeed it's often better not to tie ourselves into trying to organize all of our notes into a single hierarchy. Sometimes, though, we have a cluster of notes about a particular topic that ''naturally forms into a hierarchy'' -- for example, an individual project -- and being able to view that hierarchy in a table of contents is a valuable way to see an overview of the topic. And certain applications of TiddlyWiki, such as writing a book, really do benefit from a hierarchy covering the entire contents of the wiki.\\n\\nImportant disclaimer: you can only use the built-in table-of-contents functionality with a hierarchy built out of tags, not one built out of fields or links. Fortunately, that's how we chose to do it in our example wiki. The TiddlyWiki Locator [[plugin|Plugins]] is useful if you need more powerful tools, including navigating hierarchies built of fields or links.\\n\\n\\n!! Creating structure tiddlers\\n\\nLet's look at how we can create a table of contents for our onboarding project. We'll begin by creating some basic structure underneath it. Let's say the project is broadly divided into three parts. We'll need to create a tiddler for each of these parts to define the hierarchy:\\n\\n* HR stuff about the company and government-mandated training -- `OnboardingHr`\\n* Introductions and social events/notes -- `OnboardingPeople`\\n* Training for the position -- `OnboardingTraining`\\n\\nGo ahead and create those three tiddlers and tag them `OnboardingProcess`, thus marking them as direct members of the idea `OnboardingProcess`. Rather than create new tiddlers and tag them manually, here's a handy timesaver: click the more drop-down <<textual-button \\\"down-arrow\\\">> on the `OnboardingProcess` tiddler and choose <<textual-button \\\"new-here-button\\\">> //New here//. A new tiddler will open, already tagged `OnboardingProcess`.\\n\\nThere's no need to put any content in the tiddlers for the time being. If we later find we need to give an overview of that part of the onboarding process, or we have information about it that doesn't seem to deserve its own tiddler, we can add it at that time.\\n\\n!! Creating the table of contents\\n\\nThe most basic table of contents is created with the wikitext `<<toc \\\"Root\\\">>`, where `Root` is the name of the tiddler you want the table of contents to start at. In our case, this will be:\\n\\n```html\\n<<toc \\\"OnboardingProcess\\\">>\\n```\\n\\nThe funny double angle brackets `<<>>` introduce a reference to a variable or a macro call. You don't need to worry about what those are for now; we'll learn a whole lot more about them in [[Chapter 4|Variables, Macros, and Transclusions]].\\n\\nGo ahead and edit the `OnboardingProcess` tiddler and drop that snippet in. You'll see that a numbered list of the items tagged `OnboardingProcess` shows up. But oops, the `EmployeeProfileSetupMeeting` probably doesn't belong at the top level now that we've added our three subparts of the onboarding project. It makes more sense to have it in `OnboardingHr`, agreed? Let's open the `EmployeeProfileSetupMeeting`, remove the `OnboardingProcess` tag, and add the `OnboardingHr` tag. If we save it and go back up to `OnboardingProcess` now, we'll see that now it's indented into a second level.\\n\\nThis is great, but what happens if we have a project tiddler that has dozens of tiddlers in it? This list is going to get long really fast! Try changing the code to this:\\n\\n```html\\n<<toc-expandable \\\"OnboardingProcess\\\">>\\n```\\n\\nYou'll see that only the topmost level of the hierarchy is displayed now, and little chevrons <<textual-button \\\"right-arrow\\\">> appear next to the items. If you click the chevron by `OnboardingHr`, it turns to point down <<textual-button \\\"down-arrow\\\">> and the next level shows up.\\n\\nBut wait…why are there chevrons next to `OnboardingPeople` and `OnboardingTraining`? Those don't have any content yet! If you click on one of them, you'll see that the chevron changes direction but nothing else happens. That's irritating, isn't it?\\n\\nAll right, third time's the charm:\\n\\n```html\\n<<toc-selective-expandable \\\"OnboardingProcess\\\">>\\n```\\n\\nAh, that's better! (If only it were so easy to solve annoying behavior in all of tech.) Now the chevrons only show up by the elements that can actually be expanded.\\n\\n\\n!! Ordering items\\n\\nYou might be wondering whether we can change the order of the items under each branch of the table of contents. TiddlyWiki has a general mechanism for ordering the tiddlers of a particular tag, and this order, once established, will be respected in many places, including tables of contents. We'll learn about this mechanism in the next section, [[Ordering Tiddlers]].\\n\\n\\n!! Exercises\\n\\n{{Ex:TocAddition||ExerciseTemplate}}\\n{{Ex:TocInternalExternalNav||ExerciseTemplate}}\\n{{Ex:TocCaptions||ExerciseTemplate}}\\n{{Ex:FudgeAdviceTiddler||ExerciseTemplate}}\\n{{Ex:FudgeAdviceReflection||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Creating Plugins\":{\"title\":\"Creating Plugins\",\"created\":\"20201124224911613\",\"description\":\"You can share your custom TiddlyWiki tools with other wikis and users by extracting them into plugins.\",\"modified\":\"20220103160555366\",\"parent\":\"Getting Technical\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"If you've developed some functionality in [[System Tiddlers]] in your wiki that you think others might get some use out of, you may wish to ''package them'' as a [[plugin|Plugins]] to make them easier to distribute.\\n\\n(Actually, you can distribute //any// content in plugins, system tiddlers or not. Plugins are rarely used for anything other than common wiki functionality, but you might be able to come up with some creative uses. For instance, //Grok TiddlyWiki// distributes most of its content as a plugin. This takes advantage of the [[shadowing|Shadow Tiddlers]] mechanism to allow users to update their book by importing a new version while leaving any changes they may have made to their copy in place.)\\n\\n\\n!! Folder structure and metadata\\n\\nPlugin development is usually more convenient on the Node.js version of TiddlyWiki, so begin by [[installing that|https://tiddlywiki.com/#GettingStarted%20-%20Node.js]] if you don't already have it. (If you don't want to use Node.js, a plugin has recently come out that lets you export plugins from within a single-file wiki. The resource links at the bottom of this section have more information.)\\n\\n''Create a new folder wiki'' to house your plugin. You'll use this wiki to document the features of the plugin as well.\\n\\nWithin the folder wiki, next to the `tiddlywiki.info` file, there is a `plugins` directory (if it doesn't exist yet, you can create it). ''Create a new directory'' here for your plugin, like you would if you were installing a third-party plugin. To this directory, ''add the tiddlers'' you want to bundle in the plugin. You can organize them into subfolders if you like, but note that this will have no impact on the hierarchy of the system tiddlers within the wiki -- the `title` field of each tiddler is the sole determiner of what the tiddlers are called.\\n\\nThen ''add a `plugin.info` file'' with some metadata in the plugin's folder (edit as appropriate for your plugin):\\n\\n```json\\n{\\n    \\\"title\\\": \\\"$:/plugins/yourname/pluginname\\\",\\n    \\\"description\\\": \\\"summary of the plugin's purpose\\\",\\n    \\\"author\\\": \\\"yourname\\\",\\n    \\\"version\\\": \\\"0.0.1\\\",\\n    \\\"core-version\\\": \\\">=5.0.8\\\",\\n    \\\"source\\\": \\\"https://github.com/yourgithub/pluginname\\\",\\n    \\\"list\\\": \\\"readme license\\\",\\n    \\\"plugin-type\\\": \\\"plugin\\\"\\n}\\n```\\n\\n''Pay special attention to the `list` field'', which I've added to this template from the standard one presented in the TiddlyWiki dev wiki. The tiddlers in here become tabs in the plugin's tiddler (the one you get when you click on it in the //Plugins// view of the //More// tab of the sidebar). It's good practice to include at least a readme briefly describing the plugin and where you can learn more, and a license (see https://choosealicense.com/ if you're not sure what this is or how to choose one; the MIT license is popular in the TiddlyWiki community).\\n\\nThe `list` field is a [[tiddler list|Ordering Tiddlers]], but a weird one -- TiddlyWiki prepends the value of `title` plus a slash to the names listed here, so `readme` as shown in the template actually refers to `$:/plugins/yourgithub/pluginname/readme`. (I'm still sour about how long this took me to figure out the first time I made a plugin!)\\n\\n!! Editing\\n\\nWhile you're tweaking the plugin, writing the docs, and making sure everything is correct, if you want to test out or edit tiddlers directly in TiddlyWiki, you can start the listener in the wiki folder (`tiddlywiki --listen`) and edit from your browser.\\n\\nIt's good practice to include a prominent link to your plugin tiddler (e.g., `$:/plugins/yourname/yourpluginname`) on one of the //startup tiddlers// for your wiki (i.e., the ones that appear when you load the wiki, as configured in GettingStarted), since users will need to drag and drop this link to install the plugin.\\n\\n!! Building\\n\\nIf you know how to use [[Git|https://git-scm.com/]] or another source-control tool, now is a good time to create a repository and commit your folder wiki if you haven't already done so.\\n\\nGenerally, to make your plugin available on the web, all you have to do is ''share your wiki''. The simplest way to share your wiki is to build it into a single file by running `tiddlywiki --build index`, which will place an `index.html` file in the `output` subdirectory of the wiki. You can then publish this file to the web any way you like, or even just email it to other users; an easy, free, and popular method is to use [[GitHub Pages|https://pages.github.com/]] to serve the page from the same GitHub repository you keep the source code of your plugin in. Users can drag and drop the plugin link to install it, as mentioned in the //Editing// section above.\\n\\n\\n!! Resources\\n\\n* ''The TiddlyWiki Dev wiki'' is a bit short on detail and a bit out of date as of this writing, but [[offers some valuable guidance on the process|https://tiddlywiki.com/dev/#Developing%20plugins%20using%20Node.js%20and%20GitHub]].\\n* The [[Sistan|http://sistan.tiddlyspot.com]] ''online tutorial'' presents several options for creating plugins in somewhat more detail than provided here, including options for building a plugin from within a single-file wiki, without using Node at all.\\n* The [[PluginMechanism|https://tiddlywiki.com/#PluginMechanism]] ''page on tiddlywiki.com'' describes the details of how plugins are handled internally and how metadata is defined, as well as how to create plugins that depend on other plugins.\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Creating Tiddlers With Predefined Fields\":{\"title\":\"Creating Tiddlers With Predefined Fields\",\"created\":\"20200719030352650\",\"description\":\"Explore buttons, system tags, action widgets, and messages by adding new buttons to the toolbar that create tiddlers with some custom field values already in place.\",\"modified\":\"20210327163010908\",\"parent\":\"Looking Under the Hood\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In our office wiki, we have a number of types of tiddlers that we often need to create with particular text and fields. In particular, let's focus on contacts and meetings. Right now, it's fairly complicated to add one of these -- we have to remember what fields and standard content we want to add to each. It would be better if, like with the built-in [[journal button|Journal Tiddlers]], we could ''prefill some values in the tiddler's fields''.\\n\\nTiddlyWiki has a built-in message called `tm-new-tiddler` that can help us do this. A ''message'' is a way of triggering a specific action to take place in the wiki -- when you trigger a message, any widgets higher up the widget tree are given the opportunity to respond to the message. That is, if you trigger a message within a button, the button can respond, the HTML element containing the button can respond, and so on up to the level of the whole wiki. This is much like [[the way TiddlyWiki refreshes elements after a tiddler is changed|Ex:EditCurrentTiddler/answer]], but the news propagates the other way: news of refreshes starts at the top of the wiki and works its way down the widget tree to each element on a page, while a message starts at an individual element and works its way up the widget tree until it reaches the //root widget// (the very top of the tree).\\n\\nYou can trigger a message using the `$action-sendmessage` widget. This is a new type of widget that we haven't seen before, called an ''action widget''. (As you might have guessed, the names of all action widgets begin with `$action-`.) An action widget doesn't display anything on the screen, but instead causes something to happen -- creating a new tiddler, navigating somewhere, sending a message, etc. An action widget can't stand alone in a tiddler but has to be part of a button or other triggerable element, or it will never do anything (if TiddlyWiki didn't enforce this restriction, the action would fire randomly whenever something happened that triggered its containing tiddler to refresh itself, which you probably wouldn't want!).\\n\\nHere's how this looks in practice for creating a new tiddler:\\n\\n{{Sn:NewTiddlerActionWidget||MagicSnippet}}\\n\\nIt's also possible to put the action widget inside the `$button` widget along with the text of the button:\\n\\n{{Sn:NewTiddlerActionWidgetText||MagicSnippet}}\\n\\nThis second method is widespread in the wild, but it's usually better to avoid it nowadays, as [[it's deprecated|https://tiddlywiki.com/#ActionWidgets]] and could be removed in a future version of TiddlyWiki.\\n\\nIn either case, when you click on the button, the action will be triggered, which will send a `tm-new-tiddler` message, which will create a new draft tiddler with the fields you've defined in the attributes of the action widget and open it for editing.\\n\\nIf you like, you can put several action widgets within the macro or the `$button` widget. They will be triggered in sequence when the button is clicked.\\n\\n\\n!! Exercises\\n\\n{{Ex:NewContactButton||ExerciseTemplate}}\\n{{Ex:NewMeetingButton||ExerciseTemplate}}\\n{{Ex:ButtonsOnPageToolbar||ExerciseTemplate}}\\n{{Ex:SelectiveButtonDisplay||ExerciseTemplate}}\\n{{Ex:ButtonDisplayTweaks||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Creating a List of Links and Backlinks\":{\"title\":\"Creating a List of Links and Backlinks\",\"created\":\"20200718160337924\",\"description\":\"Dive into adding custom tooling to TiddlyWiki by building a list of outbound and inbound links that appears at the bottom of every tiddler.\",\"modified\":\"20210606143915261\",\"parent\":\"Looking Under the Hood\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Let's put everything we've learned so far about customizing TiddlyWiki together by building a useful and commonly requested tool. Several plugins offer prefabricated versions of the tool we're about to discuss, which you might or might not prefer to building your own, but creating our own will be educational at the least.\\n\\nWe know we can get at the backlinks of a tiddler by looking at the info section of a tiddler. In many types of wikis, however, it's convenient to have the backlinks much more obvious. Let's build some custom functionality to ''show all of the backlinks at the bottom of each tiddler'' without having to click on anything. While we're at it, let's summarize the forward links in the tiddler here, too: at the bottom of the tiddler, we'll have two columns, the left column showing all the forward links and the right column showing all the backward links. (You may notice that this is strikingly like the “related topics” view you can find in the footer of any section in this book -- so no cheating by looking there!)\\n\\nMost of this section will be presented as a series of exercises: you'll be given a small incremental step in the implementation to try on your own, and in the answer I will show one possible way to do it. At that point, you're free to either change your implementation to match the answer or attempt to continue with your own version.\\n\\n\\n!! Building the logic\\n\\n{{Ex:BasicBacklinksList||ExerciseTemplate}}\\n{{Ex:BasicLinksList||ExerciseTemplate}}\\n{{Ex:LinkedTiddlerExcerpt||ExerciseTemplate}}\\n{{Ex:CreatingLinkDivs||ExerciseTemplate}}\\n{{Ex:LinkDivClasses||ExerciseTemplate}}\\n\\n\\n!! Improving the formatting\\n\\nCustom formatting can be added to tiddlers using a //stylesheet//. Stylesheets are written in the [[CSS|https://en.wikipedia.org/wiki/Cascading_Style_Sheets]] (Cascading Style Sheets) language, an extremely powerful if slightly obtuse formatting language that controls the display of every web page you've ever looked at. You can either put a stylesheet in an individual tiddler within `<style>` tags (this is called an //inline// stylesheet) or make it global to the wiki. See [[Stylesheets]] if you know a little CSS and want more details on the options TiddlyWiki provides here.\\n\\nTeaching you CSS is outside the scope of this book -- and I'm no expert myself anyway -- so I'm just going to give you a stylesheet to use with this exercise. If you're interested in learning more, there are a wide variety of resources on the Internet.\\n\\n```css\\n<style>\\ndiv.sib-link-display {\\n  border: 1px dashed white;\\n  overflow: auto;\\n  padding: 2px;\\n}\\ndiv.sib-link-display div ul {\\n  list-style-type: none;\\n  padding-left: 0;\\n}\\ndiv.sib-link-display div ul div.sib-excerpt {\\n  padding-left: 1em;\\n  color: <<colour muted-foreground>>;\\n}\\ndiv.sib-links {\\n  width: 50%;\\n  float: left;\\n  padding-right: 0.5em;\\n}\\ndiv.sib-backlinks {\\n  width: 50%;\\n  float: right;\\n  padding-left: 0.5em;\\n}\\n</style>\\n```\\n\\nIf you named the classes you put on your divs something different than I did, you'll need to replace the names in the part before each opening `{` (this part is called the //CSS selector//). Otherwise, just paste this at the bottom of the tiddler and save it, and your links should suddenly look much prettier.\\n\\n\\n!! Final tweaks\\n\\n{{Ex:ExcerptConfigurationTiddler||ExerciseTemplate}}\\n{{Ex:PaletteInvestigation||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Data Tiddlers\":{\"title\":\"Data Tiddlers\",\"created\":\"20200717234504136\",\"description\":\"A //data tiddler// packs a series of name-value pairs into a single tiddler's text field.\",\"modified\":\"20210410193139277\",\"parent\":\"More Organizational Tools\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Once in a while you may end up with a bunch of simple data composed of key-value pairs, where you have one piece of information and want to look up the other. For instance, let's suppose we want to create a display of what holiday today is, if it is a holiday. We have a list of the months and days of some common United States holidays (we'll pretend for the moment that no holidays exist that don't fall on the same date every year!):\\n\\n|!Date|!Holiday name|\\n|01/01|New Year's Day|\\n|07/04|Independence Day|\\n|10/31|Halloween|\\n|12/25|Christmas Day|\\n\\nIf we have lots of other information about these holidays, it would make sense to create a tiddler for each holiday and use [[fields|Fields]] to store the different data points we wanted to track about each holiday. However, if the names and dates above are all we care about, and we just want to be able to see if a particular day is a holiday, that might be overkill.\\n\\nWe might also find the approach of creating tiddlers annoying if we have a way to import this data from somewhere outside the wiki -- we can likely get a list of holidays in some standard format, but TiddlyWiki tiddlers are not likely to be one of those standard formats!\\n\\nIn these situations, ''data tiddlers'' can come in handy. A data tiddler is a tiddler with a special content type whose `text` field contains a series of key-value pairs, like the date-name pairs shown in the table above. There are two ways to format a data tiddler: TiddlyWiki's ''built-in dictionary format'', and ''JSON'' (JavaScript Object Notation, a standard data interchange format). If you're familiar with JSON, be aware that only very simple JSON files with a single level of key-value pairs are supported (no arrays or objects).\\n\\nEach key-value pair in a data tiddler is called a ''property'', and the key of each property is called its ''index''.\\n\\n\\n!! Creating a data tiddler\\n\\nLet's create a data tiddler called `UsHolidays` for these holidays. The tiddler's content will look like this:\\n\\n```html\\n01/01: New Year's Day\\n07/04: Independence Day\\n10/31: Halloween\\n12/25: Christmas Day\\n```\\n\\nYou can see that the keys (the month and day) are separated from the values (the name of the holiday) by a colon. Spaces before or after the colon don't affect the value TiddlyWiki sees.\\n\\nPaste this content into a new tiddler, then from the //Type// drop-down underneath the text field, pick `application/x-tiddler-dictionary` and save the tiddler.\\n\\nTo work with data tiddlers, we use a special addition to the normal transclusion syntax: to get the value for the index `07/04` from the `UsHolidays` data tiddler, we write `{{UsHolidays##07/04}}`. You can also use the `getindex` filter operator, like `[[UsHolidays]getindex[07/04]]`.\\n\\n\\n!! Exercises\\n\\n{{Ex:HolidayToday||ExerciseTemplate}}\\n{{Ex:VeryOrdinaryDay||ExerciseTemplate}}\\n{{Ex:JsonHoliday||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Datetime Format\":{\"title\":\"Datetime Format\",\"created\":\"20210207000729290\",\"modified\":\"20210817231602214\",\"tags\":\"Fragment\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"TiddlyWiki uses an awkward format for dates and times: the four-digit year, the two-digit month, the two-digit day, the two-digit 24-hour hour, the two-digit minute, the two-digit second, and the three-digit milliseconds, all run together, in the UTC timezone (colloquially known as {{Ltc:GmtUtc||LieToChildrenTemplate}}). So if it's 8:31:41 PM my time on May 30, 2020 right now, Central Daylight Time (UTC-5), the time according to TiddlyWiki is 20200531013141000 (it's on the 31st at 1am because I have to add 5 hours to get to UTC).\"},\"Downloading Grok TiddlyWiki\":{\"title\":\"Downloading Grok TiddlyWiki\",\"created\":\"20201230143321900\",\"description\":\"How to make a copy of this book so you can save your progress.\",\"modified\":\"20210321144555504\",\"parent\":\"The Shape of TiddlyWiki\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"//Grok TiddlyWiki// is a TiddlyWiki itself, as you may have noticed or suspected by now. To get the full value out of GTW, you'll want to create your own copy of this wiki; this will allow GTW to save information about your progress and personalize the book for you. If you don't create a copy, you won't be able to keep track of which exercises you've completed, review takeaways, create bookmarks, or save your place when you stop reading.\\n\\n{{SavingProgress}}\"},\"Ex:AddContactTemplates\":{\"title\":\"Ex:AddContactTemplates\",\"complete\":\"\",\"created\":\"20200605153455384\",\"length\":\"s\",\"modified\":\"20210322232758036\",\"origin\":\"Templates and the Current Tiddler\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Place the `ContactInformationTemplate` on all of the contacts in your wiki.\\n\\n(You may be wondering if there's a way to avoid even the repetition of adding the reference to the template to all your tiddlers. The answer is yes, and we'll [[be getting there in a couple chapters|The View Template]].)\"},\"Ex:AllFamilyInformation\":{\"title\":\"Ex:AllFamilyInformation\",\"complete\":\"\",\"created\":\"20201122034146442\",\"length\":\"m\",\"modified\":\"20210409214810732\",\"origin\":\"Filters and Transclusions\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Edit the `ContactInformationTemplate` so that a contact's family members each get their own bullet point, nested underneath the `Family` bullet point, listing their name and phone number, like this:\\n\\n* ''Family'':\\n** JohnDoe: 888-555-9999\\n** EmilyDoe: 888-555-1111\\n\\n//Tip:// You'll need to use [[HTML]] for the inner bulleted list, as wikitext lists can't be interleaved successfully with `$list` widgets. While it's possible to make everything show up correctly while still writing the outer bulleted list in wikitext, if you're struggling with the formatting, it may be easier to switch the outer list to an HTML list as well.\\n\\nAs a reminder, to nest lists in HTML, put another `<ul>` opening tag inside an `<li>` tag.\"},\"Ex:AllFamilyInformation/answer\":{\"title\":\"Ex:AllFamilyInformation/answer\",\"created\":\"20201122034213721\",\"modified\":\"20201122034453414\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<ul>\\n\\t<li>''Email'': {{!!email}}</li>\\n\\t<li>''Phone'': {{!!phone}}</li>\\n\\t<li>\\n\\t\\t''Family'':\\n\\t\\t<ul>\\n\\t\\t\\t<$list filter={{!!family}}>\\n\\t\\t\\t\\t<li>{{!!title}}: {{!!phone}}</li>\\n\\t\\t\\t</$list>\\n\\t\\t</ul>\\n\\t</li>\\n\\t<li>''Manager'': {{!!manager}}</li>\\n</ul>\\n```\\n\\nHere's the same thing, retaining the outer bulleted list in wikitext. The critical part is that the `<ul>` has to be on the same line as the end of the `Family` bullet -- otherwise it won't be treated as a nested list.\\n\\n```html\\n* ''Email'': {{!!email}}\\n* ''Phone'': {{!!phone}}\\n* ''Family'': <ul>\\n  <$list filter={{!!family}}>\\n    <li>{{!!title}}: {{!!phone}}</li>\\n  </$list>\\n</ul>\\n* ''Manager'': {{!!manager}}\\n```\"},\"Ex:AlphabeticallyLastDescription\":{\"title\":\"Ex:AlphabeticallyLastDescription\",\"created\":\"20200603185508516\",\"length\":\"M\",\"modified\":\"20210606030005775\",\"origin\":\"Common Filter Operators\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"What is the alphabetically last description that any button on the editor toolbar uses? (The description is what shows up when you hover over the button, minus the indication of the keyboard shortcut. No cheating by hovering over every button!)\\n\\nYou'll need some additional information for this one:\\n\\n* Remember that [[everything's a tiddler|Tiddlers]]? Buttons in TiddlyWiki's interface are tiddlers too!\\n* A tiddler is part of the editor toolbar if it is tagged `$:/tags/EditorToolbar`.\\n* You'll need to start your filter with `all[shadows]` to get any results.\\n* Your filter expression will have more steps than any we've seen so far. Add one step to the filter expression at a time, inspecting the result to determine how you need to modify the list (what step you need to add) next. You'll eventually reach a point where you have a bunch of results that are wrapped in curly braces, like `{{$:/language/Buttons/Paint/Description}}`. When you get here, add the following filter steps to the end of your filter: `split[{{]split[}}]`.\\n\\nAnd here are two hints if you need them:\\n\\n# How do you think we would define the description of a button in the TiddlyWiki data model?\\n# The content of a language tiddler, like `$:/language/Buttons/Paint/Description`, is stored in its `text` field.\\n\\nThis one is intended to be a little bit above your level at the moment -- we won't get to some of the concepts involved until chapter 6, [[Looking Under the Hood]] -- so you might not be able to figure it out. But spend some time working on it before you look at the answer.\"},\"Ex:AlphabeticallyLastDescription/answer\":{\"title\":\"Ex:AlphabeticallyLastDescription/answer\",\"created\":\"20200603185713595\",\"length\":\"M\",\"modified\":\"20210206183436530\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The answer, at least as of TiddlyWiki 5.1.23 with no plugins, is ''Wrap selection in square brackets''.\\n\\nHere's the filter I used:\\n\\n```\\n[all[shadows]tag[$:/tags/EditorToolbar]get[description]split[{{]split[}}]get[text]!sort[]first[]]\\n```\\n\\nHere's a live version. The `{{{triple curly braces}}}` tell TiddlyWiki to display the result of the filter; we'll learn much more about this syntax in [[Filters and Transclusions]].\\n\\n{{Sn:AlphabeticallyLastFilter||MagicSnippet}}\\n\\nYou might have used a slightly different filter; as usual with computers, there's more than one way to do things.\\n\\nLet's break this filter down:\\n\\n* `all[shadows]`: As mentioned in the question, you won't be able to see any of the tiddlers we're looking at without adding this. We'll talk more about [[shadow tiddlers|Shadow Tiddlers]] in a later chapter.\\n* `tag[$:/tags/EditorToolbar]`: This limits the list of shadow tiddlers to those that represent buttons on the editor toolbar.\\n* `get[description]`: This retrieves the contents of the `description` field of each matching tiddler. Thus, instead of the tiddler titles being in our filter pipeline, the contents of the `description` fields of each tiddler will now be in the pipeline.\\n* `split[{{]split[}}]`: This eliminates the `{{double braces}}` that surround each value of the `description` field on these tiddlers. Double braces introduce //transclusion//, which we'll [[discuss|Transclusions]] in a later chapter.\\n* `get[text]`: Removing the double braces resulted in a new set of tiddler titles. We want to get the text of these tiddlers, since that contains the descriptions we're looking at.\\n* `!sort[]`: This sorts the set of tiddler texts in our filter pipeline in reverse order, putting the alphabetically last item at the top, which is `Wrap selection in square brackets`.\\n* `first[]`: This selects only the first item. You don't really have to use this in this case -- you could just pick the first item out of the list -- but it'll be nice later when you learn how to display the results of a filter inside some other part of TiddlyWiki's interface and a bunch of irrelevant crud will be much more annoying.\"},\"Ex:BacklinksConditionalDisplay\":{\"title\":\"Ex:BacklinksConditionalDisplay\",\"created\":\"20210207214626820\",\"length\":\"m\",\"modified\":\"20210207214550313\",\"origin\":\"Hiding and Showing Things\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Update your template that [[displays a list of links and backlinks|Creating a List of Links and Backlinks]] so that the list doesn't appear if there are no links or backlinks.\"},\"Ex:BacklinksConditionalDisplay/answer\":{\"title\":\"Ex:BacklinksConditionalDisplay/answer\",\"created\":\"20210207214655751\",\"modified\":\"20210207215748750\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The portion that needs to be wrapped in a `$list` widget is the part that calls the macros -- trying to wrap the macros won't end well because [[pragmas have to be the first thing in their tiddler|Ex:MacroPosition/answer]].\\n\\n```html\\n<$list filter=\\\"[all[current]links[]] [all[current]backlinks[]] +[first[]]\\\" variable=_>\\n\\t<!-- begin part that was already there -->\\n\\t<div class=\\\"sib-link-display\\\">\\n\\t\\t<<linkDisplay \\\"Links\\\" \\\"links[]\\\" \\\"sib-links\\\">>\\n\\t\\t<<linkDisplay \\\"Backlinks\\\" \\\"backlinks[]\\\" \\\"sib-backlinks\\\">>\\n\\t</div>\\n\\t<!-- end part that was already there -->\\n</$list>\\n```\"},\"Ex:BasicBacklinksList\":{\"title\":\"Ex:BasicBacklinksList\",\"created\":\"20200718200211240\",\"length\":\"m\",\"modified\":\"20210418142252483\",\"origin\":\"Creating a List of Links and Backlinks\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create a tiddler called `$:/yourname/TiddlerLinkSummary`. Make this tiddler display a simple bulleted list of all backlinks of the current tiddler. (Since we will need to make this more complex momentarily, use a `$list` widget, not a `list-links` macro.) Then make this content included at the bottom of every tiddler.\"},\"Ex:BasicBacklinksList/answer\":{\"title\":\"Ex:BasicBacklinksList/answer\",\"created\":\"20200718200917466\",\"modified\":\"20210418142212216\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"To display the list:\\n\\n```html\\nBacklinks:\\n\\n<ul>\\n<$list filter=\\\"[all[current]backlinks[]]\\\">\\n  <li><$link /></li>\\n</$list>\\n</ul>\\n```\\n\\nTo make the `$:/yourname/TiddlerLinkSummary` template appear on every tiddler, you'll need to tag it `$:/tags/ViewTemplate`. Positioning it in the `list` is optional in this case, since it will appear after the listed items anyway by default.\"},\"Ex:BasicLinksList\":{\"title\":\"Ex:BasicLinksList\",\"created\":\"20200718201206937\",\"length\":\"m\",\"modified\":\"20210130174304842\",\"origin\":\"Creating a List of Links and Backlinks\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Edit `$:/yourname/TiddlerLinkSummary` to show a list of the forward links as well. We don't want the wikitext to get too repetitive, so create a macro to hold the bits that are the same in both.\"},\"Ex:BasicLinksList/answer\":{\"title\":\"Ex:BasicLinksList/answer\",\"created\":\"20200718201238626\",\"modified\":\"20210418142500773\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"My tiddler now looks like this:\\n\\n```html\\n\\\\define linkDisplay(title, filterFragment)\\n$title$:\\n\\n<ul>\\n<$list filter=\\\"[all[current]$filterFragment$]\\\">\\n  <li><$link /></li>\\n</$list>\\n</ul>\\n\\\\end\\n\\n<<linkDisplay \\\"Links\\\" \\\"links[]\\\">>\\n<<linkDisplay \\\"Backlinks\\\" \\\"backlinks[]\\\">>\\n```\\n\\nLet's talk about `filterFragment` for a moment. The way shown above is the simplest way to handle it, and TiddlyWiki's core does this in a number of macros, but if we didn't want to use [[text substitution|Text Substitution]], or we wanted to be able to reuse this macro in places where we didn't always want just the current tiddler, we could also make the entire filter the parameter to the macro (we'll call it `filterString`) and use parameter substitution instead:\\n\\n```html\\n\\\\define linkDisplay(title, filterString)\\n[…]\\n<$list filter=<<__filterString__>>>\\n[…]\\n```\\n\\nAnother option would be to use `subfilter`. This filter operator takes an argument which is itself a filter run, and passes the current data into that run. Here's how we could do that:\\n\\n```html\\n\\\\define linkDisplay(title, filterFragment)\\n$title$:\\n\\n<ul>\\n<$list filter=\\\"[all[current]subfilter<__filterFragment__>]\\\">\\n  <li><$link /></li>\\n</$list>\\n</ul>\\n\\\\end\\n\\n<<linkDisplay \\\"Links\\\" \\\"[links[]]\\\">>\\n<<linkDisplay \\\"Backlinks\\\" \\\"[backlinks[]]\\\">>\\n```\\n\\nTwo things to note here:\\n\\n* Previously, the `filterFragment` parameter was just a single filter step. Now it has to be a complete filter run.\\n* Using macro parameter substitution with `<<__param__>>` is valid inside a filter, so long as you use single angle brackets.\\n\"},\"Ex:BasicWikitext\":{\"title\":\"Ex:BasicWikitext\",\"complete\":\"\",\"created\":\"20201125212517598\",\"length\":\"m\",\"modified\":\"20210409022603240\",\"origin\":\"Journal Tiddlers\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Edit the journal tiddler again by clicking the pencil icon <<textual-button \\\"edit-button\\\">> in its upper-right corner, and add some boilerplate that uses the following types of formatting in the notes editor:\\n\\n* ''Bold'', //italics//, and `monospaced text`\\n* A bulleted list\\n* A numbered list\\n* A section heading\\n* A block quote\\n* A code snippet (called a “monospaced block” on the editor toolbar)\\n\\nFor the lists, block quotes, and code snippets, note that you need to have at least one blank line both above and below them to ensure everything displays correctly.\\n\\nWe'll be learning more wikitext syntax as we go through the rest of the book. You can also refer to the [[Wikitext Reference]] appendix for a listing of the syntax you're most likely to want. That said, if you don't feel comfortable with what you've seen so far, you might consider doing this exercise a second time; if you feel uncomfortable using wikitext, it will be a major drag on your ability to accomplish more complicated things in TiddlyWiki.\"},\"Ex:BulletedMeetingList\":{\"title\":\"Ex:BulletedMeetingList\",\"created\":\"20200603192826693\",\"length\":\"m\",\"modified\":\"20210130174314210\",\"origin\":\"Your First Dynamic List\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Modify the `MeetingList` so that instead of separating the meetings with a simple line break, they form a bulleted list.\\n\\n//Hint 1//: Remember that HTML code for creating a bulleted list?\\n\\n//Hint 2//: The contents of the list widget are rendered once for every tiddler output by the filter. Which parts of the HTML code for creating a list need to be used repeatedly, and which need to be used only once?\"},\"Ex:BulletedMeetingList/answer\":{\"title\":\"Ex:BulletedMeetingList/answer\",\"created\":\"20200603194852266\",\"modified\":\"20200603195014987\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<ul>\\n\\t<$list filter=\\\"[tag[Meeting]!sort[at]]\\\">\\n\\t\\t<li><<currentTiddler>></li>\\n\\t</$list>\\n</ul>\\n```\\n\\n(If you left in the `contains:participants[JaneDoe]` filter step from the previous exercise, that's fine too.)\"},\"Ex:ButtonDisplayTweaks\":{\"title\":\"Ex:ButtonDisplayTweaks\",\"created\":\"20200822192642714\",\"length\":\"M\",\"modified\":\"20210130174312240\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Our buttons don't display very nicely:\\n\\n* They're absolutely gigantic on the toolbar and have text on them instead of an icon.\\n* Their shape doesn't match that of the other tiddlers.\\n* They don't have tooltips.\\n* They don't have a description in the ''Tools'' tab of the sidebar.\\n\\nCorrect these issues. You'll want to refer to an existing tiddler on the toolbar to see how each of these things is done.\\n\\n//Tip//: The fastest way to choose an icon from the set that comes with TiddlyWiki is to open the tag manager and pretend to pick an icon from the drop-down. Each icon shows its full tiddler name, so you can then use that name elsewhere.\"},\"Ex:ButtonDisplayTweaks/answer\":{\"title\":\"Ex:ButtonDisplayTweaks/answer\",\"created\":\"20200822192711306\",\"modified\":\"20210109221836629\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"For a simple fix to the icon problem, just replace the text with an icon transclusion, e.g., `{{$:/core/images/quote}}`. This is probably good enough in many circumstances. However, TiddlyWiki lets you configure whether text, icon, or both is shown for each place a toolbar button can appear (for instance, both appear by default on the Tools tab of the sidebar). If you want this feature to work, you'll want to borrow the following snippet from one of the existing buttons:\\n\\n```html\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/save-button}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/SaveWiki/Caption}}/></span>\\n</$list>\\n```\\n\\nWithin the context of any button display, these variables will be defined as either \\\"yes\\\" or \\\"no\\\", and you can check using the above filters to see whether you should display each part. (Unless you plan to be translating your own wiki into different languages, you can safely hard-code the caption or put it in the `{{!!caption}}` field rather than putting it into a separate tiddler under `$:/language`.)\\n\\nA related problem is that the button will still be square and not match the existing buttons. To fix this, add the `class` and `selectedClass` attributes that are used on the existing buttons:\\n\\n```html\\n<$button class=<<tv-config-toolbar-class>> selectedClass=\\\"tc-selected\\\" ...>\\n```\\n\\nFor the tooltips, adding a `tooltip` attribute to the `<$button>` widget will do the trick.\\n\\nFor the description, just set the `description` field on the tiddler.\"},\"Ex:ButtonsOnPageToolbar\":{\"title\":\"Ex:ButtonsOnPageToolbar\",\"created\":\"20200822192414704\",\"length\":\"m\",\"modified\":\"20210418161630255\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Add these new buttons (created in [[Ex:NewContactButton]] and [[Ex:NewMeetingButton]]) to the toolbar above the search box in the sidebar. This will require applying a tag to their tiddlers.\"},\"Ex:ButtonsOnPageToolbar/answer\":{\"title\":\"Ex:ButtonsOnPageToolbar/answer\",\"created\":\"20200822192432851\",\"modified\":\"20200822192450806\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The tag to use is `$:/tags/PageControls`.\"},\"Ex:BypassSecurityWithTextSubstitution\":{\"title\":\"Ex:BypassSecurityWithTextSubstitution\",\"created\":\"20210207223511379\",\"length\":\"m\",\"modified\":\"20210207223810240\",\"origin\":\"Text Substitution\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Suppose that the following macro is being used to validate whether the user is authorized to access something:\\n\\n{{Sn:AuthorizationBypass||MagicSnippet}}\\n\\nWithout looking up the password, figure out what you can fill in between the quotation marks in the macro call to bypass the password check. Check your answer by editing the live example above.\"},\"Ex:BypassSecurityWithTextSubstitution/answer\":{\"title\":\"Ex:BypassSecurityWithTextSubstitution/answer\",\"created\":\"20210207223547576\",\"modified\":\"20210409221631732\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Congratulations, you are a //TiddlyWiki hacker//!\\n\\nHilariously, all it really takes is a single `]`, because this causes the filter syntax to become invalid, which causes the tiddler `Filter error: Missing [ in filter expression` to appear in the output and the contents of the `$list` widget to render once. You could use any number of variations on the theme of making the filter syntax invalid.\\n\\nA more complete version, riffing on the example we saw above, would be `x]][x` -- that is, create an unconditional filter run for the tiddler `[[x]]` so there's some output to the filter, then open a new run which tries to match the text `x` against the password (presumably this will fail, but that will be OK because we've already added a tiddler to the final output of the filter run). Again, we will discuss how [[multiple filter runs|Multi-Run Filters]] work in the next chapter.\"},\"Ex:CamelCaseKnowledgeTiddlers\":{\"title\":\"Ex:CamelCaseKnowledgeTiddlers\",\"autoinclude\":\"Reviewing the Basics\",\"created\":\"20200603030418783\",\"length\":\"m\",\"modified\":\"20210521201654599\",\"origin\":\"Reviewing the Basics\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Try changing the title of one of your knowledge tiddlers to not be in CamelCase (add some spaces to it, and/or change the capitalization).\\n\\n* Notice the drop-down showing you any links that will break when you rename the tiddler.\\n* Visit the tiddlers those other links were contained in and update the links to match. You'll have to use the `[[square bracket syntax]]` now.\\n* What are some of the advantages and disadvantages of camel-case linking? If you have a TiddlyWiki use case in mind for yourself, do you think camel-case links will be a good idea there?\\n\\n//Note:// If you rename tiddlers often, the [[Relink plugin|Useful Plugins]] can update the links automatically.\"},\"Ex:CamelCaseKnowledgeTiddlers/answer\":{\"title\":\"Ex:CamelCaseKnowledgeTiddlers/answer\",\"autoinclude\":\"Reviewing the Basics\",\"created\":\"20200603030458934\",\"length\":\"m\",\"modified\":\"20210131211311582\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"On the topic of the advantages and disadvantages of camel-case linking…\\n\\n!!! Advantages\\n\\n* Linking is faster.\\n* If you're a programmer, you may dislike spaces!\\n* You're encouraged to create more concise titles which are in a consistent format.\\n* If you copy the formatted text into another tiddler which is in edit mode, the links will stay there. This does not work with `[[links like this]]`. A small thing, but quite convenient.\\n\\n!!! Disadvantages\\n\\n# According to some people, it looks ugly and disrupts the flow of text.\\n# If people try to camel-case even things that don't take naturally to it, adding extra words or capitalizing words in the middle, how they did this is not always obvious, and someone may end up missing a title that already exists and creating a new one. More on this later.\\n# Words that just happen to use the CamelCase format but are not supposed to refer to page titles have to be escaped in some way. In TiddlyWiki this is done by putting a `~` before the word.\\n# Particularly long titles may be difficult to read or fail to wrap nicely over multiple lines.\\n\\nSee also the [[CamelCase]] appendix.\\n\"},\"Ex:CanonicalUri\":{\"title\":\"Ex:CanonicalUri\",\"created\":\"20210130042001704\",\"length\":\"m\",\"modified\":\"20210130220431659\",\"origin\":\"Images and Attachments\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Select a contact you didn't add an image for above. Place an image for this contact in a folder called `images` next to your example TiddlyWiki, and use the `_canonical_uri` field on a new tiddler to reference this contact's image. Check to be sure the image is displayed on the contact tiddler as expected.\"},\"Ex:CaptionsByTag\":{\"title\":\"Ex:CaptionsByTag\",\"created\":\"20200718220801449\",\"length\":\"m\",\"modified\":\"20210130174325776\",\"origin\":\"Buttons and Input Widgets\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create a tiddler called `CaptionsByTag`. This tiddler should contain an input widget into which the user types the name of a tag. A table underneath the input widget should show all of the tiddlers with this tag along with their captions, if any. That would look something like this:\\n\\n|!Tiddler|!Caption|\\n|FudgeAtTheOffice|The Great Fudge Warning|\\n\\n//Note//: You'll have to use raw HTML tables to get this to display correctly -- wikitext tables don't work if you interrupt them with a `list` widget. An HTML table has this basic form:\\n\\n{{Sn:HtmlTable||MagicSnippet}}\\n\\nThe equivalent wikitext table would be:\\n\\n{{Sn:WikitextTable||MagicSnippet}}\\n\\n`tr` stands for //table row//, `th` for //table header//, and `td` for //table data//.\"},\"Ex:CaptionsByTag/answer\":{\"title\":\"Ex:CaptionsByTag/answer\",\"created\":\"20200718221130421\",\"modified\":\"20200718221132771\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<$edit-text tiddler=\\\"$:/temp/captionbytag\\\" tag=\\\"input\\\" default=\\\"\\\"/>\\n\\n<table>\\n  <tr>\\n    <th>Tiddler</th>\\n    <th>Caption</th>\\n  </tr>\\n  <$list filter=\\\"[tag{$:/temp/captionbytag}]\\\">\\n  <tr>\\n    <td>{{!!title}}</td>\\n    <td>{{!!caption}}</td>\\n  </tr>\\n  </$list>\\n</table>\\n```\"},\"Ex:CarItems\":{\"title\":\"Ex:CarItems\",\"complete\":\"\",\"created\":\"20210206151036838\",\"length\":\"M\",\"modified\":\"20210606143448300\",\"origin\":\"Project Tiddlers\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Suppose you have a tiddler `MyCar`, along with a series of tiddlers describing the items you keep in your car. Why should each item state that it belongs in your car, rather than the car listing out all of the items it contains?\\n\\nCreate the car tiddler in your example wiki and relate several items to it, using each of the four methods discussed in this section. What methods do you like best?\"},\"Ex:CarItems/answer\":{\"title\":\"Ex:CarItems/answer\",\"created\":\"20210206151218118\",\"modified\":\"20210606143443369\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Each item should most likely state that it belongs in your car because this mechanism is less fussy: you don't have to manually update the car tiddler when you add a new item to your car, and you can say that an item belongs in multiple locations by editing only the item.\"},\"Ex:CircularTransclusion\":{\"title\":\"Ex:CircularTransclusion\",\"created\":\"20200604022701610\",\"length\":\"s\",\"modified\":\"20210130174328217\",\"origin\":\"Transclusions\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"What happens if you transclude tiddler A into tiddler B, and tiddler B into tiddler A?\"},\"Ex:CircularTransclusion/answer\":{\"title\":\"Ex:CircularTransclusion/answer\",\"created\":\"20200604022723842\",\"modified\":\"20200623131614385\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Same thing as if you transclude a tiddler into itself (because that's effectively what you //are// doing, if you think about it).\"},\"Ex:CloseAndReopen\":{\"title\":\"Ex:CloseAndReopen\",\"complete\":\"\",\"created\":\"20201229033852084\",\"length\":\"s\",\"modified\":\"20210327163010989\",\"origin\":\"Journal Tiddlers\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Close your new journal tiddler and open it again.\"},\"Ex:ConditionalSetAt\":{\"title\":\"Ex:ConditionalSetAt\",\"created\":\"20210207215704886\",\"length\":\"m\",\"modified\":\"20210502160207975\",\"origin\":\"Hiding and Showing Things\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Repeat the [[previous exercise|Ex:EmptyAtField]], but use a conditional `$set` widget. It's OK if the behavior when the `at` field is empty, rather than missing, differs from the previous exercise.\"},\"Ex:ConditionalSetAt/answer\":{\"title\":\"Ex:ConditionalSetAt/answer\",\"created\":\"20210207215734574\",\"modified\":\"20210207215634063\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<$set name=\\\"meetingTime\\\" filter=\\\"[all[current]has[at]]\\\" value={{!!at}} emptyValue=\\\"(no time specified)\\\">\\n\\n| !Time|<<meetingTime>>|\\n| !Participants|{{!!participants}}|\\n\\n</$set>\\n```\\n\\n(Note the need for an empty line after `$set` to make the table start in [[block mode|Block Mode and Inline Mode]].)\"},\"Ex:ConditionalStyle\":{\"title\":\"Ex:ConditionalStyle\",\"created\":\"20210130034125288\",\"length\":\"m\",\"modified\":\"20210130174332213\",\"origin\":\"Stylesheets\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Modify the tiddler containing `my-funny-class` so that that class's styles apply only if the config tiddler `$:/config/ShowFunnyText` is set to `yes`.\"},\"Ex:ConditionalStyle/answer\":{\"title\":\"Ex:ConditionalStyle/answer\",\"created\":\"20210130034151941\",\"modified\":\"20210130034510385\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"To accomplish this, simply wrap the class in a `$list` widget so that the CSS doesn't show up if the config tiddler isn't set appropriately:\\n\\n```html\\n<$list filter=\\\"[[$:/config/ShowFunnyText]text[yes]]\\\">\\n.my-funny-class2 {\\n  background-color: blue;\\n  color: yellow;\\n  font-size: 150%;\\n  border: 3px dotted orange;\\n  text-align: right;\\n}\\n</$list>\\n```\\n\\nThe filter can be written in several ways; for instance, you could equivalently use:\\n\\n```html\\n<$list filter=\\\"[{$:/config/ShowFunnyText}match[yes]]\\\">\\n```\"},\"Ex:ConstructorAfterFilterStep\":{\"title\":\"Ex:ConstructorAfterFilterStep\",\"created\":\"20201230212136525\",\"length\":\"m\",\"modified\":\"20210203164958757\",\"origin\":\"Anatomy of Filter Steps\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"What do you think happens if you run the filter `[tag[Person]title[EmployeeInformationSystem]tag[Application]]`? Assume that the `EmployeeInformationSystem` tiddler is tagged `Application` but not `Person`.\\n\\nCheck your answer by running the filter in TiddlyWiki, after ensuring that `EmployeeInformationSystem` is tagged appropriately.\"},\"Ex:ConstructorAfterFilterStep/answer\":{\"title\":\"Ex:ConstructorAfterFilterStep/answer\",\"created\":\"20201230212214599\",\"modified\":\"20201230212137678\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"One tiddler `EmployeeInformationSystem` is returned. The step `tag[Person]` is a no-op (short for //no operation//, meaning adding or removing it has no impact on the final result), because `title` is a constructor and ignores its input.\"},\"Ex:ContactCard\":{\"title\":\"Ex:ContactCard\",\"created\":\"20210206220358830\",\"length\":\"m\",\"modified\":\"20210206220548966\",\"origin\":\"Miscellaneous Widgets\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create a tiddler called `ContactCard` that displays a drop-down menu from which you can select any contact in the wiki. Underneath the drop-down menu, the selected contact is transcluded through the `ContactInformationTemplate`, showing the contact's details.\"},\"Ex:ContactCard/answer\":{\"title\":\"Ex:ContactCard/answer\",\"created\":\"20210206220636892\",\"modified\":\"20210206220538164\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<$select tiddler=\\\"$:/temp/CurrentContactCard\\\" default=\\\"\\\">\\n    <option value=\\\"\\\">(select a contact)</option>\\n    <$list filter=\\\"[tag[Contact]]\\\">\\n        <option value=<<currentTiddler>>><<currentTiddler>></option>\\n    </$list>\\n</$select>\\n\\n<$tiddler tiddler={{$:/temp/CurrentContactCard}}>\\n    {{||ContactInformationTemplate}}\\n</$tiddler>\\n```\"},\"Ex:ContactInformationPicture\":{\"title\":\"Ex:ContactInformationPicture\",\"complete\":\"\",\"created\":\"20210130041146429\",\"length\":\"M\",\"modified\":\"20210130174336965\",\"origin\":\"Images and Attachments\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Edit the ContactInformationTemplate so that it tries to include a picture for each contact. If the tiddler name is, for example, `JaneDoe`, and there is a tiddler called `JaneDoe/Picture`, Jane's picture, at most 300 pixels wide, should appear at the top of the tiddler. No error should be displayed if such a picture doesn't exist (//hint//: a filter operator called `is[tiddler]` will come in handy).\\n\\nAdd an image for one of your contacts and confirm that everything displays as expected for contacts that have a picture and for contacts that do not.\"},\"Ex:ContactInformationPicture/answer\":{\"title\":\"Ex:ContactInformationPicture/answer\",\"created\":\"20210130041415979\",\"modified\":\"20210130041513763\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The simplest way to do this is using the `$image` widget:\\n\\n```html\\n<$list filter=\\\"[all[current]addsuffix[/Picture]is[tiddler]]\\\">\\n  <$image source=<<currentTiddler>> width=300/>\\n</$list>\\n```\\n\\nIf you didn't go look up the `$image` widget in the documentation (tip: there's pretty much always a widget for what you want if you go look for it!), you might have used a macro with the wikitext syntax for including an image:\\n\\n```html\\n\\\\define getImage() [img width=300 [$(currentTiddler)$]]\\n\\n<$list filter=\\\"[all[current]addsuffix[/Picture]is[tiddler]]\\\">\\n  <<getImage>>\\n</$list>\\n```\\n\\nOr, if you prefer using a macro with parameters, you'll have to use a `$macrocall` widget to get the value of `<<currentTiddler>>` into the macro:\\n\\n```html\\n\\\\define getImage(img) [img width=300 [$img$]]\\n\\n<$list filter=\\\"[all[current]addsuffix[/Picture]is[tiddler]]\\\">\\n  <$macrocall $name=\\\"getImage\\\" img=<<currentTiddler>>/>\\n</$list>\\n```\\n\\nNotice that, in all these cases, we took advantage of the current tiddler being set to the name of the picture tiddler within the `$list` widget, and the `$list` widget never displaying its body if the tiddler didn't turn out to exist.\"},\"Ex:ContactList\":{\"title\":\"Ex:ContactList\",\"complete\":\"\",\"created\":\"20200603192624309\",\"length\":\"m\",\"modified\":\"20210130174338739\",\"origin\":\"Your First Dynamic List\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create a `ContactList`, similar to our `MeetingList`, that shows all contacts in alphabetical order by their first name.\\n\\n//Tip//: To create a new tiddler and start it with the contents of an existing tiddler, click the \\\"more\\\" drop-down on the existing tiddler's toolbar and choose ''Clone''.\"},\"Ex:ContactListNoPhoneExclusion\":{\"title\":\"Ex:ContactListNoPhoneExclusion\",\"complete\":\"\",\"created\":\"20200603192656839\",\"length\":\"m\",\"modified\":\"20210130174339217\",\"origin\":\"Your First Dynamic List\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Modify the `ContactList` so that contacts with no phone number are excluded.\"},\"Ex:ContactListNoPhoneExclusion/answer\":{\"title\":\"Ex:ContactListNoPhoneExclusion/answer\",\"created\":\"20200603194024447\",\"modified\":\"20200603210244780\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Add a `has[phone]` filter step:\\n\\n```html\\n<$list filter=\\\"[tag[Contact]has[phone]sort[]]\\\">\\n    <<currentTiddler>><br>\\n</$list>\\n```\\n\\nYou might also have put `has[phone]` before `tag[Contact]` or after `sort[]` -- the order doesn't matter in this case.\"},\"Ex:ContactList/answer\":{\"title\":\"Ex:ContactList/answer\",\"created\":\"20200603193925777\",\"modified\":\"20210409172309774\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<$list filter=\\\"[tag[Contact]sort[]]\\\">\\n\\t<<currentTiddler>><br>\\n</$list>\\n```\\n\\n(You might also have kept the bulleted-list version from the [[previous exercise|Ex:BulletedMeetingList]].)\"},\"Ex:ContactRadioButtonQualification\":{\"title\":\"Ex:ContactRadioButtonQualification\",\"created\":\"20210208023102625\",\"length\":\"m\",\"modified\":\"20210208023021260\",\"origin\":\"Qualification\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Return to the radio buttons we added to the ContactInformationTemplate in [[Ex:FamilyRadioButton]] to display the contact information of a family member of the contact. As written in the answer of that exercise, it is in need of a `qualify` macro so that if multiple contacts are open, they can have different family members selected at once. Add this macro call. (If you wrote your version in a way that doesn't require qualification to work correctly with multiple contacts open, first modify it to store the selected contact in a temp tiddler like the book's version does.)\"},\"Ex:ContactRadioButtonQualification/answer\":{\"title\":\"Ex:ContactRadioButtonQualification/answer\",\"created\":\"20210208023126941\",\"modified\":\"20210208023026763\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The version presented in the exercise, upgraded, looks like this:\\n\\n```html\\nView phone number for family member: <$list filter={{!!family}}><$radio tiddler=<<qualify \\\"$:/temp/FamilyContact\\\">> value=<<currentTiddler>>>&nbsp;<<currentTiddler>></$radio>&ensp;</$list>\\n\\n<$set name=\\\"stateTiddlerName\\\" value=<<qualify \\\"$:/temp/FamilyContact\\\">>>\\n\\t<$transclude tiddler={{{ [<stateTiddlerName>get[text]] }}} field=\\\"phone\\\"/>\\n</$set>\\n```\\n\\nNote that some gymnastics are required with the `$set` widget and the filtered transclusion passed to the `$transclude` widget. You might have been tempted to try simply:\\n\\n```html\\n<$transclude tiddler=<<qualify \\\"$:/temp/FamilyContact\\\">> field=\\\"phone\\\"/>\\n```\\n\\n…but this does not work, for the same reason we had to use a `{{transcluded tiddler name}}` as the value of the `tiddler` attribute rather than a `\\\"quoted tiddler name\\\"` -- we want to transclude the tiddler //named within// the target of the `qualify` macro, not the tiddler that is the target of the qualify macro.\\n\"},\"Ex:ContactTabs\":{\"title\":\"Ex:ContactTabs\",\"created\":\"20200717223526481\",\"length\":\"s\",\"modified\":\"20210130174342014\",\"origin\":\"Tabs\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create a set of tabs to show all contacts in the wiki. Take a look through the tabs -- what isn't displaying right, and what might that mean?\"},\"Ex:ContactTabs/answer\":{\"title\":\"Ex:ContactTabs/answer\",\"created\":\"20200717223559611\",\"modified\":\"20210103173121744\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"You should have noticed that field transclusions don't work. This is because the `tabs` macro, surprisingly, doesn't change the current tiddler when rendering each tab.\"},\"Ex:ContactsOnlyOnContacts\":{\"title\":\"Ex:ContactsOnlyOnContacts\",\"created\":\"20200718030804420\",\"length\":\"m\",\"modified\":\"20210207182716511\",\"origin\":\"The View Template\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Adjust the `$:/yourname/TiddlerTypeTemplates/Contact` component of the ViewTemplate so that the contact information template is used only on tiddlers tagged `Contact`.\"},\"Ex:ContactsOnlyOnContacts/answer\":{\"title\":\"Ex:ContactsOnlyOnContacts/answer\",\"created\":\"20200718031215831\",\"modified\":\"20210418135402080\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<$list filter=\\\"[all[current]tag[Contact]]\\\">\\n  {{||ContactInformationTemplate}}\\n</$list>\\n```\\n\\nAs usual, there's more than one way to do this. In particular, there are other filters you could use, for example `[<currentTiddler>tag[Contact]]`.\"},\"Ex:ContainingCurrentTiddler\":{\"title\":\"Ex:ContainingCurrentTiddler\",\"complete\":\"\",\"created\":\"20200605153051247\",\"length\":\"m\",\"modified\":\"20210322233056530\",\"origin\":\"Templates and the Current Tiddler\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Suppose that in the `MeetingList`, we want each meeting to display not only its name, but also the name of the tiddler we're using to look at the information (or, more precisely, the current tiddler as defined by TiddlyWiki). That is, since we're viewing the output in the `MeetingList` tiddler, it should say `MeetingList`. The list might look something like this:\\n\\n* An item on MeetingList: EmployeeProfileSetupMeeting\\n* An item on MeetingList: SecondMeeting\\n\\nModify your list widget to achieve this output. The output should continue to be correct if you copy and paste (or transclude) the list widget into a different tiddler -- i.e., you cannot simply write `MeetingList` literally but must dynamically retrieve the title of the tiddler the list widget is in.\"},\"Ex:ContainingCurrentTiddler/answer\":{\"title\":\"Ex:ContainingCurrentTiddler/answer\",\"created\":\"20200605153116452\",\"modified\":\"20210521203020996\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<$set name=previousCurrentTiddler value=<<currentTiddler>> >\\n<ul>\\n\\t<$list filter=\\\"[tag[Meeting]!sort[at]]\\\">\\n\\t\\t<li>An item on <<previousCurrentTiddler>>: <$link to=<<currentTiddler>>/></li>\\n\\t</$list>\\n</ul>\\n</$set>\\n```\\n\\nIt turns out this is a sufficiently common pattern that there's an attribute you can add to the `$list` widget to make it easier, called `variable`. This attribute defaults to `currentTiddler`, but if you set it to something else, the current tiddler will be unmodified and that other variable will contain the current item being listed:\\n\\n```html\\n<ul>\\n\\t<$list filter=\\\"[tag[Meeting]!sort[at]]\\\" variable=\\\"meeting\\\">\\n\\t\\t<li>An item on <<currentTiddler>>: <$link to=<<meeting>>/></li>\\n\\t</$list>\\n</ul>\\n```\\n\"},\"Ex:CountWidgetReplacement\":{\"title\":\"Ex:CountWidgetReplacement\",\"created\":\"20210206220335570\",\"length\":\"m\",\"modified\":\"20210206220346247\",\"origin\":\"Miscellaneous Widgets\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Go to the `WikiStatistics` tiddler, originally created in the exercise [[Ex:WikiStatistics]], and replace any numbers that you can with an appropriate `$count` widget.\"},\"Ex:CountWidgetReplacement/answer\":{\"title\":\"Ex:CountWidgetReplacement/answer\",\"created\":\"20210206220427285\",\"modified\":\"20210206220330765\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<ul>\\n  <li>There are <$count filter=\\\"[tag[Contact]\\\"/> people in this wiki.</li>\\n  <li>There are <$count filter=\\\"[tag[Meeting]links[]!tag[Contact]\\\"/> non-contact tiddlers linked from meetings.</li>\\n  <$set name=\\\"totalTiddlers\\\" value={{{ [!is[system]count[]] }}}>\\n    <li><$text text={{{ [tag[Contact]count[]divide<totalTiddlers>multiply[100]precision[3]] }}}/>% of all non-system tiddlers in the wiki are contacts.</li>\\n  </$set>\\n</ul>\\n```\\n\\nAs you can see, the percentage calculation cannot be replaced since `count[]` is not the final filter step.\"},\"Ex:CreateMeetingTemplate\":{\"title\":\"Ex:CreateMeetingTemplate\",\"complete\":\"\",\"created\":\"20200605153755202\",\"length\":\"m\",\"modified\":\"20210322232807963\",\"origin\":\"Templates and the Current Tiddler\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<!--\\n<$action-createtiddler $basetitle=<<qualify \\\"$:/temp/Render\\\">> $savetitle=\\\"!!rendering\\\" text=<<mytext>>/>-->\\n\\nOur meetings have two fields, `at` and `participants`, which don't show up anywhere on the meeting tiddlers. Create a new template tiddler, `MeetingInformationTemplate`, and add a table something like the following.\\n\\n{{Sn:MeetingParticipants||MagicSnippet}}\\n\\nObviously, your version should include the correct information for whichever tiddler the template is being transcluded into. Don't miss the space before the `!` in `Time` and `Participants` in the wikitext, which causes the headings to be right-aligned rather than centered.\\n\\nTransclude this template at the top of all your meeting tiddlers.\"},\"Ex:CreateMeetingTemplate/answer\":{\"title\":\"Ex:CreateMeetingTemplate/answer\",\"created\":\"20200605153818124\",\"modified\":\"20200605153830195\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In the `MeetingInformationTemplate` tiddler:\\n\\n```html\\n| !Time|{{!!at}}|\\n| !Participants|{{!!participants}}|\\n```\\n\\nThen in each meeting tiddler:\\n\\n```html\\n{{||MeetingInformationTemplate}}\\n```\"},\"Ex:CreateSystemTiddler\":{\"title\":\"Ex:CreateSystemTiddler\",\"created\":\"20210103191056359\",\"length\":\"s\",\"modified\":\"20210130174348070\",\"origin\":\"System Tiddlers\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create a new system tiddler, then close it and go locate it again.\"},\"Ex:CreatedNowButton\":{\"title\":\"Ex:CreatedNowButton\",\"created\":\"20210207180055632\",\"length\":\"m\",\"modified\":\"20210207180032241\",\"origin\":\"Working with Dates\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Make a button labeled //Created Now// that resets the `created` date of the current tiddler to the current time. Place the button on a template, or simply on a test tiddler, and try resetting the created time of the tiddler.\"},\"Ex:CreatedNowButton/answer\":{\"title\":\"Ex:CreatedNowButton/answer\",\"created\":\"20210207180126132\",\"modified\":\"20210502162142214\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<$button set=\\\"!!created\\\" setTo=<<now [UTC]YYYY0MM0DD0hh0mm0ssXXX>>>\\n\\tCreated Now\\n</$button>\\n\\n{{!!created}}}\\n```\\n\\n(The `{{!!created}}` is just there so you can check your work. You can also click the info button and look on the //Fields// tab.)\\n\\nYou might be tempted to define and use the `now-timestamp` macro discussed earlier, but there's a gotcha awaiting the unwary:\\n\\n```html\\n\\\\define now-timestamp() <<now [UTC]YYYY0MM0DD0hh0mm0ssXXX>>\\n\\n<$button set=\\\"!!created\\\" setTo=<<now-timestamp>>>\\n\\tCreated Now\\n</$button>\\n```\\n\\nThis will set the `created` field to `NaNNaNNaNNaNNaNNaNNaN`, which is probably not what you wanted! (`NaN` stands for //not a number//, and [[often occurs|https://en.wikipedia.org/wiki/NaN]] when computers try to do math on invalid operands.) The problem is that the contents of the `now-timestamp` macro are [[not wikified in this context|Wikification]] since the macro call is being used as an attribute of an HTML element, so TiddlyWiki tries to set the field to the literal body of the macro, which [[results in|https://groups.google.com/g/tiddlywiki/c/879Djgpf4YY]] a bunch of `NaN`s when TiddlyWiki then tries to convert it to a date.\\n\\nIn this case, the easiest fix is not to use the `now-timestamp` macro, since its replacement is simple and unlikely to change anyway. But if you do want to use it, you can use a `$wikify` widget:\\n\\n```html\\n<$wikify name=\\\"currentTime\\\" text=<<now-timestamp>>>\\n\\t<$button set=\\\"!!created\\\" setTo=<<currentTime>>>\\n\\t\\tCreated Now\\n\\t</$button>\\n</$wikify>\\n```\"},\"Ex:CreatingBasicFilters\":{\"title\":\"Ex:CreatingBasicFilters\",\"complete\":\"\",\"created\":\"20200603184510002\",\"length\":\"M\",\"modified\":\"20210327181810640\",\"origin\":\"Using Filter Expressions\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Write and test filter expressions for the following criteria:\\n\\n# All tiddlers tagged with `Application`.\\n# All tiddlers tagged with both `Application` and `OnboardingProcess`.\\n#* You'll need to add the `OnboardingProcess` tag to at least one application if you haven't done so already, if you want to see any results.\\n# The tiddler `JaneDoe`, but only if it is tagged with `Application`.\\n#* You won't get any results for this one, obviously, since Jane is not an application, so afterwards you might want to try adding the tag to Jane's tiddler so you can see how it behaves then.\\n# All tiddlers that link to the tiddler `EmployeeProfileSetupMeeting`.\\n#* //Hint//: In addition to `links[]`, there is a `backlinks[]` operator.\\n# All tiddlers that link to the tiddler `EmployeeProfileSetupMeeting` and are //not// daily-journal tiddlers.\\n\"},\"Ex:CreatingBasicFilters/answer\":{\"title\":\"Ex:CreatingBasicFilters/answer\",\"created\":\"20200603184605684\",\"modified\":\"20210207150044596\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"# `[tag[Application]]`\\n# `[tag[Application]tag[OnboardingProcess]]`\\n# `[[JaneDoe]tag[Application]]`\\n#* You might think that `[tag[Application][JaneDoe]]` would be equivalent, but surprisingly it is not. In the next section, [[Anatomy of Filter Steps]], we'll learn that this is because the title operator is a //constructor//; that is, it ignores its input entirely.\\n# `[[EmployeeProfileSetupMeeting]backlinks[]]`\\n# `[[EmployeeProfileSetupMeeting]backlinks[]!tag[Journal]]`\"},\"Ex:CreatingLinkDivs\":{\"title\":\"Ex:CreatingLinkDivs\",\"created\":\"20200718201457359\",\"length\":\"s\",\"modified\":\"20210130174352985\",\"origin\":\"Creating a List of Links and Backlinks\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Let's do a bit of formatting now. It probably will look better if the excerpt starts on a new line after the title, especially once we get this into two columns. An easy way to do that in HTML is to place the excerpt macro call in a `<div>` tag (short for //division//), which is a generic way to group content together, so go ahead and do that and check that it works.\\n\\nIn addition, let's wrap the `Links` and `Backlinks` sections, including the titles, each in a div (you can do this within the macro). We'll need to have them in separate divs to get them to appear in two columns.\\n\\nLastly, wrap the whole thing (both the Links and Backlinks sections) in one more div.\\n\\nAside from the excerpts appearing on separate lines from the tiddler titles, you should not see any difference in output yet -- we've merely made it possible to style with CSS.\"},\"Ex:CreatingLinkDivs/answer\":{\"title\":\"Ex:CreatingLinkDivs/answer\",\"created\":\"20200718201524979\",\"modified\":\"20210327153046765\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n\\\\define excerptify(title)\\n  <$wikify name=wikitext text={{$title$}}>\\n    <$text text={{{ [<wikitext>split[]first[200]join[]] }}} />...\\n  </$wikify>\\n\\\\end\\n\\n\\\\define linkDisplay(title, filterFragment)\\n<div>\\n$title$:\\n\\n<ul>\\n<$list filter=\\\"[all[current]$filterFragment$]\\\">\\n  <li>\\n    <$link to=<<currentTiddler>>><<currentTiddler>></$link>\\n    <div><$macrocall $name=\\\"excerptify\\\" title={{!!title}}/></div>\\n  </li>\\n</$list>\\n</ul>\\n</div>\\n\\\\end\\n\\n<div>\\n  <<linkDisplay \\\"Links\\\" \\\"links[]\\\">>\\n  <<linkDisplay \\\"Backlinks\\\" \\\"backlinks[]\\\">>\\n</div>\\n```\"},\"Ex:CreatingMoreFilters\":{\"title\":\"Ex:CreatingMoreFilters\",\"created\":\"20200603185133343\",\"length\":\"m\",\"modified\":\"20210320170409142\",\"origin\":\"Common Filter Operators\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Compose and run filters to answer the following questions:\\n\\n# How many tiddlers are in the wiki?\\n# How many of those are system tiddlers?\\n# What meetings contain a link to `JaneDoe`?\\n#* //Hint//: Work backwards.\\n# Which contact has the alphabetically earliest phone number?\\n# Which tiddlers have text in a field called `at`?\\n# Which tiddlers contain the words `JaneDoe` and `help` somewhere in their text field? Use only a single filter step.\"},\"Ex:CreatingMoreFilters/answer\":{\"title\":\"Ex:CreatingMoreFilters/answer\",\"created\":\"20200603185304662\",\"modified\":\"20211129231027978\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"I won't list the actual answers because you've likely played with your wiki enough by now that your answers will be slightly different from mine, but here are the filters you can use:\\n\\n# `[count[]]`\\n# `[is[system]count[]]`\\n# `[[JaneDoe]backlinks[]tag[Meeting]]`\\n# `[tag[Contact]sort[phone]]` (and take the first in the list)\\n# `[has[at]]` (or, more verbosely, `[!field:at[]]`)\\n# `[search:text[JaneDoe help]]` (just `[search[JaneDoe help]]` is fine too, but note that this will also find matches in the `title` and `tags` fields, which might lead to more false positives)\\n\\nOn #6, you may notice several [[system tiddlers|System Tiddlers]] related to Advanced Search in the list. That's because what you're typing into the search box is stored in those tiddlers! We'll learn how this works in [[Buttons and Input Widgets]].\"},\"Ex:CurrentTiddlerAndListWidget\":{\"title\":\"Ex:CurrentTiddlerAndListWidget\",\"complete\":\"\",\"created\":\"20200605152649952\",\"length\":\"m\",\"modified\":\"20210322233057274\",\"origin\":\"Templates and the Current Tiddler\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In the section on [[dynamic lists|Your First Dynamic List]], we used the value of the variable `<<currentTiddler>>`, without knowing exactly what it was. Review the use of that variable in the dynamic lists section. What does this usage tell you about the interaction of the current tiddler and the `$list` widget?\"},\"Ex:CurrentTiddlerAndListWidget/answer\":{\"title\":\"Ex:CurrentTiddlerAndListWidget/answer\",\"created\":\"20200605152719074\",\"modified\":\"20210207221748314\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The `$list` widget changes the current tiddler to be each result of the filter in turn.\"},\"Ex:DateFormatter\":{\"title\":\"Ex:DateFormatter\",\"created\":\"20210207180143092\",\"length\":\"M\",\"modified\":\"20210207181226974\",\"origin\":\"Working with Dates\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create a tiddler called `DateFormatter` that allows you to choose any non-system tiddler in the wiki and a field on that tiddler from drop-down menus, then displays the date stored in that field in at least five different formats. The formats displayed should be configurable by creating tiddlers in `$:/config/DateFormatter/Formats`.\\n\\nIf the field chosen can't be interpreted as a date, the text `(not a date)` should appear where the formatted date otherwise would.\\n\\n//Tip//: The `fields[]` operator gets the names of the fields present on its input tiddlers.\\n\\nHere's an example of what it might look like:\\n\\n{{date-formatter-example.png}}\"},\"Ex:DateFormatter/answer\":{\"title\":\"Ex:DateFormatter/answer\",\"created\":\"20210207180211360\",\"modified\":\"20210207180335891\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Here's my version. You presumably have something slightly different.\\n\\n```html\\n\\\\define show-date(fmt) <$view tiddler={{!!selectedtiddler}} field={{!!selectedfield}} format=\\\"date\\\" template=<<__fmt__>>>(not a date)</$view>\\n\\n\\\\define date-row(name, fmt)\\n<tr>\\n  <td>$name$</td>\\n  <td><$macrocall $name=\\\"show-date\\\" fmt=<<__fmt__>>/></td>\\n</tr>\\n\\\\end\\n\\nTiddler:\\n<$select field=\\\"selectedtiddler\\\" default=\\\"\\\">\\n    <option value=\\\"\\\">(choose a tiddler)</option>\\n    <$list filter=\\\"[!is[system]]\\\">\\n        <option value=<<currentTiddler>>><<currentTiddler>></option>\\n    </$list>\\n</$select>\\n\\n<!-- Don't show the field drop-down if no tiddler is selected, since it won't contain any options. -->\\n<$reveal state=\\\"!!selectedtiddler\\\" type=\\\"nomatch\\\" text=\\\"\\\">\\nField:\\n<$select field=\\\"selectedfield\\\" default=\\\"created\\\">\\n    <$list filter=\\\"[{!!selectedtiddler}fields[]]\\\">\\n        <option value=<<currentTiddler>>><<currentTiddler>></option>\\n    </$list>\\n</$select>\\n</$reveal>\\n\\n<$list filter=\\\"[all[current]has[selectedtiddler]has[selectedfield]]\\\">\\n<table>\\n    <tr>\\n        <th>Format</th>\\n        <th>Date</th>\\n    </tr>\\n    <$list filter=\\\"[prefix[$:/config/DateFormatter/Formats/]]\\\" variable=\\\"currentFormat\\\">\\n        <$macrocall $name=\\\"date-row\\\"\\n            name={{{ [<currentFormat>removeprefix[$:/config/DateFormatter/Formats/]] }}} \\n            fmt={{{ [<currentFormat>get[text]] }}}/>\\n    </$list>\\n</table>\\n</$list>\\n```\"},\"Ex:DefaultToField\":{\"title\":\"Ex:DefaultToField\",\"created\":\"20201122170015880\",\"length\":\"m\",\"modified\":\"20210130174358750\",\"origin\":\"Filters and Transclusions\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Modify the template you created in [[Ex:WikipediaLinkTemplate]] so that if the `articleName` variable is not defined, the article name will instead be taken from the `articlename` field of the current tiddler.\\n\\n* Note the lowercase //n// -- field names can't contain uppercase letters.\\n* The `else` filter operator, which adds a constant string to the pipeline if there are no input tiddlers, will be useful here. You will also need to put `!is[blank]` before the `else` operator -- we'll explain why once you've completed this exercise.\"},\"Ex:DefaultToField/answer\":{\"title\":\"Ex:DefaultToField/answer\",\"created\":\"20201122170037082\",\"modified\":\"20210409215623786\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In your `WikipediaLinkTemplate`:\\n\\n```html\\n<$set name=\\\"theArticle\\\" value={{{ [<articleName>!is[blank]else{!!articlename}] }}}>\\n    <a class=\\\"tc-tiddlylink-external\\\" href={{{ [{WikipediaMetadata!!url}addsuffix<theArticle>] }}}>\\n        <<theArticle>>\\n    </a>\\n</$set>\\n```\\n\\nNote that now, if you want to use the default `articlename` field, you'll need to use the `||` in the transclusion, unlike for the [[previous version|Ex:WikipediaLinkTemplate]] -- although you can still leave it off if you're using the variable.\\n\\nYou are probably wondering why we need `!is[blank]`. To understand, consider what happens if `articleName` hasn't been defined. As we learned way back in the [[Variables]] section, a variable that hasn't been defined evaluates to nothing. However, within filters, TiddlyWiki makes a distinction between having a single value that contains no characters in the pipeline (programmers call this an //empty value// or //empty string//) and the state of there being no value at all in the pipeline (programmers call this //null//).\\n\\nThis may sound like a silly distinction. Sometimes null and empty can safely be treated as the same thing, but other times they are quite different. For instance, suppose we are surveying people to find out what names they have printed on the nameplates on their office doors. Alice tells us that she has //nothing// printed on her nameplate (empty value) -- perhaps she just moved into a new office. Bob, on the other hand, didn't answer the question at all (no value, or null value). When analyzing our results, mixing these states together might lead us to incorrect conclusions -- e.g., we might think that 50% of people at the company have empty nameplates and conclude that we need to launch an initiative to fix people's nameplates, when in reality Alice is the only one who has a bad nameplate and a bunch of other people just didn't answer our survey.\\n\\nIn the case of this filter, when no article name is defined, the output of the `<articleName>` filter step is a single empty value. The function of the `!is[blank]` filter step is to eliminate any empty values from the pipeline. Thus, after `!is[blank]`, we don't pass any input values into `else`, and `else` concludes it should output the value of the `articlename` field. If we had left out `!is[blank]`, `else` would receive one input value (an empty one, but an input value nonetheless), so it would just pass the input value through to the output unmodified. Then `theArticle` would also be empty, and the target of our link would be missing.\"},\"Ex:DontOverrideViewTemplateTag\":{\"title\":\"Ex:DontOverrideViewTemplateTag\",\"complete\":\"\",\"created\":\"20200718034451465\",\"length\":\"m\",\"modified\":\"20210321003424291\",\"origin\":\"The View Template\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In [[Ex:MoveContactInformation]], we edited the `list` field of $:/tags/ViewTemplate, which means that we now have an overridden shadow tiddler for that tag. (You can confirm this by looking under the tag pill or in the ''Shadows'' or ''Explorer'' sidebar view -- it will no longer be listed in bold.)\\n\\nIn this case, that's not the end of the world, since the tag contains no body text and it's relatively unlikely extra elements will be added to this list in a future version of TiddlyWiki (thus necessitating a manual merge if we want them to show up). However, suppose we want to be purists and avoid overriding a shadow tiddler unless absolutely necessary. How can we achieve the same effect without needing to override `$:/tags/ViewTemplate`?\\n\\nDelete the overridden shadow tiddler `$:/tags/ViewTemplate` prior to attempting this exercise to put your  `$:/yourname/TiddlerTypeTemplates/` templates back in their default position, so you can tell if you've succeeded.\"},\"Ex:DontOverrideViewTemplateTag/answer\":{\"title\":\"Ex:DontOverrideViewTemplateTag/answer\",\"created\":\"20200718034820651\",\"modified\":\"20210207183128249\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Add a `list-before` field to `$:/yourname/TiddlerTypeTemplates/Contact` and set its value to `$:/core/ui/ViewTemplate/body`, then similarly for `/Meeting`. Take another look at [[Ordering Tiddlers]] if you don't remember how this works.\\n\\nSetting `list-after` to `$:/core/ui/ViewTemplate/classic` would have the same effect, but I bet you're going to have no idea why you set the field to that specific value when you look at it 6 months from now. Saying it comes before `body` is much more intuitive. It also protects you better against future changes -- if you used `list-after` and `classic` were to move to some other location on the tiddler display, your template might move around with it to a confusing spot. However, it's unlikely you will ever not want this template to appear right before the text of the tiddler, no matter where the text might move to.\"},\"Ex:EditCurrentTiddler\":{\"title\":\"Ex:EditCurrentTiddler\",\"created\":\"20210107230556451\",\"length\":\"m\",\"modified\":\"20210818190539836\",\"origin\":\"Buttons and Input Widgets\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The `$edit-text` widget can edit any field on any tiddler, so we don't have to use a temporary tiddler if we don't want to. In the example above, we could just update the `userwhoclicked` field directly as the user types.\\n\\nLook up the documentation for the `$edit-text` widget to learn how to select which field the widget should edit, then change the example to behave accordingly.\"},\"Ex:EditCurrentTiddler/answer\":{\"title\":\"Ex:EditCurrentTiddler/answer\",\"created\":\"20210107230620928\",\"modified\":\"20211129232159174\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Quick and easy:\\n\\n```html\\n<$edit-text tiddler=<<currentTiddler>> field=\\\"userwhoclicked\\\" tag=\\\"input\\\" default=\\\"\\\"/>\\n```\\n\\n''A historical note'' that continues to have both practical and pedagogical relevance: Before TiddlyWiki 5.2.0, it was impractical to directly edit a field on the current tiddler, as the text box would lose focus every time you typed a single character, making typing anything into it infuriating. For this reason, when you browse existing wikis or look at old sample code, you may still see temporary tiddlers being used as the targets of edit boxes where they don't look like they would be useful.\\n\\nTo understand why this happened previously, recall that whenever we make any change in the wiki, it is immediately reflected elsewhere -- for instance, a tiddler that is changed so that it newly matches a filter will immediately show up in any lists that use that filter. TiddlyWiki does this by notifying each widget displayed on the screen that a tiddler has changed and giving it a chance to refresh itself if it thinks it might need to display something different as a result of that tiddler changing. (Specifically, the //root widget//, at the \\\"top\\\" of the wiki, sends the news to all of its immediate child widgets, like the sidebar and the story river, then each of those transmit the news to their children, and so on until the message has propagated everywhere it is relevant.)\\n\\nIn versions prior to 5.2.0, anytime any field on a tiddler was changed, all transclusions of that tiddler were refreshed. That included the display of the whole tiddler in the story river and all its contents, since tiddlers are displayed in the story river [[by transcluding them through a template|The View Template]].\\nThe display of the tiddler in the story river of course included the edit widget -- and when a text box is removed from the page and re-rendered, its focus is lost.\\n\\nIn 5.2.0, the refresh mechanism has been improved so that transclusions of a tiddler are only refreshed when the specific field being transcluded has changed. This change not only avoids unnecessary refreshes and improves performance, it also prevents this lost-focus issue -- since the text box is included within the `text` field of the tiddler specifically, changing any other field using the text box won't trigger a refresh of the widget.\"},\"Ex:EditTemplateInformation\":{\"title\":\"Ex:EditTemplateInformation\",\"created\":\"20200718033649271\",\"length\":\"m\",\"modified\":\"20210207182939809\",\"origin\":\"The View Template\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Add the tiddlers under `$:/yourname/TiddlerTypeTemplates/` to the edit template as well. What do you notice about where they appear? Does it make sense to have them here?\"},\"Ex:EditTemplateInformation/answer\":{\"title\":\"Ex:EditTemplateInformation/answer\",\"created\":\"20200718033728129\",\"modified\":\"20210418135804196\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"To add these tiddlers to the edit template, tag them `$:/tags/EditTemplate`.\\n\\nA trick with the edit template is that you can't easily add content to the preview section -- it has to go either above or below the editor (and the preview if the previewer is showing). Of course it is possible to do so if you really want to, but you have to override a shadow tiddler.\\n\\nIn this case, however, it probably isn't particularly useful anyway -- we put these templates on there so that we could easily see the values of some tiddler fields, but when we're editing we can easily see all of the fields to begin with.\"},\"Ex:EisVariable\":{\"title\":\"Ex:EisVariable\",\"created\":\"20200603201028095\",\"length\":\"s\",\"modified\":\"20210130174406407\",\"origin\":\"Variables\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In the tiddler above, define a second variable called `eis` with the value `Employee Information System`, and replace all references to the EIS or Employee Information System with the value of the `eis` variable. Make sure the disclaimer still shows up correctly.\"},\"Ex:EisVariable/answer\":{\"title\":\"Ex:EisVariable/answer\",\"created\":\"20200603201108320\",\"modified\":\"20210116203519491\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Simply add a second `$set` widget:\\n\\n```html\\n<$set name=\\\"disclaimer\\\" value=\\\"(This paragraph does not represent the formal opinion of my company.)\\\">\\n<$set name=\\\"eis\\\" value=\\\"Employee Information System\\\">\\n\\nThe <<eis>> at this nice company allows employees to perform tasks such as:\\n\\n* update their names and other personal information (on the front page after signing in)\\n* view pay stubs (\\\"remuneration\\\" tab)\\n* request vacation dates (\\\"time off\\\" tab)\\n<<disclaimer>>\\n\\nYou need to use the Really Annoying Five-Factor Authentication Process to get into the <<eis>> if it is a Tuesday, unless you have also purchased coffee (tea or pastries do not count) in the company cafeteria earlier in the day. <<disclaimer>>\\n\\nJaneDoe taught me about the <<eis>> in our EmployeeProfileSetupMeeting. <<disclaimer>>\\n\\n</$set>\\n</$set>\\n```\\n\\nDon't forget to add the second closing `</$set>` tag to match the opening one. In this case, you likely won't notice a difference if you forget, since TiddlyWiki will try its best to figure out what you meant, but if you have lots of content later in the tiddler, it might get confused by the lack of a closing tag.\"},\"Ex:EmptyAtField\":{\"title\":\"Ex:EmptyAtField\",\"created\":\"20210207215057345\",\"length\":\"m\",\"modified\":\"20210502155943685\",\"origin\":\"Hiding and Showing Things\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Update the `MeetingInformationTemplate` to use a fallback to display the text `(no time specified)` if there is no `at` field on the tiddler.\"},\"Ex:EmptyAtField/answer\":{\"title\":\"Ex:EmptyAtField/answer\",\"created\":\"20210207215123361\",\"modified\":\"20210502160129548\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n| !Time|<$view field=\\\"at\\\">(no time specified)</$view>|\\n| !Participants|{{!!participants}}|\\n```\\n\\nYou might have also used a `$transclude` widget; in this case it's equivalent since there is no wikitext to wikify in the `at` field if we're using it normally. In [[Working with Dates]], we'll learn that the `$view` widget has some special features for dates that usually make it more useful than the `$transclude` widget.\\n\\nIt's worth noting that TiddlyWiki here makes a distinction between an empty `at` field and an `at` field that doesn't exist at all: if the `at` field exists but is empty, it won't use the fallback. If you don't want there to be a difference between these states, use a filter with the `has` operator instead.\\n\"},\"Ex:EmptyMacroCall\":{\"title\":\"Ex:EmptyMacroCall\",\"created\":\"20210409193632190\",\"length\":\"s\",\"modified\":\"20210409193808869\",\"origin\":\"Macros\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Try calling a macro that doesn't exist (say, one called `notamacro`). What happens?\"},\"Ex:EmptyMacroCall/answer\":{\"title\":\"Ex:EmptyMacroCall/answer\",\"created\":\"20210409193703559\",\"modified\":\"20210409193742699\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"There is no output at all, just like if you refer to a variable that has gone out of scope or was never created.\"},\"Ex:ExcerptConfigurationTiddler\":{\"title\":\"Ex:ExcerptConfigurationTiddler\",\"created\":\"20200718202059389\",\"length\":\"m\",\"modified\":\"20210130174409534\",\"origin\":\"Creating a List of Links and Backlinks\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Make the size of the excerpt configurable via a configuration tiddler. Call the configuration tiddler `$:/config/LinkExcerptLength`.\"},\"Ex:ExcerptConfigurationTiddler/answer\":{\"title\":\"Ex:ExcerptConfigurationTiddler/answer\",\"created\":\"20200718202118837\",\"modified\":\"20200718202122620\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Your configuration tiddler itself just needs to contain the text `200` (or whatever number of characters you want to show). To use the value on your filter, the easiest method is:\\n\\n```html\\n{{{ [<wikitext>split[]first{$:/config/LinkExcerptLength}join[]] }}}\\n```\"},\"Ex:ExploreSystemTiddlers\":{\"title\":\"Ex:ExploreSystemTiddlers\",\"created\":\"20210103191015407\",\"length\":\"m\",\"modified\":\"20210130174411685\",\"origin\":\"System Tiddlers\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Take a few minutes to poke around in the ''Explorer'' section of the ''More'' sidebar tab and look into a few system tiddlers to see how they're organized. You can safely edit a system tiddler to look at its source if you like; just be sure to click the X button to discard changes when you're done.\"},\"Ex:FamilyRadioButton\":{\"title\":\"Ex:FamilyRadioButton\",\"created\":\"20210206220348508\",\"length\":\"m\",\"modified\":\"20210206220517570\",\"origin\":\"Miscellaneous Widgets\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Add a series of radio buttons on the `ContactInformationTemplate` that allow you to view some information about each family member of the current tiddler.\"},\"Ex:FamilyRadioButton/answer\":{\"title\":\"Ex:FamilyRadioButton/answer\",\"created\":\"20210206220547886\",\"modified\":\"20210502160749797\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Here's a simple version that just shows the phone number:\\n\\n```html\\nView phone number for family member: <$list filter={{!!family}}><$radio tiddler=<<qualify \\\"$:/temp/FamilyContact\\\">> value=<<currentTiddler>>>&nbsp;<<currentTiddler>></$radio>&ensp;</$list>\\n\\n<$set name=\\\"stateTiddlerName\\\" value=<<qualify \\\"$:/temp/FamilyContact\\\">>>\\n\\t<$transclude tiddler={{{ [<stateTiddlerName>get[text]] }}} field=\\\"phone\\\"/>\\n</$set>\\n```\\n\\nNotice that we don't transclude the tiddler `$:/temp/FamilyContact` itself, like `<$transclude tiddler=\\\"$:/temp/FamilyContact\\\"/>`, we transclude //the transcluded value of// `$:/temp/FamilyContact` (using the filter `[<stateTiddlerName>get[text]]`). You might have to think about this for a moment: we stored the name of the selected contact in the tiddler `$:/temp/FamilyContact`, so we don't want to transclude the tiddler `$:/temp/FamilyContact` -- we would be trying to get the value of the `phone` field of `$:/temp/FamilyContact` itself (which it presumably does not have). Instead, we want to transclude the `phone` field of the tiddler which is named within that tiddler (i.e., the contact tiddler we selected). This means we effectively have to transclude twice.\"},\"Ex:FilteredTelephoneLink\":{\"title\":\"Ex:FilteredTelephoneLink\",\"created\":\"20210131040945181\",\"length\":\"m\",\"modified\":\"20210131040911376\",\"origin\":\"Using Variables in Macros\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Repeat the [[previous exercise|Ex:TelephoneLink]], but this time use a filter rather than a macro to combine the `tel:` part and the phone number. You may need to visit the TiddlyWiki documentation to find an appropriate filter operator.\"},\"Ex:FilteredTelephoneLink/answer\":{\"title\":\"Ex:FilteredTelephoneLink/answer\",\"created\":\"20210131041013435\",\"modified\":\"20210410140457181\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<a href={{{ [[tel:]addsuffix{!!phone}] }}}>Call {{!!title}}</a>\\n```\\n\\nOr alternatively:\\n\\n```html\\n<a href={{{ [{!!phone}addprefix[tel:]] }}}>Call {{!!title}}</a>\\n```\\n\\nThis suggests a general fact: most anything you can do with [[text substitution|Text Substitution]] in a macro, you can also achieve with a [[filtered transclusion|Filters and Transclusions]]. Which you choose is largely personal preference, although sometimes one might be significantly clearer and easier than the other, in which case you should probably choose that one.\"},\"Ex:FixingContactTabs\":{\"title\":\"Ex:FixingContactTabs\",\"created\":\"20200717223809578\",\"length\":\"m\",\"modified\":\"20210130174413400\",\"origin\":\"Tabs\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Fix the issue identified in the previous exercise, [[Ex:ContactTabs]], so that all contacts display all information correctly.\\n\\n//Hint 1//: You'll need to create a template tiddler. You can specify the name of a template used to render each tab using the `template` parameter to the `tabs` macro.\\n\\n//Hint 2//: The `currentTab` variable contains the name of the tiddler being rendered as the current tab.\\n\\nIf you get really stuck, read the TiddlyWiki documentation on the `tabs` macro, which explains how to do this.\"},\"Ex:FixingContactTabs/answer\":{\"title\":\"Ex:FixingContactTabs/answer\",\"created\":\"20200717224206811\",\"modified\":\"20210410192040152\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create a template tiddler called `ContactTabTemplate` with the following content:\\n\\n```html\\n<$set name=currentTiddler value=<<currentTab>>>\\n\\n\\t{{!!text}}\\n\\t\\n</$set>\\n```\\n\\nYou can use any method you like to set the current tiddler. Note the blank lines to force the text field to be transcluded in [[block mode|Block Mode and Inline Mode]].\\n\\nThen add a `template:ContactTabTemplate` parameter to the `tabs` macro used to render your contact tabs.\\n\\nThe TiddlyWiki documentation gives the following equivalent version using the `$transclude` widget, which we've so far mentioned only in passing, and the `$tiddler` widget, which we haven't seen at all:\\n\\n```html\\n<$tiddler tiddler=<<currentTab>>>\\n<$transclude mode=\\\"block\\\" />\\n</$tiddler>\\n```\\n\\nWe'll talk about both widgets in [[chapter 7|Tips and Tricks]].\\n\\nAnother way would be to transclude the tiddler named in the `currentTab` variable using double curly braces, since doing a transclusion this way sets the current tiddler as it does so. You have to use [[text substitution|Text Substitution]] to get the value of `currentTab` into the braces, though:\\n\\n```html\\n\\\\define makeCurrentTiddler()\\n\\t{{$(currentTab)$}}\\n\\\\end\\n\\n<<makeCurrentTiddler>>\\n```\\n\\nBut when you reread this one later, it'll be much less obvious what you were trying to accomplish, so one of the preceding methods is probably preferable.\"},\"Ex:FriendlyViewsNames\":{\"title\":\"Ex:FriendlyViewsNames\",\"complete\":\"\",\"created\":\"20200718044721309\",\"length\":\"m\",\"modified\":\"20210418141357078\",\"origin\":\"Adding to the Sidebar\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"By default, all of the tabs will have ugly system-tiddler names on them, like `$:/yourname/Views`. Fix this so they have friendly names like we defined at the beginning of this section.\"},\"Ex:FriendlyViewsNames/answer\":{\"title\":\"Ex:FriendlyViewsNames/answer\",\"created\":\"20200718044740351\",\"modified\":\"20200718044749279\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"To do this, you simply set the `caption` field of each tiddler. The caption applies on tabs, in tables of contents, in tag pills, and pretty much anywhere else you can think of except the actual title line when looking at the tiddler.\\n\\nNote that the `default` parameter to the `tabs` macro still needs to refer to the title, not the caption. This may seem obvious since the title is always how TiddlyWiki refers to the tiddler internally, but it can be unexpected when the name that appears on the tab doesn't work to select that tab!\"},\"Ex:FudgeAdviceReflection\":{\"title\":\"Ex:FudgeAdviceReflection\",\"created\":\"20200603200049928\",\"length\":\"m\",\"modified\":\"20210130174418398\",\"origin\":\"Creating Hierarchies with a Table of Contents\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Revisit the tiddler you created in the previous exercise.\\n\\n* Logically, is it a child of that meeting? Or is it a separate idea that just happened to occur during that meeting?\\n* Would it be better to use a different kind of relationship, like a link?\\n* Think about the title you chose: does it [[serve as metacommentary on the idea|Tiddler Titles]]?\"},\"Ex:FudgeAdviceTiddler\":{\"title\":\"Ex:FudgeAdviceTiddler\",\"created\":\"20200603200012761\",\"length\":\"s\",\"modified\":\"20210409134556285\",\"origin\":\"Creating Hierarchies with a Table of Contents\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Suppose that, during our meeting, Jane gave us some advice about the company that probably shouldn't stray. We might want to put that in a separate tiddler to reduce the chance we accidentally copy and paste it over to someone else who asks what happened at the meeting.\\n\\nCreate such a tiddler with the following text, and make it a child of the `EmployeeProfileSetupMeeting`, so we'll still be able to keep track of it:\\n\\n```html\\nJaneDoe told me, while we were together at the EmployeeProfileSetupMeeting, that I should be very careful about saying the word \\\"fudge\\\" in this office, due to an incident involving Robert at the 2018 Christmas party that nobody wants to talk about.\\n```\\n\\nCheck the `OnboardingProcess` table of contents again. Did you get a third level of hierarchy?\"},\"Ex:FudgeTiddlerRevisited\":{\"title\":\"Ex:FudgeTiddlerRevisited\",\"created\":\"20200603200326772\",\"length\":\"s\",\"modified\":\"20210130174421216\",\"origin\":\"Creating Evergreen Notes\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"If you didn't do it while reading, go back to the fudge tiddler and give it appropriate tags and links. You can link to some nonexistent tiddlers if you like.\"},\"Ex:FudgeTransclusion\":{\"title\":\"Ex:FudgeTransclusion\",\"created\":\"20200604014215820\",\"length\":\"s\",\"modified\":\"20210130174422990\",\"origin\":\"Transclusions\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Our initial motivation for extracting the now-infamous fudge tiddler from the `EmployeeProfileSetupMeeting` tiddler was so that we wouldn't accidentally share that information with somebody. Suppose that everyone else at the company also uses TiddlyWiki, so we always share our notes as raw wikitext instead of rendered/formatted output so recipients can paste it directly into their own wikis. In this case, we can rely on transclusion to protect us provided that the fudge tiddler's title isn't too revealing: if we copy the whole tiddler without noticing this inclusion, the recipient won't get the transcluded tiddler and thus won't see our embarrassing notes.\\n\\nAll this is to say, transclude the fudge tiddler into the `EmployeeProfileSetupMeeting` tiddler. What are the advantages and disadvantages of doing it this way as opposed to linking or tagging?\"},\"Ex:FudgeTransclusion/answer\":{\"title\":\"Ex:FudgeTransclusion/answer\",\"created\":\"20200604014230718\",\"modified\":\"20200604014239895\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"* //Advantages//: You don't have to click on and open another tiddler. The other content blends seamlessly into this one.\\n* //Disadvantages//: Editing is more difficult. It's not obvious where the content comes from, or even that it's transcluded, without going into edit mode.\"},\"Ex:FudgeWithoutJane\":{\"title\":\"Ex:FudgeWithoutJane\",\"created\":\"20200716022808142\",\"length\":\"s\",\"modified\":\"20210130174424856\",\"origin\":\"Multi-Run Filters\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Write a filter to find all tiddlers mentioning fudge that don't list Jane as a participant. Use two filter runs.\"},\"Ex:FudgeWithoutJane/answer\":{\"title\":\"Ex:FudgeWithoutJane/answer\",\"created\":\"20200716022842367\",\"modified\":\"20210410181030475\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```\\n[search[fudge]] -[contains:participants[JaneDoe]]\\n```\"},\"Ex:FunnyClass\":{\"title\":\"Ex:FunnyClass\",\"created\":\"20210130034039226\",\"length\":\"s\",\"modified\":\"20210130174426726\",\"origin\":\"Stylesheets\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Add `my-funny-class` from above (or any styling you like, as long as it is distinctive) to a global stylesheet in your wiki and apply the class to some text.\"},\"Ex:FunnyTextCheckbox\":{\"title\":\"Ex:FunnyTextCheckbox\",\"created\":\"20210130035045108\",\"length\":\"m\",\"modified\":\"20210130174427177\",\"origin\":\"Stylesheets\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Add a checkbox to the control panel on a new subtab within the //Settings// tab called //Styles//, allowing this value to be toggled on and off, so the user can make text look funny only if they so desire.\"},\"Ex:FunnyTextCheckbox/answer\":{\"title\":\"Ex:FunnyTextCheckbox/answer\",\"created\":\"20210130035112224\",\"modified\":\"20210130035017840\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The tag to add a subtab to the //Settings// section of the control panel is `$:/tags/ControlPanel/SettingsTab`. A tiddler with this tag and a caption of `Styles` could look like:\\n\\n```html\\n<$checkbox tag=\\\"input\\\" tiddler=\\\"$:/config/ShowFunnyText\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"> Show funny text</$checkbox>\\n```\"},\"Ex:GoogleLink\":{\"title\":\"Ex:GoogleLink\",\"complete\":\"\",\"created\":\"20210124040854550\",\"length\":\"m\",\"modified\":\"20210317024646003\",\"origin\":\"HTML\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In a new tiddler in your wiki, create a link to Google using HTML, with `Google` as the link text. The element used to create links is `<a>`; the `href` attribute contains the URL of the link, and the content is the text of the link.\"},\"Ex:GoogleLink/answer\":{\"title\":\"Ex:GoogleLink/answer\",\"created\":\"20210124040916272\",\"modified\":\"20210124040825864\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<a href=\\\"https://www.google.com\\\">Google</a>\\n```\"},\"Ex:HolidayToday\":{\"title\":\"Ex:HolidayToday\",\"created\":\"20200718011939334\",\"length\":\"m\",\"modified\":\"20210410192838000\",\"origin\":\"Data Tiddlers\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create a tiddler called `TodaysHoliday` which says `It's ''The Day'' today!`, where `The Day` is the name of the holiday that is occurring today, according to the data tiddler. Unless you happen to be doing this exercise on one of the four holidays listed above, you'll need to make up and add your own holiday with today's date so you can check the result.\\n\\nYou may need to look at the documentation for the `now` macro to figure out how to get today's date in the `month/day` format.\"},\"Ex:HolidayToday/answer\":{\"title\":\"Ex:HolidayToday/answer\",\"created\":\"20200718011953409\",\"modified\":\"20200718012001987\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The easiest and cleanest way uses the [[transclude widget|https://tiddlywiki.com/#TranscludeWidget]] with the `index` attribute to get a property from a data tiddler:\\n\\n```html\\nIt's ''<$transclude tiddler=UsHolidays index=<<now \\\"0MM/0DD\\\">> />'' today!\\n```\\n\\nHowever, we didn't discuss the `transclude` widget, so it's unlikely you thought of that! Here are two other ways to accomplish it; you might have come up with something yet different that also works fine.\\n\\n```html\\n<$set name=formattedToday value=<<now \\\"0MM/0DD\\\">>>\\n  It's ''<$text text={{{ [[UsHolidays]getindex<formattedToday>] }}} />'' today!\\n</$set>\\n```\\n\\n(Recall that the `text` widget is needed to prevent the holiday from turning into a link with the use of triple curly braces.)\\n\\n\\n```html\\n\\\\define holidayTransclusion()\\n  {{UsHolidays##$(formattedToday)$}}\\n\\\\end\\n\\n<$set name=formattedToday value=<<now \\\"0MM/0DD\\\">>>\\n  It's ''<<holidayTransclusion>>'' today!\\n</$set>\\n```\"},\"Ex:HostingOptions\":{\"title\":\"Ex:HostingOptions\",\"created\":\"20201123000642753\",\"length\":\"m\",\"modified\":\"20210130174907396\",\"origin\":\"Supplemental Exercises\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Try out another option for [[hosting and saving your TiddlyWiki|Options for Saving and Hosting Your Wiki]].\\n\"},\"Ex:IdentifyingRecentEvergreenNotes\":{\"title\":\"Ex:IdentifyingRecentEvergreenNotes\",\"complete\":\"\",\"created\":\"20200603200410872\",\"length\":\"m\",\"modified\":\"20210321012734091\",\"origin\":\"Creating Evergreen Notes\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Find some notes you've recently taken, in any format, and review them to see if there are any ideas that would be well served by being developed as evergreen notes. These might be part of a journal, annotations you made in a book, ideas for a project, or scribbles about a lecture you attended. Write down what contexts these ideas would belong in and what other ideas they would be related to.\"},\"Ex:ImageHtml\":{\"title\":\"Ex:ImageHtml\",\"created\":\"20210124041040705\",\"length\":\"s\",\"modified\":\"20210130174430260\",\"origin\":\"HTML\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"What HTML element is used to insert an image? You may wish to search the web to find the answer.\"},\"Ex:ImageHtml/answer\":{\"title\":\"Ex:ImageHtml/answer\",\"created\":\"20210124041101968\",\"modified\":\"20210124041010621\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"`<img>`, a void element with the `src` attribute containing the URL of the image.\"},\"Ex:InputExistsText\":{\"title\":\"Ex:InputExistsText\",\"created\":\"20200718215047062\",\"length\":\"m\",\"modified\":\"20210130174438445\",\"origin\":\"Buttons and Input Widgets\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Add a little bit of text to the right of the `Go` button in [[Ex:JumpToTiddler]] that displays \\\"Exists!\\\" in green if the tiddler name currently entered into the input field exists, and \\\"Not found.\\\" in red if it doesn't. This text should immediately update as you type.\\n\\n//Hint//: To quickly change the color of some text, you can wrap it with a span, like `<span style=\\\"color:blue;\\\">the text</span>`.\"},\"Ex:InputExistsText/answer\":{\"title\":\"Ex:InputExistsText/answer\",\"created\":\"20200718215113479\",\"modified\":\"20200718215113806\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\nGo to Tiddler:\\n<$edit-text tiddler=\\\"$:/temp/goto\\\" tag=\\\"input\\\" default=\\\"\\\"/>\\n<$button to={{$:/temp/goto}}>Go</$button>\\n<$list filter=\\\"[{$:/temp/goto}is[tiddler]]\\\"\\n       emptyMessage=\\\"\\\"\\\"<span style=\\\"color: red;\\\">Not found.</span>\\\"\\\"\\\">\\n  <span style=\\\"color:green;\\\">Exists!</span>\\n</$list>\\n```\"},\"Ex:InspectSquare\":{\"title\":\"Ex:InspectSquare\",\"complete\":\"\",\"created\":\"20210121000924032\",\"length\":\"m\",\"modified\":\"20210409174545653\",\"origin\":\"When Things Go Wrong\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Using your browser's element inspector, determine:\\n\\n# What the `class` attribute of the blue square below is.\\n# What the hidden message in this exercise says.\\n\\n<div class=\\\"bluuuuu\\\" style=\\\"background-color: blue;\\\" width=24px>&nbsp;<span style=\\\"display: none;\\\">Help, I'm trapped in an HTML span!</span></div>\\n\\n<style>\\n.bluuuuu {\\n\\tmargin: auto;\\n\\twidth: 10px;\\n\\theight: 10px;\\n\\tborder: 1px solid rgba(0, 0, 0, 0.2) }\\n</style>\"},\"Ex:InspectSquare/answer\":{\"title\":\"Ex:InspectSquare/answer\",\"created\":\"20210121000943507\",\"modified\":\"20210121000855353\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The class is `bluuuuu`, and the hidden message, kept in a `span` element inside the `div` element that makes up the square, is “Help, I'm trapped in an HTML span!”\"},\"Ex:JaneDataTransclusion\":{\"title\":\"Ex:JaneDataTransclusion\",\"created\":\"20200604013708933\",\"length\":\"m\",\"modified\":\"20210409200122678\",\"origin\":\"Transclusions\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"One of the complaints we had about our [[Contact Tiddlers]] when we initially created them was that you couldn't see any of the fields on them without clicking on the //info// button. Remedy that by adding a section to the `JaneDoe` tiddler titled `Information about Jane`, containing a bulleted list or table that shows Jane's email address, phone number, family members, and manager.\"},\"Ex:JaneDataTransclusion/answer\":{\"title\":\"Ex:JaneDataTransclusion/answer\",\"created\":\"20200604013733380\",\"modified\":\"20200604013754220\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"An easy version:\\n\\n```html\\n!! Information about Jane\\n\\n* ''Email'': {{!!email}}\\n* ''Phone'': {{!!phone}}\\n* ''Family'': {{!!family}}\\n* ''Manager'': {{!!manager}}\\n```\"},\"Ex:JaneDoeFamily\":{\"title\":\"Ex:JaneDoeFamily\",\"created\":\"20200603115901406\",\"length\":\"m\",\"modified\":\"20210130174442565\",\"origin\":\"Reviewing the Basics\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Visit Jane Doe's tiddler and review the //family// and //manager// fields. These fields refer to several people who don't have tiddlers yet. Create those tiddlers, with all the appropriate metadata.\\n\\nYou can assume that John Doe and Emily Doe are also managed by Chris Smith (though managing three family members unrelated to you sounds like a disaster waiting to happen). Your choice of phone numbers and email addresses does not matter, provided they are in the correct formats.\"},\"Ex:JaneManagerPhone\":{\"title\":\"Ex:JaneManagerPhone\",\"created\":\"20200604020227764\",\"length\":\"M\",\"modified\":\"20210130175052699\",\"origin\":\"Transclusions\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Transclude a line into the text of Jane's tiddler that contains Chris Smith's phone number, in case she messes up so badly that you need to contact her manager immediately.\\n\\nHow would you make it so that it currently refers to Chris's phone number, but if the `manager` field is updated, the new manager's phone number will appear instead? (You might not be able to get this one, but at least spend some time thinking about it and experimenting before you look at the answer.)\\n\\n//Hint//: Use a macro.\"},\"Ex:JaneManagerPhone/answer\":{\"title\":\"Ex:JaneManagerPhone/answer\",\"created\":\"20200604020245387\",\"modified\":\"20210409201410771\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Here's the obvious and straightforward way, which has the major disadvantage of silently not updating if the manager changes and perhaps making you call the wrong number at an inopportune time:\\n\\n```html\\nJane's manager's phone number is {{ChrisSmith!!phone}}.\\n```\\n\\nNow for trying to make it grab the manager's name from the `manager` field on the fly. You may have been tempted to try:\\n\\n\\n```html\\n{{ {{!!manager}}!!phone }}\\n```\\n\\n…but unfortunately this does not work.\\n\\nThere are actually two separate reasons it doesn't work. First, TiddlyWiki doesn't parse other wikitext within `{{double curly braces}}`, it only looks for a tiddler name/field. Second, even if it did, it would fail for the same reason that this didn't work in an [[exercise|Ex:MacroAdjacency]] in [[Macros]]:\\n\\n```html\\n<<wikipediaLink>>Aardvark\\n```\\n\\nIf you need a refresher, TiddlyWiki processes the contents of transclusions (of variables and macros, as we saw before, as well as of fields) separately from the surrounding content, so the result of `{{!!manager}}` (namely, `ChrisSmith`) is an entirely separate piece of wikitext to TiddlyWiki. Thus, what it would see would be three separate, unconnected pieces: `{{`, `ChrisSmith`, and `!!phone }}`.\\n\\nHere's a method that works and uses only tools we've already seen. If you worked at it long enough, you might have gotten this or something similar:\\n\\n```html\\n\\\\define getPhone(person)\\n{{$person$!!phone}}\\n\\\\end\\n\\nJane's manager's phone number is: <$macrocall $name=\\\"getPhone\\\" person={{!!manager}} />\\n```\\n\\nThat said, understanding //why// this works when `{{ {{!!manager}}!!phone }}` doesn't is likely beyond your TiddlyWiki knowledge at this point, so don't feel too bad if you didn't get it. We'll see the explanation in [[Text Substitution]].\\n\"},\"Ex:JaneMeetingList\":{\"title\":\"Ex:JaneMeetingList\",\"created\":\"20200603192759957\",\"length\":\"m\",\"modified\":\"20210130174444781\",\"origin\":\"Your First Dynamic List\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Modify the `MeetingList` so that only meetings that Jane attended are shown. Be careful not to exclude meetings that Jane attended along with other people.\"},\"Ex:JaneMeetingList/answer\":{\"title\":\"Ex:JaneMeetingList/answer\",\"created\":\"20200603194617232\",\"modified\":\"20200603194755669\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<$list filter=\\\"[tag[Meeting]contains:participants[JaneDoe]!sort[at]]\\\">\\n  <<currentTiddler>><br>\\n</$list>\\n```\\n\\nNote the use of the `contains:` operator rather than the `field:` operator. If we used `field:`, then a meeting whose `participants` field included both Jane and someone else, like `JaneDoe ChrisSmith`, would not match.\"},\"Ex:JaneMeetingMultirun\":{\"title\":\"Ex:JaneMeetingMultirun\",\"complete\":\"\",\"created\":\"20200715230504176\",\"length\":\"s\",\"modified\":\"20210130174447066\",\"origin\":\"Multi-Run Filters\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Write a filter to find all meetings that are part of the `OnboardingHr` project or the `TopSecretHr` project and were attended by Jane.\"},\"Ex:JaneMeetingMultirun/answer\":{\"title\":\"Ex:JaneMeetingMultirun/answer\",\"created\":\"20200715230537311\",\"modified\":\"20210410180943780\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```\\n[tag[OnboardingHr]] [tag[TopSecretHr]] +[contains:participants[JaneDoe]]\\n```\\n\\nThis works fine too, but requires more typing and is a bit harder to understand:\\n\\n```\\n[tag[OnboardingHr]contains:participants[JaneDoe]] [tag[TopSecretHr]contains:participants[JaneDoe]]\\n```\"},\"Ex:JohnDoeInAnyField\":{\"title\":\"Ex:JohnDoeInAnyField\",\"created\":\"20210206182909132\",\"length\":\"m\",\"modified\":\"20210206182844186\",\"origin\":\"Common Filter Operators\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In an [[exercise|Ex:JohnDoeSearch]] in the [[Searching]] section, we noted that a search for `JohnDoe` did not find places where John was mentioned somewhere other than the `text` field. Write and test a filter that finds mentions of John in any field.\"},\"Ex:JohnDoeInAnyField/answer\":{\"title\":\"Ex:JohnDoeInAnyField/answer\",\"created\":\"20210206182950019\",\"modified\":\"20210409164849480\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n[search:*[JohnDoe]]\\n```\\n\\nTo prevent tiddlers related to $:/AdvancedSearch from appearing in your search results because you have typed text containing `JohnDoe` in the search box, you might want to use:\\n\\n```html\\n[!is[system]search:*[JohnDoe]]\\n```\"},\"Ex:JohnDoeSearch\":{\"title\":\"Ex:JohnDoeSearch\",\"created\":\"20200603175748862\",\"length\":\"m\",\"modified\":\"20210130174448580\",\"origin\":\"Searching\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Search for `JohnDoe`. Do you notice anything about the results? What's there, and what's missing?\"},\"Ex:JohnDoeSearch/answer\":{\"title\":\"Ex:JohnDoeSearch/answer\",\"created\":\"20200603175809322\",\"length\":\"m\",\"modified\":\"20210131163656992\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Uses of `JohnDoe` in the `title` and `text` fields of a tiddler appear when searching. Uses in other fields, however, such as the `family` field on `JaneDoe`, do not!\\n\\nLater on, we'll learn some ways around this. In the meantime, it's good to keep in mind that user-defined fields are in many ways second-class citizens in TiddlyWiki. If you want to do much with them beyond creating them, you have to add those features yourself with plugins or custom logic. This is not to say that doing so is difficult, though!\"},\"Ex:JsonHoliday\":{\"title\":\"Ex:JsonHoliday\",\"created\":\"20200718012242269\",\"length\":\"s\",\"modified\":\"20210130174454312\",\"origin\":\"Data Tiddlers\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create another data tiddler called `UsHolidaysJson` using the same data in a JSON format, and change your `TodaysHoliday` tiddler to look the holiday up in there instead. Everything should continue to work the same way on the transclusion side. The table looks like this in JSON:\\n\\n```json\\n{\\n  \\\"01/01\\\": \\\"New Year's Day\\\",\\n  \\\"07/04\\\": \\\"Independence Day\\\",\\n  \\\"10/31\\\": \\\"Halloween\\\",\\n  \\\"12/25\\\": \\\"Christmas Day\\\"\\n}\\n```\"},\"Ex:JumpToTiddler\":{\"title\":\"Ex:JumpToTiddler\",\"created\":\"20200718214905520\",\"length\":\"m\",\"modified\":\"20210130174457312\",\"origin\":\"Buttons and Input Widgets\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create a tiddler `JumpToTiddler` that has an input field and a `Go` button. When the button is clicked, the tiddler named in the input field should open.\\n\\n//Hint//: One of the attributes of the `button` widget we didn't discuss here will help.\"},\"Ex:JumpToTiddler/answer\":{\"title\":\"Ex:JumpToTiddler/answer\",\"created\":\"20200718215026527\",\"modified\":\"20200718215030098\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\nGo to Tiddler:\\n<$edit-text tiddler=\\\"$:/temp/goto\\\" tag=\\\"input\\\" default=\\\"\\\"/>\\n<$button to={{$:/temp/goto}}>Go</$button>\\n```\"},\"Ex:LinkDivClasses\":{\"title\":\"Ex:LinkDivClasses\",\"created\":\"20200718201549864\",\"length\":\"m\",\"modified\":\"20210130174459327\",\"origin\":\"Creating a List of Links and Backlinks\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"One more step with the divs. In order to get them formatted correctly, we need to be able to identify each of them separately. The way we do this in HTML/CSS is by applying a //class// (that is, assigning a value to the `class` attribute of the HTML tag). Adjust the wikitext so that each div has a class. It's a good idea to prefix the class names with your initials and a `-`, or some similar convention -- this will ensure that you don't inadvertently pick the same class name that TiddlyWiki's core or a plugin does and mess up the formatting somewhere else on the page.\"},\"Ex:LinkDivClasses/answer\":{\"title\":\"Ex:LinkDivClasses/answer\",\"created\":\"20200718201623464\",\"modified\":\"20210418151529023\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n\\\\define excerptify(title)\\n  <$wikify name=wikitext text={{$title$}}>\\n    <$text text={{{ [<wikitext>split[]first[200]join[]] }}} />...\\n  </$wikify>\\n\\\\end\\n\\n\\\\define linkDisplay(title, filterFragment, cssClass)\\n<div class=<<__cssClass__>>>\\n$title$:\\n\\n<ul>\\n<$list filter=\\\"[all[current]$filterFragment$]\\\">\\n  <li>\\n    <$link />\\n    <div class=\\\"sib-excerpt\\\">\\n      <$macrocall $name=\\\"excerptify\\\" title={{!!title}}/>\\n    </div>\\n  </li>\\n</$list>\\n</ul>\\n</div>\\n\\\\end\\n\\n<div class=\\\"sib-link-display\\\">\\n  <<linkDisplay \\\"Links\\\" \\\"links[]\\\" \\\"sib-links\\\">>\\n  <<linkDisplay \\\"Backlinks\\\" \\\"backlinks[]\\\" \\\"sib-backlinks\\\">>\\n</div>\\n```\\n\"},\"Ex:LinkPattern\":{\"title\":\"Ex:LinkPattern\",\"complete\":\"\",\"created\":\"20201122171809633\",\"length\":\"m\",\"modified\":\"20210409203059428\",\"origin\":\"Your First Dynamic List\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"There's a problem with this pattern that we've been using throughout this section to create a list of links to tiddlers:\\n\\n```html\\n<$list filter=\\\"a filter\\\">\\n  <<currentTiddler>>\\n</$list>\\n```\\n\\nThe problem is that if the name of the `currentTiddler` has a space in it, it is not linked. The only reason the results have displayed correctly so far is that they're in CamelCase and as such are linked automatically.\\n\\nTo explicitly create internal links, as we alluded to back in [[Widgets]], we can use the `$link` widget:\\n\\n```html\\n<$link to=\\\"Tiddler Name to Link To\\\">Text of the Link</$link>\\n```\\n\\nAdd a space to the title of one of your meeting tiddlers, so you can see the problem, then modify the `MeetingList` you created in [[Ex:BulletedMeetingList]], using the `$link` widget to fix this problem.\\n\\n//Hint//: `<<currentTiddler>>` will get replaced in more places than you might think.\"},\"Ex:LinkPattern/answer\":{\"title\":\"Ex:LinkPattern/answer\",\"created\":\"20201122171832715\",\"modified\":\"20210409172901634\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<ul>\\n    <$list filter=\\\"[tag[Meeting]!sort[at]]\\\">\\n        <li><$link to=<<currentTiddler>>><<currentTiddler>></$link></li>\\n    </$list>\\n</ul>\\n```\\n\\nSince this is such a common pattern, TiddlyWiki offers several ways to abbreviate it. If the text of the link should be be the same as the target, you can leave the body empty using a self-closing tag:\\n\\n```html\\n<$link to=<<currentTiddler>>/>\\n```\\n\\nAnd in fact, if the target should be the current tiddler, you can just say:\\n\\n```html\\n<$link />\\n```\\n\\nWe'll be seeing much more of using `<<things in angle brackets>>` as attribute values in widgets and HTML tags when we learn about [[variables, macros, and transclusions|Variables, Macros, and Transclusions]] in the next chapter.\"},\"Ex:LinkedTiddlerExcerpt\":{\"title\":\"Ex:LinkedTiddlerExcerpt\",\"created\":\"20200718201326615\",\"length\":\"m\",\"modified\":\"20210130174459855\",\"origin\":\"Creating a List of Links and Backlinks\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Add an excerpt for each link -- in other words, grab the first 200 characters of each tiddler and show it under the title. This will help us remind us what the tiddler is about, if the [[title wasn't chosen carefully enough|Tiddler Titles]].\\n\\nWe can accomplish this by [[wikifying|Wikification]] the tiddler -- that is, processing the HTML, transclusions, and wikitext in it as if we were displaying the tiddler -- and then taking just the beginning portion of it. Here's a partially completed macro you can use to get an excerpt from a tiddler. Your task is to figure out what goes in the filter transclusion (to convert the full text of the tiddler to just its first 200 characters), then call the macro from an appropriate location.\\n\\n```html\\n\\\\define excerptify(title)\\n  <$wikify name=wikitext text={{$title$}}>\\n    <$text text={{{ ??? }}} />...\\n  </$wikify>\\n\\\\end\\n```\\n\\n//Hint//: The `split[]` filter operator with nothing in the square brackets can be used to split incoming text into individual characters. You may need to review the [[filter operators|https://tiddlywiki.com/#Filter Operators]] documentation.\"},\"Ex:LinkedTiddlerExcerpt/answer\":{\"title\":\"Ex:LinkedTiddlerExcerpt/answer\",\"created\":\"20200718201356144\",\"modified\":\"20200718201400665\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Here's what I ended up with:\\n\\n```html\\n\\\\define excerptify(title)\\n  <$wikify name=wikitext text={{$title$}}>\\n    <$text text={{{ [<wikitext>split[]first[200]join[]] }}} />...\\n  </$wikify>\\n\\\\end\\n\\n\\\\define linkDisplay(title, filterFragment)\\n$title$:\\n\\n<ul>\\n<$list filter=\\\"[all[current]$filterFragment$]\\\">\\n  <li>\\n    <$link to=<<currentTiddler>>><<currentTiddler>></$link>: <$macrocall $name=excerptify title={{!!title}}/>\\n  </li>\\n</$list>\\n</ul>\\n\\\\end\\n\\n<<linkDisplay \\\"Links\\\" \\\"links[]\\\">>\\n<<linkDisplay \\\"Backlinks\\\" \\\"backlinks[]\\\">>\\n```\\n\\nYou might notice that if the first line is shorter than 200 characters, the lines are run together. This is a common issue with excerpting algorithms which you'll often see even on professional blogs and websites. While it's undoubtedly possible to fix, we won't get into the necessary machinations here; feel free to take it on as a challenge project if you like!\"},\"Ex:LinkingInTransclusions\":{\"title\":\"Ex:LinkingInTransclusions\",\"created\":\"20200604021802285\",\"length\":\"s\",\"modified\":\"20210409200451386\",\"origin\":\"Transclusions\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In general, if we reference ChrisSmith in the `manager` field of the `JaneDoe` tiddler, Jane does not show up as a backlink in `ChrisSmith`'s //Backlinks// tab on the info page, because //Backlinks// shows only links in the `text` field. However, now we have a link in the text since we have transcluded the value of the `manager` field into the text. So now that we have a link, we should have a reference back to `JaneDoe` from `ChrisSmith`.\\n\\nTest this hypothesis by looking in the //Backlinks// tab of `ChrisSmith`. What did you find? Why might this be?\"},\"Ex:LinkingInTransclusions/answer\":{\"title\":\"Ex:LinkingInTransclusions/answer\",\"created\":\"20200604021822338\",\"modified\":\"20210409200812952\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Jane does not show up as a backlink, for the same reason that transcluded text didn't show up in a search in [[Ex:SearchingInTransclusions]]: the link to `ChrisSmith` is not actually part of the `JaneDoe` tiddler, but only appears there when the tiddler is viewed.\\n\\nThis is consequential enough for the topology of links between tiddlers that there's a special name for it: a link is said to be a ''hard link'' if it, in the words of the [[documentation|https://tiddlywiki.com/#Hard%20and%20Soft%20Links]], “can be detected by a superficial examination of wikitext.” Basically, that means the CamelCase tiddler name or the tiddler name in ``[[double square brackets]]`` or as the `to` parameter of a `$link` widget must be directly present in the text field. Links that appear as a result of a transclusion with `{{}}` or `<<>>`, or `$link` widgets where the `to` parameter is transcluded with `{{}}` or `<<>>`, will instead be ''soft links'' -- they will show up when you view the tiddler, but TiddlyWiki won't know about them when you use filters or other methods of querying.\"},\"Ex:LiteralMatters\":{\"title\":\"Ex:LiteralMatters\",\"created\":\"20210208005356135\",\"length\":\"m\",\"modified\":\"20210410141803660\",\"origin\":\"Wikification\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Modify the answer to the [[previous exercise|Ex:WikifyWikipediaLink]] so that the value of the `text` attribute to the `$wikify` widget is in quotation marks. What happens? Why do you think this is?\"},\"Ex:LiteralMatters/answer\":{\"title\":\"Ex:LiteralMatters/answer\",\"created\":\"20210208005424077\",\"modified\":\"20210208005324942\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"//Nothing// different happens, which may be unexpected at first -- typically there is a big difference between literal values and transcluded values, as we saw in [[Ex:QuotedMacroCall]]. The reason it's different here is that the `text` attribute of the `$wikify` widget is treated as wikitext. So if we give `\\\"<<someVariable>>\\\"` as the value, the first thing TiddlyWiki will do is wikify that text, which will result in the value of `someVariable`. Then TiddlyWiki will wikify that again as long as it still contains wikitext that can be transformed. Leaving off the quotation marks saves one round of wikification by directly passing the value of `someVariable` to the widget, but the end result is the same.\"},\"Ex:LookAtBrowseOptions\":{\"title\":\"Ex:LookAtBrowseOptions\",\"created\":\"20210130213759996\",\"length\":\"m\",\"modified\":\"20210130213723912\",\"origin\":\"Browsing Your Tiddlers\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"If you haven't already done so, take a look at each of the tabs discussed above in your sample wiki.\"},\"Ex:MacroAdjacency\":{\"title\":\"Ex:MacroAdjacency\",\"created\":\"20200603203413284\",\"length\":\"m\",\"modified\":\"20210130174505228\",\"origin\":\"Macros\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Rather than create a macro for the first version of the Wikipedia link functionality, one might think we could simply use a variable and stick the variable reference immediately next to the article name:\\n\\n```html\\n<$set name=\\\"wikipedia\\\" value=\\\"https://en.wikipedia.org/wiki/\\\">\\n\\t<<wikipedia>>Aardvark\\n</$set>\\n```\\n\\nTry putting this snippet in a tiddler. What happens? Why do you think this might happen?\"},\"Ex:MacroAdjacency/answer\":{\"title\":\"Ex:MacroAdjacency/answer\",\"created\":\"20200603203531099\",\"modified\":\"20201122000409697\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"You get:\\n\\n<$set name=\\\"wikipedia\\\" value=\\\"https://en.wikipedia.org/wiki/\\\">\\n\\t<<wikipedia>>Aardvark\\n</$set>\\n\\nThe reason this doesn't work is somewhat technical, but essentially, when TiddlyWiki is reading your wikitext and figuring out what output to produce, it processes the value of the variable in isolation, without its surrounding context. First, it looks at the contents of the variable `wikipedia` and sees that there's a complete link within it, so it displays the link. Then it comes back to processing the rest of the tiddler, where it sees the text `Aardvark`, so it displays that text. It never looks at them together, the way you might with your sensible human eyes, so it never realizes this could form one link. We'll discuss this in detail in [[Text Substitution]].\\n\\nThis applies not only to variables but also to macros (and [[transclusions|Transclusions]], when we get to those).\"},\"Ex:MacroCallAsParameter\":{\"title\":\"Ex:MacroCallAsParameter\",\"complete\":\"\",\"created\":\"20200603222900757\",\"length\":\"m\",\"modified\":\"20210409194829943\",\"origin\":\"The Finer Points of Macros\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Rewrite the example in //The `$macrocall` widget can take variables as parameters// to call a macro `animalLinkText` to get the value of the `linkText` parameter to the `wikipediaLink` macro. In other words, replace the `<<linktext>>` variable that's currently there with a macro.\\n\\nThe `animalLinkText` macro should take a letter as a parameter and output the text `An animal which begins with {LETTER}`, where `{LETTER}` is the parameter passed. Update the example to display the appropriate link text for each of the three animals.\"},\"Ex:MacroCallAsParameter/answer\":{\"title\":\"Ex:MacroCallAsParameter/answer\",\"created\":\"20200603223249332\",\"modified\":\"20210409195220207\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{Sn:AnimalLinkText||MagicSnippet}}\\n\\nYour choice of parameter name (`initialLetter` in my version) makes no functional difference as long as you use the same name in the parameter list and in the body of the macro. But it's best to name the parameter in a way that carefully describes what you expect it to contain -- don't call it `something` or `x`, for example -- to make life easier on yourself in the future if you have to reread your macro.\"},\"Ex:MacroPosition\":{\"title\":\"Ex:MacroPosition\",\"created\":\"20200603211135898\",\"length\":\"m\",\"modified\":\"20210130174509427\",\"origin\":\"Macros\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Try referring to the `wikipediaLink` macro //before// defining it. What happens? What about if you put some arbitrary text before the macro definition that doesn't include a call to `wikipediaLink`?\"},\"Ex:MacroPosition/answer\":{\"title\":\"Ex:MacroPosition/answer\",\"created\":\"20200603211145810\",\"modified\":\"20210818172448412\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In either case, you get ugly and useless output:\\n\\n{{Sn:TextBeforeMacro||MagicSnippet}}\\n\\nPragmas, including `\\\\define`, have to be the very first thing in a tiddler (except for other pragmas). If anything else at all comes before them (except [[comments|Comments]]), they're treated as normal text.\"},\"Ex:MailMerge\":{\"title\":\"Ex:MailMerge\",\"created\":\"20201122235410268\",\"length\":\"h\",\"modified\":\"20210130175005982\",\"origin\":\"Supplemental Exercises\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Implement a mail merge in TiddlyWiki. Without writing JavaScript, you cannot actually send emails from TiddlyWiki, but you can produce a list of `mailto:` links that, when clicked, each open a new email in your email program with the email address, subject, and body for that recipient pre-filled. For low-volume tasks, this might be good enough.\\n\\nOn the tiddler that implements the merge, you should be able to fill in fields that provide a filter for contact tiddlers you want to send the message to, and some kind of template tiddler that uses a variable or a setting of the current tiddler to substitute in values that change.\\n\\nYou'll need to URL-encode the subject and body and put it into the link, which TiddlyWiki has a `encodeuri[]` filter operator to do. See https://en.wikipedia.org/wiki/Mailto for details of the mailto: URI structure; essentially, you want to produce links that look like this:\\n\\n```\\nmailto:whoever@example.com?subject=TheSubject&body=TheBodyOfTheEmail\\n```\\n\\n…where both `TheSubject` and `TheBodyOfTheEmail` are URL-encoded.\\n\\n''Warning'': This is well known in the community as a complex task that demands excellent knowledge of macros, filters, transclusions, and how they relate. It is harder than it looks, and even experienced users will find it challenging. That said, it's a great final exercise after reading this book, and it feels good to crack it!\\n\\n//Hint//: You will need the `$wikify` widget.\\n\"},\"Ex:MailMerge/answer\":{\"title\":\"Ex:MailMerge/answer\",\"created\":\"20201122235533944\",\"modified\":\"20220103170507084\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Most of the supplemental exercises don't have answers, but I can't pose an exercise this tricky without proving that I can implement it! There are almost certainly many, many other ways to achieve the same thing, some of them probably better.\\n\\nHere's a basic version which uses three tiddlers. It doesn't support multiple recipients on an email, cc:, bcc:, making substitutions in the subject of the email, HTML formatting, special characters requiring URL encoding in the email address, or probably a few other things, but it should satisfy the definition of “mail merge” and so do fine for explanatory purposes.\\n\\nFirst, the `MailMergeTemplate`. This is specific to the exact mail merge that you're trying to do, and you might have many of them in your wiki and create new ones on the fly. It contains the body of the email, plus transclusions needed to fill in the dynamic parts. It expects the contact to whom the message is being sent to be the current tiddler. Here's an example email:\\n\\n```html\\nHi {{!!title}},\\n\\nThis is an email to let you know that you've screwed up and owe me $20. Any questions, please contact your boss, {{!!manager}}.\\n\\nThanks much,\\n\\nThe Management\\n```\\n\\nNotice that, since this template is arbitrary wikitext, while in this sample we've only transcluded fields that are directly on the contact tiddler, we could also call macros, transclude the values of contact fields through templates, transclude filter outputs, or even use widgets, if we needed to build a more complex message.\\n\\nNext is the `MailMergeTemplateReader`. The purpose of this tiddler is to take two variables, `templateName` and `merger`, representing the `MailMergeTemplate` to be used and the contact which is being used for this iteration of the mail merge, and output the body text of the email. It should be possible to avoid using this intermediate tiddler, but life is easier with it.\\n\\n```html\\n\\\\define doTransclude() {{$(merger)$||$(templateName)$}}\\n\\n<<doTransclude>>\\n```\\n\\nNote that this tiddler, unlike the actual `templateName` template, does //not// need to be transcluded as a template; it can just be transcluded as a normal tiddler as long as the variables are defined. This will be useful in a moment.\\n\\nFinally, the big kahuna, `MailMerge`. Here it is in one chunk, and then afterwards we'll take it piece by piece.\\n\\n```html\\n\\\\define concat() mailto:$(contactEmail)$?subject=$(mailtoSubject)$&body=$(bodyPart)$\\n\\nFilter for Contacts: <$edit-text tiddler=\\\"$:/temp/mailmergefilter\\\" tag=\\\"input\\\" default=\\\"\\\"/>\\n\\nTemplate: <$edit-text tiddler=\\\"$:/temp/mailmergetemplate\\\" tag=\\\"input\\\" default=\\\"\\\"/>\\n\\nSubject: <$edit-text tiddler=\\\"$:/temp/mailmergesubject\\\" tag=\\\"input\\\" default=\\\"\\\"/>\\n\\n<table>\\n  <tr>\\n    <th>Contact</th>\\n    <th>Address</th>\\n    <th>Link</th>\\n  </tr>\\n<$list filter={{$:/temp/mailmergefilter}}>\\n  <tr>\\n  <td>\\n    {{!!title}}\\n  </td>\\n  <td>\\n    {{!!email}}\\n  </td>\\n  <td>\\n    <$let\\n      contactEmail={{!!email}}\\n      merger=<<currentTiddler>>\\n      templateName={{$:/temp/mailmergetemplate}}\\n      mailtoSubject={{$:/temp/mailmergesubject}}>\\n    <$wikify name=wikified output=formattedtext text={{MailMergeTemplateReader}}>\\n    <$set name=bodyPart value={{{ [<wikified>trim[]encodeuri[]] }}}>\\n\\n      <a class=\\\"tc-tiddlylink-external\\\" href=<<concat>>>Email</a>\\n\\n    </$set>\\n    </$wikify>\\n    </$let>\\n\\n  </td>\\n  </tr>\\n</$list>\\n</table>\\n```\\n\\nLet's break this down.\\n\\n```html\\n\\\\define concat() mailto:$(contactEmail)$?subject=$(mailtoSubject)$&body=$(bodyPart)$\\n```\\n\\nThis macro will put together the actual mailto link from its constituent parts, the contact email, the subject, and the body.\\n\\n```html\\nFilter for Contacts: <$edit-text tiddler=\\\"$:/temp/mailmergefilter\\\" tag=\\\"input\\\" default=\\\"\\\"/>\\n\\nTemplate: <$edit-text tiddler=\\\"$:/temp/mailmergetemplate\\\" tag=\\\"input\\\" default=\\\"\\\"/>\\n\\nSubject: <$edit-text tiddler=\\\"$:/temp/mailmergesubject\\\" tag=\\\"input\\\" default=\\\"\\\"/>\\n```\\n\\nThis will let the user define what mail merge is to be carried out: who the recipients are (as a filter), what template to use for the body of the message, and what the subject should be.\\n\\n```html\\n<table>\\n  <tr>\\n    <th>Contact</th>\\n    <th>Address</th>\\n    <th>Link</th>\\n  </tr>\\n```\\n\\nStart creating a pretty table for the links, including the contacts' names and email addresses so we can quickly check them and make sure they're what we expected.\\n\\n```html\\n<$list filter={{$:/temp/mailmergefilter}}>\\n  <tr>\\n  <td>\\n    {{!!title}}\\n  </td>\\n  <td>\\n    {{!!email}}\\n  </td>\\n```\\n\\nFilling in the first two columns is quite straightforward. Note that the list is populated by the filter stored in the temp tiddler associated with the input box the user typed the filter into.\\n\\n```html\\n  <td>\\n    <$let\\n      contactEmail={{!!email}}\\n      merger=<<currentTiddler>>\\n      templateName={{$:/temp/mailmergetemplate}}\\n      mailtoSubject={{$:/temp/mailmergesubject}}>\\n```\\n\\nNow we're into the complicated table cell, where the mailto link is put together. First, we need to set a few variables:\\n\\n* The `contactEmail` (the address we're sending this message to, used by the `concat` macro to build the link)\\n* The `merger` (the tiddler which should be used to fill out the body template, used by the `MailMergeTemplateReader`)\\n* The `templateName` (the template which will be filled out, again populated from the user's temp tiddler, used by the `MailMergeTemplateReader`)\\n* The `mailtoSubject` (the subject which the user filled in, used by the `concat` macro to build the link)\\n\\n```html\\n<$wikify name=wikified output=formattedtext text={{MailMergeTemplateReader}}>\\n```\\n\\nHere's the magic. We've seen `$wikify` at least once before, when we [[rendered a small excerpt|Ex:LinkedTiddlerExcerpt]] of various tiddlers as part of [[Creating a List of Links and Backlinks]]. This takes the wikitext of `MailMergeTemplateReader` and converts it into HTML output, making variable substitutions and transclusions just as if TiddlyWiki was displaying the tiddler on the screen. This output is then downconverted to `formattedtext` (text that's not in full HTML, but includes nice things like line breaks). Because of our work in `MailMergeTemplateReader` and the variables we set in the previous snippet, the output contains the appropriate transcluded values for the specific contact being treated in this row of the table (that is, the values have been \\\"merged\\\"). We store this output in the variable `wikified`.\\n\\n```html\\n<$set name=bodyPart value={{{ [<wikified>trim[]encodeuri[]] }}}>\\n```\\n\\nWe trim any spaces or line breaks off the beginning and end of our wikified text and URL-encode it, which makes it turn into a bunch of funny percent signs and weird characters that your email program will know how to decode into a message.\\n\\n```html\\n<a class=\\\"tc-tiddlylink-external\\\" href=<<concat>>>Email</a>\\n```\\n\\nLastly, we create the link using the `concat` macro, which reads from all the variables we have set so far and smashes them together (concatenates them) to create link text.\\n\\n```html\\n  </$set>\\n  </$wikify>\\n  </$let>\\n\\n  </td>\\n  </tr>\\n</$list>\\n</table>\\n```\\n\\nAnd we have a few widgets to close.\\n\"},\"Ex:MainSearchBoxBinding\":{\"title\":\"Ex:MainSearchBoxBinding\",\"created\":\"20210107234956443\",\"length\":\"m\",\"modified\":\"20210130174511358\",\"origin\":\"Buttons and Input Widgets\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Figure out what tiddler and field the main search box in the sidebar is bound to.\"},\"Ex:MainSearchBoxBinding/answer\":{\"title\":\"Ex:MainSearchBoxBinding/answer\",\"created\":\"20210107235020864\",\"modified\":\"20210418160148065\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The answer is the `text` field of `$:/temp/search`. (You may also have found `$:/temp/search/input`, which is an auxiliary tiddler used for the `keyboard-driven-input` that handles the autocomplete functions of the search box, and often contains the same text.)\\n\\nThe easiest way to find this answer is to type a weird word in the search box that you won't find anywhere else (e.g., `oobleckblargle`), then open up Advanced Search and search for the same word on the `System` tab. The tiddler will appear in the list.\"},\"Ex:MakeGlobalMacros\":{\"title\":\"Ex:MakeGlobalMacros\",\"created\":\"20200718022013037\",\"length\":\"m\",\"modified\":\"20210130174512870\",\"origin\":\"Global Macros\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Find the `wikipediaLink` and `ticketLink` macros we created in the [[The Finer Points of Macros]] section and turn them into global macros, creating one or more system tiddlers under a user folder to house them (e.g., you could put both in `$:/yournamehere/LinkMacros`, or put one in `$:/yournamehere/macros/Wikipedia`). \\n\\nRemove the original macro definitions from the individual tiddlers and try calling the macros from a few different tiddlers to make sure it works.\"},\"Ex:ManagerField\":{\"title\":\"Ex:ManagerField\",\"created\":\"20200603115339849\",\"length\":\"s\",\"modified\":\"20210130174514831\",\"origin\":\"Reviewing the Basics\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"We chose to use a field to keep track of employees' managers. List at least two other ways we could have chosen to do this, and some advantages and disadvantages of each.\"},\"Ex:ManagerField/answer\":{\"title\":\"Ex:ManagerField/answer\",\"created\":\"20200603115947939\",\"length\":\"s\",\"modified\":\"20200603210259360\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"* We could write \\\"Jane Doe's manager is ChrisSmith\\\" in Jane's tiddler.\\n** //Advantages//: Simple and straightforward.\\n** //Disadvantages//: The only thing TiddlyWiki will know about the relationship between Jane and Chris is that they are linked. It doesn't know Chris is Jane's manager.\\n\\n* We could link to the person's manager within the body text, and then tag the manager `Manager`.\\n** //Advantages//: Similarly easy to create. But this time, TiddlyWiki has a vague conception that Chris is Jane's manager that we can query for.\\n** //Disadvantages//: The relationship we've defined is really that \\\"Jane is linked to Chris, who is a manager.\\\" A manager is unlikely to directly manage //all// other employees of the company unless it's a very small company. Thus, if we refer to the manager in the tiddler of a contact who is not a direct report, it will look like they are a direct report.\\n\\n* We could tag Jane Doe with a ChrisSmith tag.\\n** //Advantages//: Easy and most semantically accurate of these alternatives. As we'll see in a future chapter, we can automatically create a hierarchical (\\\"table of contents\\\") view of managers and their employees.\\n** //Disadvantages//: Creates a lot of extra tags. TiddlyWiki understands the relationship to be something like \\\"Jane is a member of Chris['s team],\\\" which is more precise than a link but less precise than a \\\"manager\\\" field.\"},\"Ex:MeaninglessSuffix\":{\"title\":\"Ex:MeaninglessSuffix\",\"created\":\"20201230213722534\",\"length\":\"m\",\"modified\":\"20210130174516866\",\"origin\":\"Anatomy of Filter Steps\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"What happens if you add a suffix that doesn't have any meaning to a filter operator, such as `tag` or `title`?\"},\"Ex:MeaninglessSuffix/answer\":{\"title\":\"Ex:MeaninglessSuffix/answer\",\"created\":\"20201230213742844\",\"modified\":\"20201230213812364\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Nothing -- if the filter operator doesn't support suffixes, or the suffix is optional, the unexpected suffix is simply ignored.\"},\"Ex:MeetingInformation\":{\"title\":\"Ex:MeetingInformation\",\"created\":\"20200718032652074\",\"length\":\"s\",\"modified\":\"20210207183158296\",\"origin\":\"The View Template\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Put the `MeetingInformationTemplate` on meetings globally as well.\"},\"Ex:MeetingInformation/answer\":{\"title\":\"Ex:MeetingInformation/answer\",\"created\":\"20200718032732675\",\"modified\":\"20210817202054114\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Add to some tiddler tagged $:/tags/ViewTemplate, such as `$:/yourname/TiddlerTypeTemplates/Meeting`:\\n\\n```html\\n<$list filter=\\\"[all[current]tag[Meeting]]\\\">\\n\\n  {{||MeetingInformationTemplate}}\\n\\t\\n</$list>\\n```\\n\\n(The blank lines around `{{||MeetingInformationTemplate}}` may or may not be required -- it's required if the template contains //only// a wikitext table, or it won't be recognized [[as a separate block|Block Mode and Inline Mode]].)\"},\"Ex:MeetingListWithoutCurrentTiddler\":{\"title\":\"Ex:MeetingListWithoutCurrentTiddler\",\"complete\":\"\",\"created\":\"20200605152806072\",\"length\":\"s\",\"modified\":\"20210409202939804\",\"origin\":\"Templates and the Current Tiddler\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Modify the `MeetingList` so that it does not use the variable reference `<<currentTiddler>>` but has identical functionality.\\n\\n//Hint//: Try transcluding a field.\"},\"Ex:MeetingListWithoutCurrentTiddler/answer\":{\"title\":\"Ex:MeetingListWithoutCurrentTiddler/answer\",\"created\":\"20200605152841532\",\"modified\":\"20210327155915576\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<ul>\\n\\t<$list filter=\\\"[tag[Meeting]!sort[at]]\\\">\\n\\t\\t<li><$link to={{!!title}}>{{!!title}}</$link></li>\\n\\t</$list>\\n</ul>\\n```\\n\\nIf you happened to remember from an [[earlier exercise|Ex:LinkPattern/answer]] that the `$link` widget creates a link to the current tiddler if you don't give it any attributes or body text at all, you could also just say this:\\n\\n```html\\n<ul>\\n\\t<$list filter=\\\"[tag[Meeting]!sort[at]]\\\">\\n\\t\\t<li><$link /></li>\\n\\t</$list>\\n</ul>\\n```\"},\"Ex:MeetingOrdering\":{\"title\":\"Ex:MeetingOrdering\",\"created\":\"20200608023312103\",\"length\":\"m\",\"modified\":\"20210409135454496\",\"origin\":\"Ordering Tiddlers\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create several more meeting tiddlers under the `OnboardingHr` tag, then try dragging and dropping them around using the tag pill list. Have the `OnboardingProcess` tiddler open as you do so, so you can see the effects on the table of contents.\"},\"Ex:MeetingOrderingByMacro\":{\"title\":\"Ex:MeetingOrderingByMacro\",\"created\":\"20210327155150388\",\"length\":\"m\",\"modified\":\"20210327155144906\",\"origin\":\"Ordering Tiddlers\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Repeat the [[previous exercise|Ex:MeetingOrdering]] using a `<<list-links-draggable>>` macro of the form described in this section, inserted within the `OnboardingHr` tiddler.\"},\"Ex:MeetingsToday\":{\"title\":\"Ex:MeetingsToday\",\"created\":\"20200717221603330\",\"length\":\"M\",\"modified\":\"20210410191402372\",\"origin\":\"Tabs\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create a tiddler named `Today` and put a set of vertically arranged tabs on it showing all meetings that are happening on the current day (i.e., whose `at` field describes any time today) and excluding drafts.\\n\\nDon't worry if everything doesn't show up right -- we'll talk about why that is and how to fix it in the exercises to follow. You're done with this exercise if you can get the correct set of tabs to appear in the list.\\n\\n* You can get today's date with the built-in `now` macro, like `<<now YYYY0MM0DD0hh>>`. (If you're wondering why we include the hours, we'll discuss the potential for day rollover when at negative UTC offsets in [[Working with Dates]].)\\n* You'll need to look up several new filter operators in the [[list|https://tiddlywiki.com/#Filter Operators]].\"},\"Ex:MeetingsToday/answer\":{\"title\":\"Ex:MeetingsToday/answer\",\"created\":\"20200717222830000\",\"modified\":\"20210410190508516\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<$set name=today value=<<now YYYY0MM0DD0hh>>>\\n  <<tabs \\\"[tag[Meeting]sameday:at<today>!is[draft]]\\\" class:\\\"tc-vertical\\\">>\\n</$set>\\n```\"},\"Ex:MethodsOfTransclusion\":{\"title\":\"Ex:MethodsOfTransclusion\",\"created\":\"20200605153225001\",\"length\":\"m\",\"modified\":\"20210130174525925\",\"origin\":\"Templates and the Current Tiddler\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create a new tiddler called `JaneTransclusion`. Transclude the content of the `JaneDoe` tiddler here -- but without writing the text `{{JaneDoe}}` anywhere in the tiddler. Once you do this successfully, find at least one other way to do it. (The answer will show you seven ways that use only tools we've already seen, so there is no shortage of options.)\\n\\n//Tip//: If the information about Jane ends up all in one line, try adding some blank lines to your wikitext.\"},\"Ex:MethodsOfTransclusion/answer\":{\"title\":\"Ex:MethodsOfTransclusion/answer\",\"created\":\"20200605153253139\",\"modified\":\"20220103170432924\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"This one's fun because TiddlyWiki gives you so many different ways to skin this cat. Here's perhaps the most obvious one:\\n\\n```html\\n<$set name=currentTiddler value=JaneDoe>\\n\\n  {{!!text}}\\n\\n</$set>\\n```\\n\\nYou may have noticed that you had to put the blank lines before and after `{{!!text}}` or the formatting ended up all funny. Back in the section on [[dynamic lists|Your First Dynamic List]], we noted that there are cases where whitespace does matter with widgets and HTML. This is one of them, and it's due to a distinction in TiddlyWiki and HTML between //block mode// and //inline mode//. We'll [[talk more about these modes later|Block Mode and Inline Mode]] -- for now, just remember that if everything gets all squashed up in one line, you're probably stuck in inline mode, and you can get out of it by putting a blank line before and after the thing that's getting squashed.\\n\\nHere are several more possibilities:\\n\\n```html\\n<$list filter=\\\"[[JaneDoe]]\\\">\\n\\n  {{!!text}}\\n\\n</$list>\\n```\\n\\n```html\\n\\\\define janedoe(janesName)\\n  {{$janesName$}}\\n\\\\end\\n\\n<<janedoe JaneDoe>>\\n```\\n\\n```html\\n<$list filter=\\\"[[JaneDoe]get[text]]\\\">\\n\\n  <<currentTiddler>>\\n\\n</$list>\\n```\\n\\nAnother way would be to create another tiddler, call it `JaneDoeStandin`, put `{{JaneDoe}}` in //that// tiddler, and then transclude `{{JaneDoeStandin}}`.\\n\\n`{{JaneDoe!!text}}` is technically not writing `{{JaneDoe}}`, though this solution seems a bit cheap!\\n\\nSimilarly but a little bit more cleverly, `{{JaneDoe||JaneDoe}}` (transclude the tiddler `JaneDoe` with the current tiddler as `JaneDoe`) means the same thing as `{{JaneDoe}}`. (`{{||JaneDoe}}` won't work, though, because that makes the current tiddler `JaneTransclusion`, and the `ContactInformationTemplate` transcluded within `JaneDoe` depends on the current tiddler being `JaneDoe`.)\\n\\nHere are two other ways that use widgets we haven't seen yet:\\n\\n```html\\n<$let currentTiddler=JaneDoe>\\n\\n  {{!!text}}\\n\\n</$let>\\n```\\n\\n```html\\n<$transclude tiddler=JaneDoe mode=block />\\n```\\n\\nIf you get bored, see how many other options you can come up with! I'm not at the end of my own ideas by any means.\\n\"},\"Ex:MoreSidebarTabs\":{\"title\":\"Ex:MoreSidebarTabs\",\"created\":\"20201123000253967\",\"length\":\"M\",\"modified\":\"20210130175020856\",\"origin\":\"Supplemental Exercises\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Come up with some new sections that would be useful to have on the //More// sidebar tab and add them in.\"},\"Ex:MoveContactInformation\":{\"title\":\"Ex:MoveContactInformation\",\"created\":\"20200718031841599\",\"length\":\"m\",\"modified\":\"20210130174521062\",\"origin\":\"The View Template\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Move the contact information above the rest of the tiddler's body, rather than below it.\"},\"Ex:MoveContactInformation/answer\":{\"title\":\"Ex:MoveContactInformation/answer\",\"created\":\"20200718031911364\",\"modified\":\"20210418135516766\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"You need to get your `$:/yourname/TiddlerTypeTemplates/Contact` tiddler before $:/core/ui/ViewTemplate/body in the `list` field of [[$:/tags/ViewTemplate]]. The easiest way to do this is to click the tag pill for [[$:/tags/ViewTemplate]] where it appears on your `$:/yourname/TiddlerTypeTemplates/Contact` tiddler and drag and drop the entries into the proper position.\\n\\nYou could also manually edit the `list` field, or even create a `<<list-links-draggable>>` or `<<list-tagged-draggable>>` macro to reorder the members of the tag.\"},\"Ex:MultipleTransclusion\":{\"title\":\"Ex:MultipleTransclusion\",\"created\":\"20200604022429000\",\"length\":\"s\",\"modified\":\"20210130174533888\",\"origin\":\"Transclusions\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"What happens if you transclude a tiddler that contains transclusions?\"},\"Ex:MultipleTransclusion/answer\":{\"title\":\"Ex:MultipleTransclusion/answer\",\"created\":\"20200604022456155\",\"modified\":\"20210409200940104\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Generally, this works the way you would hope -- first TiddlyWiki renders the “furthest down” tiddler, then it moves one level up and includes that content in that tiddler, and so on until it comes to the “top-level” transclusion.\\n\\nThere are some edge cases, which mostly involve the complexities of TiddlyWiki's concept of the //current tiddler//. We'll talk about the current tiddler in the [[next section|Templates and the Current Tiddler]].\"},\"Ex:NamingConventionImagination\":{\"title\":\"Ex:NamingConventionImagination\",\"created\":\"20200603182330605\",\"length\":\"m\",\"modified\":\"20210504023335969\",\"origin\":\"Naming Conventions\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Identify a wiki you could imagine yourself creating, then write a set of naming conventions for it. These should include:\\n\\n* How exactly titles should be capitalized, including how acronyms and other weirdnesses will be handled.\\n* Whether you use CamelCase titles, and if so, what you do if there's only one word or it otherwise doesn't match the capitalization rules required to create a link.\\n* Any special rules that seem appropriate (e.g., names of sources end with their publication date or the word `Source`).\\n\\nYou can refer to the [[naming conventions for my Zettelkasten|https://zettelkasten.sorenbjornstad.com/#OurNamingConventions]] for an example.\"},\"Ex:NamingOldNotes\":{\"title\":\"Ex:NamingOldNotes\",\"complete\":\"\",\"created\":\"20200603181434311\",\"length\":\"m\",\"modified\":\"20210130174537256\",\"origin\":\"Tiddler Titles\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Dig up some old notes you've written for yourself, in any format, and identify:\\n\\n* How you would divide them into tiddlers (we'll talk more about this later, but you know enough to take a crack at it now).\\n* What you would title each of those tiddlers.\"},\"Ex:NestedSets\":{\"title\":\"Ex:NestedSets\",\"created\":\"20201121235627600\",\"length\":\"s\",\"modified\":\"20210130174538857\",\"origin\":\"Variables\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Consider the following code:\\n\\n```html\\n<$set name=\\\"variable\\\" value=\\\"1\\\">\\n    <<variable>>\\n    <$set name=\\\"variable\\\" value=\\\"2\\\">\\n        <<variable>>\\n    </$set>\\n    <<variable>>\\n</$set>\\n```\\n\\nWhat do you think happens at each reference to `<<variable>>`? Check your answers by pasting this into a new tiddler.\"},\"Ex:NestedSets/answer\":{\"title\":\"Ex:NestedSets/answer\",\"created\":\"20201121235653529\",\"modified\":\"20210409192628067\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"This prints `1 2 1`. Scopes //nest//; a variable takes the value of the innermost `$set` widget available (or nothing if the variable reference isn't inside any `$set` widget referring to that variable name at all). Later on, we'll learn that this even applies across multiple tiddlers.\"},\"Ex:NewContactButton\":{\"title\":\"Ex:NewContactButton\",\"created\":\"20200822191934331\",\"length\":\"s\",\"modified\":\"20210130174540692\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create a button that creates a new contact. The created tiddler should contain the four fields we've been using, `email`, `family`, `manager`, and `phone`, but empty ready for the user to fill in; it should also have a title of `New Contact` and be tagged with `Contact`.\"},\"Ex:NewContactButton/answer\":{\"title\":\"Ex:NewContactButton/answer\",\"created\":\"20200822192038282\",\"modified\":\"20210109215025269\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n\\\\define newContact()\\n\\t<$action-sendmessage\\n\\t\\t$message=\\\"tm-new-tiddler\\\"\\n\\t\\ttitle=\\\"New Contact\\\"\\n\\t\\ttags=\\\"Contact\\\"\\n\\t\\temail=\\\"\\\"\\n\\t\\tfamily=\\\"\\\"\\n\\t\\tphone=\\\"\\\"\\n\\t\\tmanager=\\\"\\\"/>\\n\\\\end\\n\\n<$button actions=<<newContact>>>\\n  New Contact\\n</$button>\\n```\"},\"Ex:NewMeetingButton\":{\"title\":\"Ex:NewMeetingButton\",\"created\":\"20200822192223876\",\"length\":\"m\",\"modified\":\"20210418161437467\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create a similar button for a new meeting. The `at` field should be populated with the current time in the standard TiddlyWiki date/time format, down to the minute (i.e., the seconds and milliseconds should be zero).\"},\"Ex:NewMeetingButton/answer\":{\"title\":\"Ex:NewMeetingButton/answer\",\"created\":\"20200822192244439\",\"modified\":\"20220103160317608\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n\\\\define newMeetingAction()\\n<$action-sendmessage\\n\\t$message=\\\"tm-new-tiddler\\\"\\n\\ttitle=\\\"New Meeting\\\"\\n\\ttags=\\\"Meeting\\\"\\n\\tat=<<now [UTC]YYYY0MM0DD0hh0mm00000>>\\n\\tparticipants=\\\"\\\"/>\\n\\\\end\\n\\n<$button actions=<<newMeetingAction>>>\\n  New Meeting\\n</$button>\\n```\\n\\nNote the use of `[UTC]` in the format string for the `now` macro. If you don't tell TiddlyWiki to use UTC, the time will be filled into the `at` field in your local time zone. Since TiddlyWiki assumes that date fields contain UTC timestamps, the time will get “converted” again when you display it, yielding an incorrect time (off by whatever your UTC offset is).\\n\\nYou can hop ahead to [[Working with Dates]] if you'd like to learn more about this.\"},\"Ex:NewWiki\":{\"title\":\"Ex:NewWiki\",\"created\":\"20201123000222822\",\"length\":\"h\",\"modified\":\"20210130175019161\",\"origin\":\"Supplemental Exercises\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create and customize a new wiki for some purpose, whether it's useful for you or not. Some ideas that might get you thinking about different ways to organize data:\\n\\n* A mini-encyclopedia for a topic you know a lot about.\\n* A recipe book.\\n* A place to plan a book or other large creative project.\\n* A catalog for your music or book collection.\"},\"Ex:NonexistentTiddlerFilter\":{\"title\":\"Ex:NonexistentTiddlerFilter\",\"created\":\"20201230212410211\",\"length\":\"m\",\"modified\":\"20210130174542977\",\"origin\":\"Anatomy of Filter Steps\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"What do you think happens if you use the `title` constructor to add a tiddler that does not exist to the pipeline?\\n\\nCheck your answer by running a filter in TiddlyWiki.\"},\"Ex:NonexistentTiddlerFilter/answer\":{\"title\":\"Ex:NonexistentTiddlerFilter/answer\",\"created\":\"20201230212441389\",\"modified\":\"20210409161640155\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"This works fine: the nonexistent tiddler name is passed through to any following filter steps and can be manipulated just like tiddlers that do exist. Of course, some filter steps will not make much sense in this case (`tag` and `links` will never return any results, for instance).\\n\\nLater on, we'll see that we can use filters to do things like manipulate text or do math. The inputs in this case will often be arbitrary strings of text or numbers rather than tiddler names, but many filter operators will still work great.\\n\\nYou can use the `is` operator with the `tiddler` parameter to filter out tiddlers that don't exist. For instance, if you said `[title[I Don't Exist]is[tiddler]]`, you would get no results, since `I Don't Exist` is not a tiddler.\"},\"Ex:OnboardingPeopleFirst\":{\"title\":\"Ex:OnboardingPeopleFirst\",\"created\":\"20210130215824441\",\"length\":\"s\",\"modified\":\"20210130220046009\",\"origin\":\"Ordering Tiddlers\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Use the `list-before` field to make the `OnboardingPeople` tiddler appear first in the table of contents you created within the `OnboardingProcess` tiddler in the previous section.\"},\"Ex:OnboardingPeopleFirst/answer\":{\"title\":\"Ex:OnboardingPeopleFirst/answer\",\"created\":\"20210130215932504\",\"modified\":\"20210130220004631\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Set `list-before` on `OnboardingPeople` to `OnboardingHr`. (Note that the appropriate value is not `HR`, even though if you did [[one of the last exercises|Ex:TocCaptions]] in the previous section, that's what shows up in the table of contents. The caption is only used for display; you still have to specify the title in all other contexts.)\"},\"Ex:PaletteInvestigation\":{\"title\":\"Ex:PaletteInvestigation\",\"created\":\"20200718202138869\",\"length\":\"m\",\"modified\":\"20210130174544781\",\"origin\":\"Creating a List of Links and Backlinks\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In the stylesheet I provided, you may have noticed there is a macro call: `<<colour muted-foreground>>`.  This macro is used to retrieve a color from the palette. The benefit is that if you change the palette of your wiki, the color of the excerpt text will change to something appropriate as well.\\n\\nFind the definition of the `colour` macro and figure out how the CSS color value (it'll be a `#` and six numbers and letters) is retrieved.\"},\"Ex:PaletteInvestigation/answer\":{\"title\":\"Ex:PaletteInvestigation/answer\",\"created\":\"20200718202204205\",\"modified\":\"20210418152036717\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The macro definition is found in `$:/core/macros/CSS`. (If you're American and don't appreciate the spelling `colour`, notice there is a `color` macro too that just calls `colour`!). The macro transcludes the tiddler named in `$:/palette` with this bit:\\n\\n```html\\n<$transclude tiddler={{$:/palette}} index=\\\"$name$\\\">\\n```\\n\\n`$:/palette` is a configuration tiddler managed by TiddlyWiki that contains the name of whichever palette you've currently selected in the control panel. If you then open up the palette named therein (e.g., `$:/palettes/GruvboxDark`), you'll see a [[data tiddler|Data Tiddlers]] listing the names of colors and their CSS values (or, sometimes, another substitution with the `<<colour>>` macro).\\n\\nIn the macro definition, you might wonder what's with all the other `$transclude` widgets:\\n\\n```html\\n<$transclude tiddler={{$:/palette}} index=\\\"$name$\\\">\\n  <$transclude tiddler=\\\"$:/palettes/Vanilla\\\" index=\\\"$name$\\\">\\n    <$transclude tiddler=\\\"$:/config/DefaultColourMappings/$name$\\\"/>\\n  </$transclude>\\n</$transclude>\\n```\\n\\nIn case the `$transclude` widget is not able to transclude the tiddler for some reason (e.g., it doesn't exist), then the contents of the widget are used as a //fallback// (more on this in [[Hiding and Showing Things]]). So if the palette isn't set, then the `Vanilla` palette is used, and if that's gone as well for some reason, a set of default mappings are used.\"},\"Ex:PreserveSecurityWithTextSubstitution\":{\"title\":\"Ex:PreserveSecurityWithTextSubstitution\",\"complete\":\"\",\"created\":\"20210207223713616\",\"length\":\"s\",\"modified\":\"20210409221714125\",\"origin\":\"Text Substitution\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Change the filter in [[Ex:BypassSecurityWithTextSubstitution]] so that it is not vulnerable to this kind of manipulation. (Of course, the user could still just edit the tiddler and remove the authentication altogether. TiddlyWiki is not a suitable environment when users need to have limited access.)\"},\"Ex:PreserveSecurityWithTextSubstitution/answer\":{\"title\":\"Ex:PreserveSecurityWithTextSubstitution/answer\",\"created\":\"20210207223742670\",\"modified\":\"20210207224241431\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Here's one way:\\n\\n{{Sn:AuthorizationUnbypass||MagicSnippet}}\"},\"Ex:PrettyWikipediaLink\":{\"title\":\"Ex:PrettyWikipediaLink\",\"complete\":\"\",\"created\":\"20200603203233591\",\"length\":\"m\",\"modified\":\"20210409193309339\",\"origin\":\"Macros\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"To create a pretty external link where the text differs from the URL, we can use the syntax `[[text|http://example.com]]`. Update the `wikipediaLink` macro to output a link that looks like [[Wikipedia: Aardvark|https://en.wikipedia.org/wiki/Aardvark]].\"},\"Ex:PrettyWikipediaLink/answer\":{\"title\":\"Ex:PrettyWikipediaLink/answer\",\"created\":\"20200603203254646\",\"modified\":\"20200603203639598\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n\\\\define wikipediaLink(articleName)\\n  [[Wikipedia: $articleName$|https://en.wikipedia.org/wiki/$articleName$]]\\n\\\\end\\n```\"},\"Ex:ProblematicTiddlerNames\":{\"title\":\"Ex:ProblematicTiddlerNames\",\"created\":\"20200603182411293\",\"length\":\"m\",\"modified\":\"20210130174548248\",\"origin\":\"Naming Conventions\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Explain what is potentially problematic about each of these tiddler names:\\n\\n# `Company Entry Doors`\\n# `Windows`\\n# `Tiddlywiki`\\n# `VisitingTheDMV`\\n# `Onboarding: Office chair selection`\\n\\nNone of these are necessarily //wrong// -- although they might be depending on your naming conventions -- but they each exhibit a possible danger we discussed above.\"},\"Ex:ProblematicTiddlerNames/answer\":{\"title\":\"Ex:ProblematicTiddlerNames/answer\",\"created\":\"20200603182441358\",\"modified\":\"20210819205515907\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"# This name may or may not follow your language's rules about title case.\\n# This name may be ambiguous: it could refer to the operating system made by Microsoft or to the pane of glass that lets light into your office.\\n# This name doesn't follow the official capitalization, `TiddlyWiki`, so you may not realize it's already in your wiki if you later try to link to `TiddlyWiki` and end up creating a duplicate tiddler.\\n# The capitalization has not been normalized to `VisitingTheDmv` as recommended.\\n# The process of office chair selection may be relevant in contexts outside onboarding, so including onboarding in the title may not be advisable.\"},\"Ex:QualifyMultipleCalls\":{\"title\":\"Ex:QualifyMultipleCalls\",\"created\":\"20210208023017971\",\"length\":\"s\",\"modified\":\"20220103170446227\",\"origin\":\"Qualification\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"What happens if you remove the `$let` widget and the `stateTiddlerName` variable from the above example and call `qualify` once every time that the name of the tiddler is needed?\"},\"Ex:QualifyMultipleCalls/answer\":{\"title\":\"Ex:QualifyMultipleCalls/answer\",\"created\":\"20210208023044281\",\"modified\":\"20210208022944809\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"It still works fine. This is because `qualify` doesn't generate a random number -- it [[hashes|https://en.wikipedia.org/wiki/Hash_function]] a string of all of the tiddlers that are parents of this bit of wikitext in the tree of active transclusions.\"},\"Ex:QuotedMacroCall\":{\"title\":\"Ex:QuotedMacroCall\",\"created\":\"20200603224209604\",\"length\":\"s\",\"modified\":\"20210409194800219\",\"origin\":\"The Finer Points of Macros\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Take the example //The $macrocall widget can take variables as parameters// and modify it so that the inner macro calls are surrounded in quotation marks, like so:\\n\\n{{Sn:QuotedMacroExpansion||$:/sib/Snippet/TiddlerAsWikitext}}\\n\\nWhat happens? Why do you think this happened?\"},\"Ex:QuotedMacroCall/answer\":{\"title\":\"Ex:QuotedMacroCall/answer\",\"created\":\"20200603224332671\",\"length\":\"s\",\"modified\":\"20210903004321832\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"You get links that look like this:\\n\\n{{Sn:QuotedMacroExpansion||MagicSnippet}}\\n\\nIn other words, TiddlyWiki did not expand the macro.\\n\\nPutting quotation marks around a macro call or variable reference passed to an HTML attribute makes it //literal// -- that is, TiddlyWiki doesn't try to look at it to see if it's a variable or macro call. This is very occasionally what you want, but usually it's a mistake.\\n\\nThe quotation marks should be omitted even if the macro call has spaces in it. So for some made-up macro `mymacro` with two parameters, this would the correct way to call it, even though it may look wrong at first glance:\\n\\n```html\\n<$macrocall $name=\\\"wikipediaLink\\\" linktext=<<mymacro attribute1 \\\"attribute two\\\">> articleName=Dingo/>\\n```\\n\"},\"Ex:RaffapKnowledgeTiddler\":{\"title\":\"Ex:RaffapKnowledgeTiddler\",\"autoinclude\":\"Reviewing the Basics\",\"created\":\"20200603025736756\",\"length\":\"s\",\"modified\":\"20210130174550736\",\"origin\":\"Reviewing the Basics\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Return to the Employee Information System tiddler and create a new knowledge tiddler for the Really Annoying Five-Factor Authentication Process. Use your imagination on what's involved!\"},\"Ex:RaffapReflection\":{\"title\":\"Ex:RaffapReflection\",\"autoinclude\":\"Reviewing the Basics\",\"created\":\"20200603030150268\",\"length\":\"m\",\"modified\":\"20210130174552637\",\"origin\":\"Reviewing the Basics\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Review what you wrote about the RAFFAP.\\n\\n* Did you write about anything or anyone you already have a tiddler for, and thus should link to?\\n* Are there any new concepts that should have their own tiddlers (or at least missing links)?\\n* Are there other contexts you would expect to want to retrieve the RAFFAP in which would suggest you should add certain tags to it?\\n\\nUpdate what you wrote accordingly.\"},\"Ex:ReadingDefaultMacros\":{\"title\":\"Ex:ReadingDefaultMacros\",\"created\":\"20200718022049665\",\"length\":\"m\",\"modified\":\"20210130174554368\",\"origin\":\"Global Macros\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Search for all tiddlers that currently contain global macros. Remember that most of these will be stored in shadow tiddlers, so you'll need to say you want to filter on shadow tiddlers to get any results.\\n\\nSpend a few minutes browsing through some of the tiddlers that come up and looking at some of the system macro definitions. You'll recognize some of the macros from previous chapters, and you should be able to understand a good portion of what's going on. There's no magic -- the built-in macros are simply wrapping up some complicated HTML and widgets for us to use in a convenient way, just like we would do when writing our own macros.\\n\\nYou'll have to edit each shadow tiddler to look at the definitions. Just click the discard-changes button when you're done so you don't mess anything up!\"},\"Ex:ReadingDefaultMacros/answer\":{\"title\":\"Ex:ReadingDefaultMacros/answer\",\"created\":\"20200718022221661\",\"modified\":\"20200718022252597\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In case you can't figure out the filter to use, it should be `[all[shadows]tag[$:/tags/Macro]].\"},\"Ex:RedATags\":{\"title\":\"Ex:RedATags\",\"created\":\"20200716023056742\",\"length\":\"m\",\"modified\":\"20210418134717626\",\"origin\":\"Multi-Run Filters\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Write a filter to find all tiddlers that do not link to a tiddler that has a tag which is both red and begins with the letter C, sorted by title in reverse alphabetical order.\\n\\nConsider a “red” tag to be one with a color code of `#ff0000`, as in [[Classifying Tags]].\\n\\nEnglish is terrible at expressing complicated conditions like this, so to be sure you read it right, here's the sentence decomposed hierarchically and written more precisely:\\n\\n* All tiddlers matching these criteria:\\n** The tiddler does not link to:\\n*** Another tiddler:\\n**** That has a tag:\\n***** Which is red (#ff0000)\\n***** The name of which begins with a capital letter C\\n* Sorted by title in reverse alphabetical order.\\n\\n//Tip 1//: The `prefix` operator returns items from its input whose title begins with a given string of text.\\n\\n//Tip 2//: The `is[]` filter step will find all (non-[[shadow|Shadow Tiddlers]]) tiddlers in the wiki.\\n\\nA quick way to test your answer is to add a link from a tiddler that appears in the output to any contact; the tiddler should disappear from the list since it's now linking to a tiddler that has a red tag whose name begins with C.\"},\"Ex:RedATags/answer\":{\"title\":\"Ex:RedATags/answer\",\"created\":\"20200716023335690\",\"modified\":\"20210418134703851\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```\\n[is[tiddler]]\\n-[prefix[C]color[#ff0000]tagging[]backlinks[]]\\n+[!sort[]]\\n```\\n\\nIf you want, you can get away with doing the sort //before// doing the second filter run, as part of the `[is[tiddler]]` run; since the second run only removes items, it won't disturb the order. The pattern shown above is more generally useful, though, since it works even after other ORs and ANDs.\"},\"Ex:RedTagsFilter\":{\"title\":\"Ex:RedTagsFilter\",\"created\":\"20200608014521722\",\"length\":\"m\",\"modified\":\"20210130174558529\",\"origin\":\"Classifying Tags\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Write a filter to find all tiddlers tagged with red tags. Make sure you figure out [[Ex:TagMetadataStorage]] first, or you won't have much luck.\\n\\n//Hint//: Review the //Tags// section of [[Common Filter Operators]].\"},\"Ex:RedTagsFilter/answer\":{\"title\":\"Ex:RedTagsFilter/answer\",\"created\":\"20200608014540307\",\"modified\":\"20200608014841522\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n[color[#ff0000]tagging[]]\\n```\\n\\nNote that, in theory, the first filter step `color[#ff0000]` could find other tiddlers that aren't tags and just so happen to have a `color` field set to `#ff0000`. However, this still gives the correct output because any tiddler that tags other tiddlers is by definition a tag, and `tagging[]` will ignore any input tiddler that doesn't tag at least one other tiddler.\"},\"Ex:RoundtimeMacro\":{\"title\":\"Ex:RoundtimeMacro\",\"created\":\"20200822194847240\",\"length\":\"M\",\"modified\":\"20210130174601176\",\"origin\":\"JavaScript Macros\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create a JavaScript macro called `roundtime` that rounds a TiddlyWiki-formatted timestamp to the nearest 15 minutes.\"},\"Ex:RoundtimeMacro/answer\":{\"title\":\"Ex:RoundtimeMacro/answer\",\"created\":\"20200822194914928\",\"modified\":\"20200822194933716\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Here's one version. I'm not a JavaScript developer, so there are probably easier ways to do this!\\n\\n```javascript\\n/*\\\\\\ntitle: roundtime\\ntype: application/javascript\\nmodule-type: macro\\n\\nRound TiddlyWiki-formatted times to the nearest 15 minutes\\n\\\\*/\\n\\n(function(){\\n\\\"use strict\\\";\\n\\nexports.name = \\\"roundtime\\\";\\nexports.params = [\\n\\t{name: \\\"timestamp\\\"}\\n];\\nexports.run = function(timestamp) {\\n    var hours = timestamp.substring(8, 10);\\n    var minutes = timestamp.substring(10, 12);\\n\\n    if (minutes < 8) {\\n        minutes = 0;\\n    } else if (minutes < 23) {\\n        minutes = 15;\\n    } else if (minutes < 38) {\\n        minutes = 30;\\n    } else if (minutes < 53) {\\n        minutes = 45;\\n    } else {\\n        minutes = 0;\\n        hours++;\\n    }\\n\\n    return timestamp.substring(0, 8) + hours + minutes + \\\"00000\\\";\\n};\\n\\n})();\\n```\\n\\n(If we wanted to dig into extracting seconds as well, we could round a bit more precisely. This is good enough for explanatory purposes!)\"},\"Ex:RubberDucking\":{\"title\":\"Ex:RubberDucking\",\"complete\":\"\",\"created\":\"20210121000751424\",\"length\":\"m\",\"modified\":\"20210206195909837\",\"origin\":\"When Things Go Wrong\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Locate a rubber duck or another appropriate object you can explain your TiddlyWiki problems to, and find the problem(s) with the following filter snippet by explaining to your chosen listener what it's doing. Check your answer by fixing the problem.\\n\\nThe goal of this filter is to display, in alphabetical order, the summaries of all tiddlers in this chapter, which are stored in their `description` fields.\\n\\n{{Sn:RubberDucking||MagicSnippet}}\"},\"Ex:RubberDucking/answer\":{\"title\":\"Ex:RubberDucking/answer\",\"created\":\"20210121000813997\",\"modified\":\"20210121001504559\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"There were three problems with this snippet:\\n\\n# The final `]` to close the filter run was left off.\\n# The `;` in `field:parent` should read `:`.\\n# The `sort[]` needs to come after the `get[description]` operator to meet the goal proposed above, or the tiddler titles (which you never see) are sorted, rather than their descriptions/summaries.\\n\\nA corrected version:\\n\\n{{Sn:RubberDuckingCorrected||MagicSnippet}}\"},\"Ex:SampleExercise\":{\"title\":\"Ex:SampleExercise\",\"complete\":\"\",\"created\":\"20210117001316615\",\"length\":\"m\",\"modified\":\"20210502172753605\",\"origin\":\"How to Use This Book\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Search the web to find the name of TiddlyWiki's original developer.\"},\"Ex:SampleExercise/answer\":{\"title\":\"Ex:SampleExercise/answer\",\"created\":\"20210117001453280\",\"modified\":\"20210123172912107\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Jeremy Ruston.\\n\\nAmong other places, you can find this answer [[in the TiddlyWiki documentation|https://tiddlywiki.com/#TiddlyWiki]], which we will unsurprisingly be seeing much more of as we continue through the book.\"},\"Ex:SearchExploration\":{\"title\":\"Ex:SearchExploration\",\"created\":\"20200603175700245\",\"length\":\"s\",\"modified\":\"20210130174618833\",\"origin\":\"Searching\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Try searching for a few more tiddlers you've created, both with keywords found in the title and keywords found in the body text.\"},\"Ex:SearchingInTransclusions\":{\"title\":\"Ex:SearchingInTransclusions\",\"created\":\"20200604020710211\",\"length\":\"s\",\"modified\":\"20210130174625225\",\"origin\":\"Transclusions\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In an [[exercise|Ex:JohnDoeSearch]] in the previous chapter, we observed that tiddlers referenced in fields did not appear in search. Now, however, we have transcluded these fields directly into the JaneDoe tiddler. Try searching for some of the text again (e.g., `ChrisSmith`). Has anything changed?\"},\"Ex:SearchingInTransclusions/answer\":{\"title\":\"Ex:SearchingInTransclusions/answer\",\"created\":\"20200604020731329\",\"modified\":\"20210409200335292\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"No, nothing has changed! Search only looks in the physical `title` and `text` fields of the tiddler. Transcluded content is not actually part of the text field of a tiddler -- TiddlyWiki only shows it there when you look at the tiddler -- so it doesn't show up in search, either.\\n\\nIf you search for //the transclusion itself// -- like, the part that looks like `{{JaneDoe}}` -- then you //will// find that. (But if you type the braces into the ordinary search bar, it doesn't like special characters and won't find anything. Type just `JaneDoe` and you'll find that any tiddler that transcludes `JaneDoe` shows up.)\"},\"Ex:SelectiveButtonDisplay\":{\"title\":\"Ex:SelectiveButtonDisplay\",\"created\":\"20200822192549292\",\"length\":\"m\",\"modified\":\"20210130174623441\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"You may have noticed, as you completed the above exercise, that the list of items that have the page controls tag is quite a lot longer than the buttons that currently appear on the toolbar. Explore your wiki to figure out how the buttons are selectively shown or hidden.\"},\"Ex:SelectiveButtonDisplay/answer\":{\"title\":\"Ex:SelectiveButtonDisplay/answer\",\"created\":\"20200822192613762\",\"modified\":\"20200822192625562\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The template `$:/core/ui/PageTemplate/pagecontrols` is responsible for actually rendering these controls. In here, you'll find, among other lines:\\n\\n```html\\n\\\\define config-title()\\n$:/config/PageControlButtons/Visibility/$(listItem)$\\n\\\\end\\n[...]\\n<$set name=\\\"hidden\\\" value=<<config-title>>>\\n<$list filter=\\\"[<hidden>!text[hide]]\\\" storyview=\\\"pop\\\" variable=\\\"ignore\\\">\\n[...]\\n```\\n\\nThus, if the tiddler `$:/config/PageControlButtons/Visibility/NameOfYourButtonTiddler` has content of `hide`, the button isn't transcluded onto the toolbar. Toggling the checkbox next to your button on the ''Tools'' tab of the sidebar will change the contents of this tiddler, thus hiding or showing it.\"},\"Ex:SelfTransclusion\":{\"title\":\"Ex:SelfTransclusion\",\"created\":\"20200604022607997\",\"length\":\"s\",\"modified\":\"20210130174634327\",\"origin\":\"Transclusions\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"What happens if you transclude a tiddler into itself?\"},\"Ex:SelfTransclusion/answer\":{\"title\":\"Ex:SelfTransclusion/answer\",\"created\":\"20200604022634202\",\"modified\":\"20210409201530771\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"A large red banner appears that says “Recursive transclusion error in transclude widget.” (If you're in preview mode creating a new tiddler, the error won't appear until you save the tiddler under some conditions.) This is a rather cryptic error message, but if you remember what it means, the cause of the error is usually obvious once you start looking.\\n\\nAs we move forward into [[templates|Templates and the Current Tiddler]], you will sometimes see this error on a template -- in that case, it does not necessarily mean you did anything wrong. More to come.\"},\"Ex:SetLetReplacement\":{\"title\":\"Ex:SetLetReplacement\",\"complete\":\"\",\"created\":\"20210206220327975\",\"length\":\"m\",\"modified\":\"20220103170539532\",\"origin\":\"Miscellaneous Widgets\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Locate several places in your sample wiki where you have used `$set` widgets and replace them with equivalent `$let` widgets.\"},\"Ex:SetVarsReplacement\":{\"title\":\"Ex:SetVarsReplacement\",\"complete\":\"\",\"created\":\"20210206220327975\",\"length\":\"m\",\"modified\":\"20210206234915004\",\"origin\":\"Miscellaneous Widgets\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Locate several places in your sample wiki where you have used `$set` widgets and replace them with equivalent `$vars` widgets.\"},\"Ex:SidebarCurrentTiddler\":{\"title\":\"Ex:SidebarCurrentTiddler\",\"created\":\"20200718044814594\",\"length\":\"s\",\"modified\":\"20210418141506093\",\"origin\":\"Adding to the Sidebar\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"You might be tempted to use `[tag<currentTiddler>]` within the `tabs` macro on the `$:/yourname/Views` tiddler, so that if you ever change the name of the tiddler you don't have to remember to update the filter. Try this. What happens? Why do you think this happened?\"},\"Ex:SidebarCurrentTiddler/answer\":{\"title\":\"Ex:SidebarCurrentTiddler/answer\",\"created\":\"20200718044834605\",\"modified\":\"20200718044844812\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"No tabs show up at all, because there is no `currentTiddler` value defined in the sidebar! If you think about it, this makes good sense -- the sidebar is not rendered in the context of any particular tiddler.\"},\"Ex:Slicing\":{\"title\":\"Ex:Slicing\",\"complete\":\"\",\"created\":\"20210206165636992\",\"length\":\"M\",\"modified\":\"20210313143622961\",\"origin\":\"Slicing Up Content\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Locate some old notes you've taken, or simply consider a topic or problem you've been thinking about recently. What are the important nouns in this topic? How would you divide it into tiddlers, what fields would they have, and how would they relate to each other? You can stub out a few tiddlers in your sample wiki, or simply sketch an outline of the tiddlers on a sheet of paper.\"},\"Ex:SlicingInGtw\":{\"title\":\"Ex:SlicingInGtw\",\"complete\":\"\",\"created\":\"20210206170109287\",\"length\":\"m\",\"modified\":\"20210409133737082\",\"origin\":\"Slicing Up Content\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Edit a few sections and tiddlers in the //Grok TiddlyWiki// wiki to get a feel for how it's divided into tiddlers and what fields are present on these tiddlers. Tiddlers are transcluded into other tiddlers using a syntax involving `{{double curly braces}}`; don't worry if you see things in the source that don't make sense yet.\"},\"Ex:SpacedVariable\":{\"title\":\"Ex:SpacedVariable\",\"created\":\"20201121235458843\",\"length\":\"s\",\"modified\":\"20210130174630853\",\"origin\":\"Variables\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"What happens if you put a space in a variable name?\"},\"Ex:SpacedVariable/answer\":{\"title\":\"Ex:SpacedVariable/answer\",\"created\":\"20201121235528457\",\"modified\":\"20210409192453536\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"It becomes impossible to reference (if you write `<<some variable>>`, nothing will appear). This is because words after the first space in the angle brackets are treated as //parameters// rather than as part of the name of the variable. This will make sense in a moment when we talk about [[Macros]].\\n\\nYou might wonder if you could say `<<\\\"the eis\\\">>` to refer to a variable name containing a space, by analogy to the way you can include multiple words in the value of an [[HTML attribute|HTML]], but this isn't valid syntax.\"},\"Ex:StretchText\":{\"title\":\"Ex:StretchText\",\"created\":\"20210120030944524\",\"length\":\"h\",\"modified\":\"20210320144655864\",\"origin\":\"Supplemental Exercises\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"//StretchText//, generally attributed to [[Ted Nelson|https://en.wikipedia.org/wiki/Ted_Nelson]], is a form of hypertext in which links, or summary snippets, can be expanded in place: in other words, you can “stretch” parts of the text that you want to see in more detail to zoom in on them. Implement stretch-text in TiddlyWiki using a template or macro that allows you to expand and contract a tiddler serving as the “next level down”.\\n\\nYou can find an example and a TiddlyWiki implementation as the TiddlyStretch plugin in my [[list of cynical laws|https://zettelkasten.sorenbjornstad.com/#LawOfCynicism]] in my Zettelkasten.\"},\"Ex:StylesheetExperiments\":{\"title\":\"Ex:StylesheetExperiments\",\"created\":\"20201123000903120\",\"length\":\"M\",\"modified\":\"20210130175016371\",\"origin\":\"Supplemental Exercises\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"If you know a little bit of CSS, read about [[Stylesheets]] in TiddlyWiki and make some design changes to your wiki, like changing the text color or the shape of some buttons.\"},\"Ex:SubstitutionBackporting\":{\"title\":\"Ex:SubstitutionBackporting\",\"created\":\"20210207224132602\",\"length\":\"m\",\"modified\":\"20210502184931512\",\"origin\":\"Text Substitution\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Go back through some of the macros you have written for previous exercises in this chapter and see if you can find any opportunities to switch from text substitution to `<<__parameter-transclusion__>>`.\\n\\n//Tip//: Try searching for the word `define` to find tiddlers that contain macro definitions.\"},\"Ex:SubstitutionBackporting/answer\":{\"title\":\"Ex:SubstitutionBackporting/answer\",\"created\":\"20210409221930746\",\"modified\":\"20210409222040720\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Surprisingly, there aren't any, if you've been exactly following along with all the exercises. Hopefully you had fun looking though!\\n\\nWe'll be seeing more examples of situations in which we can use the `<<__parameter transclusion__>>` syntax later in the book.\"},\"Ex:TagColorGrouping\":{\"title\":\"Ex:TagColorGrouping\",\"created\":\"20201123000633554\",\"length\":\"m\",\"modified\":\"20210130175017576\",\"origin\":\"Supplemental Exercises\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Modify the display of tags in the `Tags` section of the `More` sidebar tab so that they are grouped by color.\"},\"Ex:TagColoring\":{\"title\":\"Ex:TagColoring\",\"created\":\"20200608014124293\",\"length\":\"s\",\"modified\":\"20210130174636052\",\"origin\":\"Classifying Tags\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Set the tags corresponding to tiddler types (`Contact`, `Journal`, `Meeting`, and `Project`) to solid red (`#ff0000`) and give them a tag icon (`$:/core/images/tag-button`).\"},\"Ex:TagMetadataStorage\":{\"title\":\"Ex:TagMetadataStorage\",\"created\":\"20200608014154433\",\"length\":\"s\",\"modified\":\"20210130174636491\",\"origin\":\"Classifying Tags\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"How do you think the color and icon of tags are stored?\"},\"Ex:TagMetadataStorage/answer\":{\"title\":\"Ex:TagMetadataStorage/answer\",\"created\":\"20200608014214783\",\"modified\":\"20200608014226194\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Remember that everything's a tiddler? Open the tiddler of one of the tags you've colored and take a look.\"},\"Ex:TelephoneLink\":{\"title\":\"Ex:TelephoneLink\",\"created\":\"20210131040745037\",\"length\":\"m\",\"modified\":\"20210410140159904\",\"origin\":\"Using Variables in Macros\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Suppose we want to create a link for a contact which, when clicked on a smartphone, calls the contact. This can be accomplished with a link to a URL like `tel:888-555-1234`. Create such a link and add it to the `ContactInformationTemplate`.\\n\\nIf you want to use a `[[double square brackets]]` link rather than an `a` HTML element, you need to use `ext`, like this:\\n\\n```html\\n[ext[tel:888-555-1234]]\\n```\\n\\nThat's because `tel:888-555-1234` by itself would be a valid name for a tiddler, too, so if TiddlyWiki isn't told it's an external link, it will assume it's an internal one. See the //External Links// heading [[here in the TiddlyWiki documentation |https://tiddlywiki.com/#Linking%20in%20WikiText]] for more information.\"},\"Ex:TelephoneLink/answer\":{\"title\":\"Ex:TelephoneLink/answer\",\"created\":\"20210131040820380\",\"modified\":\"20210818142017227\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"By now, having read all about [[Text Substitution]], you should be aware that this won't work:\\n\\n```html\\n[ext[Call {{!!title}}|tel:{{!!phone}}]]\\n```\\n\\nBut you might be tempted to try using an HTML element, like this:\\n\\n```html\\n<a href=\\\"tel:{{!!phone}}\\\">Call {{!!title}}</a>\\n```\\n\\nIt might be helpful to review exactly why this doesn't work, as it's something most TiddlyWiki beginners have found themselves trying to do at one point or another. It's actually the same thing we saw in [[Ex:QuotedMacroCall]], back in [[The Finer Points of Macros]]. If you put any attribute value in \\\"quotation marks\\\", it is //literal//: TiddlyWiki won't do any further wikitext parsing on it. Instead of a literal value for an attribute, you can instead use a `<<macro transclusion>>`, a `{{field transclusion}}`, or a `{{{filtered transclusion}}}`.\\n\\nIf you want to include both a literal part //and// a field or macro transclusion, squashed together (the technical term for this is //string concatenation//), you need to use either a macro with text substitution or a filter. Here's the macro version:\\n\\n```html\\n\\\\define phonelink() [ext[Call $(currentTiddler)$|$(phonenum)$]]\\n<$set name=\\\"phonenum\\\" value={{!!phone}}>\\n\\t<<phonelink>>\\n</$set>\\n```\\n\\nOr with an `a` element:\\n\\n```html\\n\\\\define phonelink() tel:$(phonenum)$\\n<$set name=\\\"phonenum\\\" value={{!!phone}}>\\n\\t<a href=<<phonelink>>>Call {{!!title}}</a>\\n</$set>\\n```\\n\\nThe filter version is left as the next exercise.\\n\\nYou can find a more detailed treatment of this issue in the [[Common Misunderstandings]] chapter: [[Constant strings cannot be combined with transclusions]].\"},\"Ex:TicketTrackingLink\":{\"title\":\"Ex:TicketTrackingLink\",\"created\":\"20200603220219912\",\"length\":\"m\",\"modified\":\"20210130174638264\",\"origin\":\"The Finer Points of Macros\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Write a macro called `ticketLink` that takes one parameter, called `ticketId`, and creates a link whose text is `Ticket #{ID}`, where `{ID}` represents the ID of the ticket, and which links to the ticket. Assume that the URL of a ticket in the company's ticket-tracking system is `https://tix.example.com/ticket/{ID}`.\\n\\nTest this macro by putting it at the top of the `OnboardingProcess` tiddler and calling it at the bottom of the tiddler with the ticket number in the `ticketnum` field of that tiddler as its argument.\"},\"Ex:TicketTrackingLink/answer\":{\"title\":\"Ex:TicketTrackingLink/answer\",\"created\":\"20200603220926651\",\"modified\":\"20210130174958872\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{Sn:TicketLinkMacro||MagicSnippet}}\"},\"Ex:TicketTrackingTemplate\":{\"title\":\"Ex:TicketTrackingTemplate\",\"complete\":\"\",\"created\":\"20200605153857006\",\"length\":\"m\",\"modified\":\"20210409212625980\",\"origin\":\"Templates and the Current Tiddler\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In the [[TicketTrackingLink|Ex:TicketTrackingLink]] exercise, we created a macro that outputs a link to a ticket in the company's ticket-tracking system and placed it in the `OnboardingProcess` tiddler. Create a template based on this macro, called `TicketNumberLink`, which displays the link to a project's ticket when it's used as a template for any tiddler that has the `ticketnum` field populated. Transclude this template in the text of the `OnboardingProcess` project to show its ticket number.\\n\\n//Tip:// It may be helpful to get everything working within the `OnboardingProcess` tiddler first, then excise the relevant parts into a separate template tiddler -- this way, if something doesn't work, you have a better idea of what part isn't right.\"},\"Ex:TicketTrackingTemplate/answer\":{\"title\":\"Ex:TicketTrackingTemplate/answer\",\"created\":\"20200605153922962\",\"modified\":\"20210327153247824\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In the `TicketNumberLink` tiddler:\\n\\n```html\\n\\\\define ticketLink(ticketId)\\n[[Ticket #$ticketId$|https://tix.example.com/ticket/$ticketId$]]\\n\\\\end\\n\\n<$macrocall $name=\\\"ticketLink\\\" ticketId={{!!ticketnum}} />\\n```\\n\\nIn the `OnboardingProcess` tiddler:\\n\\n```html\\n{{||TicketNumberLink}}\\n```\"},\"Ex:TiddlersContainingWikiTitle\":{\"title\":\"Ex:TiddlersContainingWikiTitle\",\"complete\":\"\",\"created\":\"20201122165557588\",\"length\":\"m\",\"modified\":\"20210409214506156\",\"origin\":\"Filters and Transclusions\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create a list of all tiddlers that contain the title of the wiki.\\n\\n* The current title of the wiki can be found in the tiddler named `$:/SiteTitle`.\\n* The `search` filter operator is used to find tiddlers that contain some arbitrary text.\"},\"Ex:TiddlersContainingWikiTitle/answer\":{\"title\":\"Ex:TiddlersContainingWikiTitle/answer\",\"created\":\"20201122165626034\",\"modified\":\"20210409214445233\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<ul>\\n  <$list filter=\\\"[search{$:/SiteTitle}]\\\">\\n    <li><$link to=<<currentTiddler>>><<currentTiddler>></$link></li>\\n  </$list>\\n</ul>\\n```\\n\\nNow might be a good time to point out that there's a faster way to create a bulleted list of links to tiddlers that match a filter. I didn't tell you about this macro earlier so you would have to learn to use the more general `$list` widget, but now that you've learned, the `list-links` built-in macro is a handy shortcut. We can rewrite the above as simply:\\n\\n```html\\n<<list-links \\\"[search{$:/SiteTitle}]\\\">>\\n```\"},\"Ex:TocAddition\":{\"title\":\"Ex:TocAddition\",\"created\":\"20200603195508407\",\"length\":\"s\",\"modified\":\"20210131175911237\",\"origin\":\"Creating Hierarchies with a Table of Contents\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Make up and create another meeting under one of the other subcategories, either `OnboardingPeople` or `OnboardingTraining`. Be sure to include at least one participant and a time as we did when we [[set up the initial meeting|Meeting Tiddlers]]. Check to make sure that it shows up in the table of contents.\"},\"Ex:TocCaptions\":{\"title\":\"Ex:TocCaptions\",\"created\":\"20200603195939227\",\"length\":\"s\",\"modified\":\"20210409134418366\",\"origin\":\"Creating Hierarchies with a Table of Contents\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Having the word `Onboarding` appear repeatedly in a table of contents within the `OnboardingProcess` tiddler seems a little silly, especially when those top-level tiddlers don't have any useful content of their own. We'd really like to be able to give them names that make sense in this context, without having to make the title of the tiddler something vague like “HR” that would be ambiguous in the context of the entire wiki.\\n\\nFortunately for us, the table-of-contents functionality looks for a field called `caption` and uses that instead of the title if it exists. Add appropriate caption fields to each of the three top-level items displayed in the table of contents to pretty up the list.\"},\"Ex:TocInternalExternalNav\":{\"title\":\"Ex:TocInternalExternalNav\",\"complete\":\"\",\"created\":\"20200603195801747\",\"length\":\"m\",\"modified\":\"20210321012406640\",\"origin\":\"Creating Hierarchies with a Table of Contents\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"There are two more (rarely used) kinds of tables of contents, `toc-tabbed-internal-nav` and `toc-tabbed-external-nav`. Try these out. Can you figure out the difference between them?\"},\"Ex:TocInternalExternalNav/answer\":{\"title\":\"Ex:TocInternalExternalNav/answer\",\"created\":\"20200603195826629\",\"length\":\"m\",\"modified\":\"20200603195917940\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The difference is that the `internal` version opens internal links within the tabbed display, whereas the `external` version opens them in a separate tiddler in the story river.\"},\"Ex:TranscludedMacroScope\":{\"title\":\"Ex:TranscludedMacroScope\",\"complete\":\"\",\"created\":\"20200605160614741\",\"length\":\"m\",\"modified\":\"20210409211840224\",\"origin\":\"Templates and the Current Tiddler\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In [[The Finer Points of Macros]], we learned that the scope of a macro is until the end of the tiddler. But what about when we transclude a tiddler containing a macro into another tiddler?\"},\"Ex:TranscludedMacroScope/answer\":{\"title\":\"Ex:TranscludedMacroScope/answer\",\"created\":\"20200605160659838\",\"modified\":\"20210409211952840\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"To test this, you could place a macro in a tiddler, transclude that macro in another tiddler, and see if you can call the macro. If you do this, you'll find that your `<<macro call>>` doesn't produce any output, which is what happens when the macro is not defined (we saw this in an [[earlier exercise|Ex:MacroPosition]]).\\n\\nWe can conclude from this experiment that the macro goes out of scope at the end of the transclusion. It makes no difference whether the tiddler containing the macro was transcluded via a template or not.\\n\\nThere are ways we can make macros available in other tiddlers, but transcluding the tiddler containing the macros is not one of them.\"},\"Ex:UnclosedMacroCall\":{\"title\":\"Ex:UnclosedMacroCall\",\"created\":\"20201231041607192\",\"length\":\"m\",\"modified\":\"20210130174703478\",\"origin\":\"The Finer Points of Macros\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Take the example //The $macrocall widget can take variables as parameters// and modify it so that the `$macrocall` tags are unclosed (no `/` before the `>`). What happens? Why do you think this happened?\"},\"Ex:UnclosedMacroCall/answer\":{\"title\":\"Ex:UnclosedMacroCall/answer\",\"created\":\"20201231041636952\",\"modified\":\"20210409195408463\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Any content anywhere after the `$macrocall` tag in the tiddler disappears! This happens because the `$macrocall` widget is not a void element, so it needs to have a closing tag. In the absence of an actual closing tag, TiddlyWiki pretends there is a matching closing tag at the very end of the tiddler. However, this causes the remainder of the tiddler to be part of the content of the `$macrocall` widget, and any content in a `$macrocall` widget is completely ignored (what would go inside the expansion of a macro call, anyway?). This is a common typo, so watch out for that slash.\\n\\nYou might wonder why the `$macrocall` widget isn't a void element, if we've agreed that it doesn't make sense for a macro call to have content. There is no logical explanation for this except that TiddlyWiki chose not to make any of its custom widgets void elements.\\n\\nIf this discussion didn't make sense, consider reviewing the [[HTML]] section.\"},\"Ex:UpdatingDisclaimer\":{\"title\":\"Ex:UpdatingDisclaimer\",\"created\":\"20200603200939184\",\"length\":\"s\",\"modified\":\"20210130174701624\",\"origin\":\"Variables\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Suppose that corporate decides it's time to update the disclaimer, and henceforth all documents need to say \\\"doesn't\\\" instead of \\\"does not.\\\" Update the tiddler to make this change. Notice that, with the use of a variable, you need only make the change in one place, even if you included the disclaimer in hundreds of places.\"},\"Ex:VariableAfterSet\":{\"title\":\"Ex:VariableAfterSet\",\"created\":\"20201121235545353\",\"length\":\"s\",\"modified\":\"20210130174659679\",\"origin\":\"Variables\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"What happens if you refer to a variable after the `</$set>`?\"},\"Ex:VariableAfterSet/answer\":{\"title\":\"Ex:VariableAfterSet/answer\",\"created\":\"20201121235610144\",\"modified\":\"20201121235546664\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Nothing shows up. After the `</$set>`, it's as if the variable never had a value.\"},\"Ex:VariableTransclusion\":{\"title\":\"Ex:VariableTransclusion\",\"created\":\"20201122031933154\",\"length\":\"s\",\"modified\":\"20210130174656427\",\"origin\":\"Transclusions\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"What happens if you set a variable in one tiddler, and transclude a tiddler that references that variable within the scope of the `$set` widget? You can start with a Tiddler 1 that looks something like this:\\n\\n```html\\n<$set name=\\\"myVariable\\\" value=\\\"test\\\">\\n    {{Tiddler 2}}\\n</$set>\\n```\"},\"Ex:VariableTransclusion/answer\":{\"title\":\"Ex:VariableTransclusion/answer\",\"created\":\"20201122031957511\",\"modified\":\"20210409201513490\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The variable reference is accessible within the transcluded tiddler -- the scope is not limited to the tiddler in which the variable is set, but also applies to any transclusions that happen within the set block. In other words, if you place this in Tiddler 2:\\n\\n```html\\n<<myVariable>>\\n```\\n\\nThen when viewing Tiddler 1, `test` appears, even though `myVariable` was not physically defined in Tiddler 2.\\n\\nThis “bleed-over” proves quite useful in many situations, especially ones that involve templates (a concept we'll discuss in the [[next section|Templates and the Current Tiddler]]).\"},\"Ex:VeryOrdinaryDay\":{\"title\":\"Ex:VeryOrdinaryDay\",\"created\":\"20200718012126754\",\"length\":\"m\",\"modified\":\"20210130174652722\",\"origin\":\"Data Tiddlers\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The `TodaysHoliday` tiddler has a problem: if today isn't a holiday, it says \\\"It's today!\\\". While true, that sounds a little silly, doesn't it? Change the tiddler so that if today is not a holiday, it instead says, \\\"Sadly, it's a very ordinary day today.\\\"\\n\\n//Hint 1//: If you don't remember how to make some wikitext appear only if a condition is met, have another read through [[Text Substitution]].\\n\\n//Hint 2//: An attribute called `emptyMessage` will come in handy.\"},\"Ex:VeryOrdinaryDay/answer\":{\"title\":\"Ex:VeryOrdinaryDay/answer\",\"created\":\"20200718012215079\",\"modified\":\"20210818185038784\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"To show text only if a condition is true, we can use the `list` widget paired with a filter which outputs one item if the condition is met and nothing if it isn't:\\n\\n```html\\n<$set name=formattedToday value=<<now \\\"0MM/0DD\\\">>>\\n  <$list filter=\\\"[[UsHolidays]getindex<formattedToday>]\\\" emptyMessage=\\\"Sadly, it's a very ordinary day today.\\\">\\n    It's ''<<currentTiddler>>'' today!\\n  </$list>\\n</$set>\\n```\\n\\nIf we didn't want to use `emptyMessage` (or didn't know about it), we could use a second list widget that had the opposite condition. The opposite condition is somewhat more difficult to compose, as there is no filter operator to determine whether an index exists in a data tiddler. Instead, we can team up `then`, `else`, and `is[blank]`:\\n\\n```html\\n<$set name=formattedToday value=<<now \\\"0MM/0DD\\\">>>\\n  <$list filter=\\\"[[UsHolidays]getindex<formattedToday>]\\\">\\n    It's ''<<currentTiddler>>'' today!\\n  </$list>\\n  <$list filter=\\\"[[UsHolidays]getindex<formattedToday>then[]else[holiday]!is[blank]]\\\">\\n    Sadly, it's a very ordinary day today.\\n\\t</$list>\\n</$set>\\n```\\n\\nThat is, first get the value of the index. Then if that value is not empty (meaning the index existed), change the value to an empty one, and if the value is empty, change it to a non-empty one. Lastly, remove all empty values (the distinction between an empty value and a nonexistent one is explained in [[this exercise answer|Ex:DefaultToField/answer]]). The net effect is that the body of the `$list` widget is shown if `getindex[]` returns an empty value, and nothing is shown otherwise.\\n\\nThis `then`--`else`--`is[blank]` pattern may come in handy in other places as well.\"},\"Ex:ViewSource\":{\"title\":\"Ex:ViewSource\",\"complete\":\"\",\"created\":\"20201125002209220\",\"length\":\"m\",\"modified\":\"20211129232456039\",\"origin\":\"HTML\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Try right-clicking on this web page and choosing “View Page Source” (this option might be called “View Frame Source” on some versions of TiddlyDesktop). This will show the HTML code behind the page. Scroll through some of it and see if you can find some tags and attributes, like we discussed above.\\n\\nIn addition to HTML, you will find some //JavaScript// (a programming language for web browsers that uses a lot of {curly braces}), some //CSS// (a language that defines the colors, spacing, and fonts used on the site), some TiddlyWiki wikitext, and probably a few other mysterious things. When you see something you don't understand, just keep scrolling -- you're not meant to understand it all, just to get a feel for how a website's HTML looks.\\n\\nFor fun, go try this on a couple of other websites, too.\"},\"Ex:ViewTemplateExplicitHide\":{\"title\":\"Ex:ViewTemplateExplicitHide\",\"created\":\"20210207214325266\",\"length\":\"m\",\"modified\":\"20210207214315159\",\"origin\":\"Hiding and Showing Things\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Change the ViewTemplate tiddler that displays the contact information template so that it does not display if the `hide-contactinfo` field on the contact tiddler has the value `yes`. Use a `$list` widget.\"},\"Ex:ViewTemplateExplicitHideReveal\":{\"title\":\"Ex:ViewTemplateExplicitHideReveal\",\"created\":\"20210207214347738\",\"length\":\"m\",\"modified\":\"20210207214506421\",\"origin\":\"Hiding and Showing Things\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Repeat the [[previous exercise|Ex:ViewTemplateExplicitHide]], but use a `$reveal` widget instead of a `$list` widget.\"},\"Ex:ViewTemplateExplicitHideReveal/answer\":{\"title\":\"Ex:ViewTemplateExplicitHideReveal/answer\",\"created\":\"20210207214601805\",\"modified\":\"20210207214502838\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<$reveal state=\\\"!!hide-contactinfo\\\" type=\\\"nomatch\\\" text=\\\"yes\\\">\\n\\t…the rest of the template\\n</$reveal>\\n```\\n\"},\"Ex:ViewTemplateExplicitHide/answer\":{\"title\":\"Ex:ViewTemplateExplicitHide/answer\",\"created\":\"20210207214430861\",\"modified\":\"20210207214334658\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<$list filter=\\\"[all[current]!hide-contactinfo[yes]]\\\">\\n\\t…the rest of the template\\n</$list>\\n```\\n\"},\"Ex:ViewsOnSidebar\":{\"title\":\"Ex:ViewsOnSidebar\",\"created\":\"20200718044634233\",\"length\":\"m\",\"modified\":\"20210130174651666\",\"origin\":\"Adding to the Sidebar\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Place the new `$:/yourname/Views` tiddler onto the sidebar between the `Recent` and `Tools` tabs.\\n\\n//Hint//: You'll have to figure out how TiddlyWiki picks up tabs on the sidebar. A little bit of detective work right within your wiki should be sufficient; we've seen all the relevant mechanisms by now.\"},\"Ex:ViewsOnSidebar/answer\":{\"title\":\"Ex:ViewsOnSidebar/answer\",\"created\":\"20200718044652683\",\"modified\":\"20210418141317095\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Tag the tiddler with `$:/tags/SideBar`, then set its `list-before` field to `$:/core/ui/SideBar/Tools`, or its `list-after` field to `$:/core/ui/SideBar/Recent`.\\n\\nYou can find what tag to use by poking around in `$:/tags` and seeing what looks promising, or by searching for one of the other tabs (e.g., `Recent`) in the ''Shadows'' tab of Advanced Search, finding the shadow tiddler that handles that tab, and seeing what it's tagged.\"},\"Ex:WikiStatistics\":{\"title\":\"Ex:WikiStatistics\",\"created\":\"20201122040301117\",\"length\":\"M\",\"modified\":\"20210130174643190\",\"origin\":\"Filters and Transclusions\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create a tiddler called `WikiStatistics` that shows the following pieces of information in a bulleted list:\\n\\n* How many contacts are in the wiki.\\n* How many unique tiddlers are linked from meetings. (It will be unique without having to do anything special, so don't panic if you think you don't know how to make it unique.)\\n* What percentage of non-system tiddlers in the wiki are contacts, to three digits of precision (e.g., 10.2%, or 1.55%).\\n\\nTo complete the last one, you'll need to review the list of Mathematics Operators on the [[filter operators|https://tiddlywiki.com#Filter%20Operators]] manual page.\"},\"Ex:WikiStatistics/answer\":{\"title\":\"Ex:WikiStatistics/answer\",\"created\":\"20201122040339373\",\"modified\":\"20201122171106156\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<ul>\\n  <li>There are <$text text={{{ [tag[Contact]count[]] }}}/> people in this wiki.</li>\\n  <li>There are <$text text={{{ [tag[Meeting]links[]!tag[Contact]count[]] }}}/> non-contact tiddlers linked from meetings.</li>\\n  <$set name=\\\"totalTiddlers\\\" value={{{ [!is[system]count[]] }}}>\\n    <li><$text text={{{ [tag[Contact]count[]divide<totalTiddlers>multiply[100]precision[3]] }}}/>% of all non-system tiddlers in the wiki are contacts.</li>\\n  </$set>\\n</ul>\\n```\\n\\nNote the use of an HTML list. If we tried to do the list in pure wikitext with `*`, we would have been unable to place the third bullet point in the same list as the first two, as the `$set` widget coming in between causes TiddlyWiki to forget that a list was in progress. We could have put the set widget around the //entire// list, but then it would have been harder to understand what we were doing since the first part of the calculation would have been physically separated from the second part. Always prioritize readability in your wikitext!\"},\"Ex:WikifyWikipediaLink\":{\"title\":\"Ex:WikifyWikipediaLink\",\"created\":\"20210208004244560\",\"length\":\"s\",\"modified\":\"20210327153305118\",\"origin\":\"Wikification\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Add the following snippet to a new tiddler:\\n\\n```html\\n\\\\define wikipediaLink(articleName)\\nhttps://en.wikipedia.org/wiki/$articleName$\\n\\\\end\\n\\n<$macrocall $name=\\\"wikipediaLink\\\" articleName={{!!wikipedia-article}}/>\\n```\\n\\nAlter this snippet so the contents of the `wikipedia-article` field on the current tiddler can be a transclusion of a different tiddler field. (As it stands, the transclusion will render, but not as part of a link, since the transclusion within the `wikipedia-article` field is only seen //after// being returned from the macro.)\"},\"Ex:WikifyWikipediaLink/answer\":{\"title\":\"Ex:WikifyWikipediaLink/answer\",\"created\":\"20210208004312948\",\"modified\":\"20210327153324227\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n\\\\define wikipediaLink(articleName)\\nhttps://en.wikipedia.org/wiki/$articleName$\\n\\\\end\\n\\n<$wikify name=\\\"article\\\" text={{!!wikipedia-article}}>\\n\\t<$macrocall $name=\\\"wikipediaLink\\\" articleName=<<article>>/>\\n</$wikify>\\n```\"},\"Ex:WikipediaLinkSnippet\":{\"title\":\"Ex:WikipediaLinkSnippet\",\"created\":\"20200718205147878\",\"length\":\"m\",\"modified\":\"20210418141853139\",\"origin\":\"Stamps\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Create a snippet //Link to Wikipedia article// that inserts a call to the `wikipediaLink` global macro. Specifically, it should use the prefix/suffix feature so that if you highlight `Aardvark`, you get `<<wikipediaLink \\\"Aardvark\\\" linktext>>`.\"},\"Ex:WikipediaLinkSnippet/answer\":{\"title\":\"Ex:WikipediaLinkSnippet/answer\",\"created\":\"20200718205253237\",\"modified\":\"20210418141917530\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"You need three tiddlers.\\n\\n* `WikipediaLinkSnippet`: tagged `$:/tags/TextEditor/Snippet` and with a caption `Link to Wikipedia article`. No content.\\n* `WikipediaLinkSnippet/prefix`: body text `<<wikipediaLink \\\"`\\n* `WikipediaLinkSnippet/suffix`: body text `\\\" linktext>>`\"},\"Ex:WikipediaLinkTemplate\":{\"title\":\"Ex:WikipediaLinkTemplate\",\"created\":\"20201122165908150\",\"length\":\"m\",\"modified\":\"20210130174642422\",\"origin\":\"Filters and Transclusions\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Make the solution of the [[previous exercise|Ex:WikipediaLinkWithoutMacro]] into a separate `WikipediaLinkTemplate` tiddler that can be transcluded, so that it can be used for creating links to more things than just aardvarks. As we learned in [[Ex:VariableTransclusion]], variable values will carry across transclusion boundaries, so refer to the value of a variable called `articleName` to decide what article to link to.\\n\\nWhile you're at it, make this template more robust by getting the value `https://en.wikipedia.org/wiki` from another tiddler; this way, we can reference the base URL of Wikipedia from other places, and only have to update it in one place if it changes.\"},\"Ex:WikipediaLinkTemplate/answer\":{\"title\":\"Ex:WikipediaLinkTemplate/answer\",\"created\":\"20201122165936723\",\"modified\":\"20201122165910736\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"First, create a tiddler called `WikipediaMetadata` and set its `url` field to `https://en.wikipedia.org/wiki/`. (You could also make a tiddler containing only the URL, in the `text` field, and create other tiddlers if you needed to maintain other information about Wikipedia; it's up to you what makes the most sense.)\\n\\nThen in `WikipediaLinkTemplate`:\\n\\n```html\\n<a class=\\\"tc-tiddlylink-external\\\" href={{{ [{WikipediaMetadata!!url}addsuffix<articleName>] }}}><<articleName>></a>\\n```\\n\\nAnd to use this tiddler:\\n\\n```html\\n<$set name=\\\"articleName\\\" value=\\\"Aardvark\\\">\\n  {{WikipediaLinkTemplate}}\\n</$set>\\n```\\n\\nNotice that treating the `WikipediaLinkTemplate` as a template by placing `||` prior to its name in the transclusion is not necessary, as it does not access any of the fields of the current tiddler.\"},\"Ex:WikipediaLinkWithoutMacro\":{\"title\":\"Ex:WikipediaLinkWithoutMacro\",\"created\":\"20201122165712594\",\"length\":\"m\",\"modified\":\"20210130175033254\",\"origin\":\"Filters and Transclusions\",\"tags\":\"Exercise\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In [[Ex:MacroAdjacency]] within the [[Macros]] section, we found that this attempt to use a simple variable instead of a macro to compose a Wikipedia link didn't work:\\n\\n```html\\n<$set name=\\\"wikipedia\\\" value=\\\"https://en.wikipedia.org/wiki/\\\">\\n    <<wikipedia>>Aardvark\\n</$set>\\n```\\n\\nWe now have the tools needed to accomplish this without a macro. Your solution should display a link to the Aardvark article which has been built from the `wikipedia` variable shown above and the constant part `Aardvark`, but without using a macro.\\n\\n* You will need the filter operator `addsuffix`.\\n* You'll need to use the HTML tag `a`, which creates an //anchor//, including a link. The form of this tag is as follows:\\n\\n```html\\n<a href=\\\"the URL\\\">the link text</a>\\n```\"},\"Ex:WikipediaLinkWithoutMacro/answer\":{\"title\":\"Ex:WikipediaLinkWithoutMacro/answer\",\"created\":\"20201122165740509\",\"modified\":\"20210409215022017\",\"tags\":\"Answer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"```html\\n<$set name=\\\"wikipedia\\\" value=\\\"https://en.wikipedia.org/wiki/\\\">\\n    <a href={{{ [<wikipedia>addsuffix[Aardvark]] }}}>Aardvark</a>\\n</$set>\\n```\\n\\nDepending on the [[palette|Tweaking Your Settings]] you have selected, you may notice that the link is a different color than is usual in your wiki. If this bothers you, add the attribute `class=\\\"tc-tiddlylink-external\\\"` to the `<a>` tag, which will tell TiddlyWiki to use the same styling that it would if you created an external link with `[[double square brackets]]`.\"},\"Exercise Browser\":{\"title\":\"Exercise Browser\",\"created\":\"20210116160956282\",\"modified\":\"20210408142524454\",\"tags\":\"Index\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define tableBody()\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<td><$checkbox field=\\\"complete\\\" checked=\\\"yes\\\" unchecked=\\\"\\\" default=\\\"\\\"/></td>\\n\\t\\t\\t\\t<td><$link to={{!!title}}/></td>\\n\\t\\t\\t\\t<td><$link to={{!!origin}}/></td>\\n\\t\\t\\t\\t<td>({{!!length}})</td>\\n\\t\\t\\t\\t<td>\\n\\n\\t\\t\\t\\t{{!!text}}\\n\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\\\end\\n\\\\define noSearchFilt() [search:origin:literal,anchored{$:/temp/SelectedSection}]\\n\\\\define searchFilt() [search{$:/temp/ExerciseBrowserFilter}search:origin:literal,anchored{$:/temp/SelectedSection}]\\n\\n<div style=\\\"float: right;\\\">\\n\\t<$text text={{{ [all[tiddlers+shadows]tag[Exercise]complete[yes]count[]]  }}}/> / <$text text={{{ [all[tiddlers+shadows]tag[Exercise]count[]] }}}/> exercises completed.\\n</div>\\n\\n<$set name=\\\"selectorFilter\\\" value=\\\"[all[tiddlers+shadows]tag[Exercise]each[origin]get[origin]sort[]]\\\">\\n\\n<table class=\\\"gtw-form\\\">\\n\\t<tr>\\n\\t\\t<th>Find in text</th>\\n\\t\\t<td><$edit-text tag=\\\"input\\\" type=\\\"text\\\" tiddler=\\\"$:/temp/ExerciseBrowserFilter\\\" default=\\\"\\\"/></td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<th>Section</th>\\n\\t\\t<td>{{$:/sib/Navigator/SectionSelector}}</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<th>Show</th>\\n\\t\\t<td><$radio tiddler=\\\"$:/config/sobjornstad/GrokTiddlyWiki/ExerciseBrowserState\\\" field=\\\"complete\\\" value=\\\"yes\\\">&nbsp;Complete</$radio>&emsp;<$radio tiddler=\\\"$:/config/sobjornstad/GrokTiddlyWiki/ExerciseBrowserState\\\" field=\\\"complete\\\" value=\\\"^$\\\">&nbsp;Incomplete</$radio>&emsp;<$radio tiddler=\\\"$:/config/sobjornstad/GrokTiddlyWiki/ExerciseBrowserState\\\" field=\\\"complete\\\" value=\\\".*\\\">&nbsp;All</$radio></td>\\n\\t</tr>\\n</table>\\n\\n</$set>\\n\\nThe following table shows all exercises in this book. Click the checkbox to the left to mark an exercise as complete.\\n\\n<$set name=mySubfilt value={{{ [[$:/temp/ExerciseBrowserFilter]has[text]then<searchFilt>else<noSearchFilt>] }}}>\\n\\t<table class=\\\"gtw-exercise-browser\\\">\\n\\t\\t<col style=\\\"width: 2em;\\\">\\n\\t\\t<col style=\\\"width: 15%;\\\">\\n\\t\\t<col style=\\\"width: 15%;\\\">\\n\\t\\t<col style=\\\"width: 4.5em;\\\">\\n\\t\\t<col style=\\\"width: 70%;\\\">\\n\\t\\t<tr>\\n\\t\\t\\t<th/>\\n\\t\\t\\t<th>Exercise</th>\\n\\t\\t\\t<th>Section</th>\\n\\t\\t\\t<th>Length</th>\\n\\t\\t\\t<th>Text</th>\\n\\t\\t</tr>\\n\\t\\t<$list filter=\\\"[all[tiddlers+shadows]tag[Exercise]regexp:complete{$:/config/sobjornstad/GrokTiddlyWiki/ExerciseBrowserState!!complete}subfilter<mySubfilt>]\\\">\\n\\t\\t\\t<<tableBody>>\\n\\t\\t</$list>\\n\\t</table>\\n</$set>\"},\"ExerciseTemplate\":{\"title\":\"ExerciseTemplate\",\"complete\":\"\",\"created\":\"20200603025843918\",\"modified\":\"20210819205442275\",\"tags\":\"Template\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define when-empty() <$list filter=\\\"[all[current]addsuffix[/answer]is[tiddler]] [all[current]addsuffix[/answer]is[shadow]]\\\"><$link to=<<currentTiddler>>>go to answer</$link></$list>\\n\\n<div class={{{ [all[current]complete[yes]then[gtw-exercise-complete]else[]] +[addsuffix[ gtw-bordered-element]] }}}>\\n\\t<span class=\\\"gtw-exercise-intro\\\">Exercise</span>: ({{!!length}}) [<$link to={{!!title}}>{{!!title}}</$link>]\\n\\t{{||$:/sib/Exercise/CompletionCheckbox}}\\n\\t\\n\\t<$transclude mode=\\\"block\\\" />\\n\\t\\n\\t<$list filter=\\\"[<renderingStatic>!match[yes]]\\\" variable=_ emptyMessage=<<when-empty>>>\\n\\n\\t\\t<$list filter=\\\"[<currentTiddler>addsuffix[/answer]get[title]]\\\" variable=\\\"trash\\\">\\n\\n\\t\\t<$reveal stateTitle=\\\"$:/temp/exerciseAnswerState\\\"\\n\\t\\t\\t\\t\\t stateIndex=<<currentTiddler>>\\n\\t\\t\\t\\t\\t type=\\\"match\\\"\\n\\t\\t\\t\\t\\t text=\\\"hide\\\"\\n\\t\\t\\t\\t\\t default=\\\"hide\\\">\\n\\t\\t\\t<$button setTitle=\\\"$:/temp/exerciseAnswerState\\\"\\n\\t\\t\\t\\t\\t\\t\\t setIndex=<<currentTiddler>>\\n\\t\\t\\t\\t\\t\\t\\t setTo=\\\"show\\\"\\n\\t\\t\\t\\t\\t\\t\\t class=\\\"tc-btn-invisible tc-tiddlylink\\\">\\n\\t\\t\\t\\t{{$:/core/images/unfold-button}} show answer\\n\\t\\t\\t</$button>\\n\\t\\t</$reveal>\\n\\n\\t\\t<$reveal stateTitle=\\\"$:/temp/exerciseAnswerState\\\"\\n\\t\\t\\t\\t\\t stateIndex=<<currentTiddler>>\\n\\t\\t\\t\\t\\t type=\\\"match\\\"\\n\\t\\t\\t\\t\\t text=\\\"show\\\"\\n\\t\\t\\t\\t\\t default=\\\"hide\\\">\\n\\n\\t\\t\\t-----\\n\\n\\t\\t\\t<$button setTitle=\\\"$:/temp/exerciseAnswerState\\\"\\n\\t\\t\\t\\t\\t\\t\\t setIndex=<<currentTiddler>>\\n\\t\\t\\t\\t\\t\\t\\t setTo=\\\"hide\\\"\\n\\t\\t\\t\\t\\t\\t\\t class=\\\"tc-btn-invisible tc-tiddlylink\\\">\\n\\t\\t\\t\\t{{$:/core/images/fold-button}} hide answer\\n\\t\\t\\t</$button>\\n\\t\\t\\t[{{{ [<currentTiddler>addsuffix[/answer]] }}}]\\n\\n\\t\\t\\t<$transclude tiddler={{{ [<currentTiddler>addsuffix[/answer]] }}} mode=\\\"block\\\" />\\n\\t\\t</$reveal>\\n\\n\\t\\t</$list>\\n\\t</$list>\\n</div>\\n\\n<style>\\n.gtw-exercise-intro {\\n\\tfont-weight: bold;\\n\\tcolor: <<color primary>>;\\n}\\n\\n.gtw-exercise-complete {\\n\\tbackground-color: <<color completed-exercise>>;\\n}\\n</style>\"},\"Fields\":{\"title\":\"Fields\",\"created\":\"20200530170241199\",\"description\":\"Tiddlers are made up of fields.\",\"modified\":\"20210504015139005\",\"parent\":\"The Shape of TiddlyWiki\",\"tags\":\"Section Concept\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"[[Tiddlers]] are made up of ''fields''. Each field has a //name//, which describes what information it stores, and a //value//, which contains the actual information. For example, the field named `description` might have a value of `This tiddler discusses fields in TiddlyWiki`.\\n\\nThe most important fields of every tiddler are the ''title'' and the ''text''; the title is how you reference the tiddler from elsewhere in the wiki, while the text contains the actual content, written in a markup language called [[wikitext|Wikitext]] (more on that in the next section). Other built-in fields include the tiddler's tags (more on those [[in a few moments|Tags]] too), the user who last edited the tiddler, and the times the tiddler was created and last modified.\\n\\nIn addition to the built-in fields, you can ''add your own fields'' to any tiddler on the fly, should you wish to. For instance, you might add fields to a tiddler containing meeting notes to define what time the meeting happened and who attended. Storing this information in separate fields, rather than directly within the text of the tiddler, lets you retrieve specifically that information for use in another part of the wiki, or search and filter based on it.\\n\\nHere are this tiddler's fields as an example (not including the `text` field, since that would cause the example to include itself!). Field names are in the left column, while their values are in the right column. Don't worry if you don't understand the meaning or significance of all these fields yet.\\n\\n{{||$:/core/ui/TiddlerInfo/Fields}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Filing and Organizing\":{\"title\":\"Filing and Organizing\",\"caption\":\"2: Filing and Organizing\",\"created\":\"20200603003811441\",\"description\":\"In which we learn how to create and organize tiddlers in ways that make them easy to find and reuse later.\",\"list\":\"Searching [[Browsing Your Tiddlers]] [[Tiddler Titles]] [[Naming Conventions]] [[Slicing Up Content]] [[Creating Hierarchies with a Table of Contents]] [[Ordering Tiddlers]] [[Creating Evergreen Notes]]\",\"modified\":\"20210327172736911\",\"parent\":\"Outline\",\"tags\":\"Chapter\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"With only a few tiddlers, finding things is no big deal. But if you're serious enough about organizing information to be interested in TiddlyWiki, you're likely planning to have a lot of content, so you'll need something better than reading through the list of recently changed items.\\n\\nIt's important to remember that while TiddlyWiki has excellent functionality for searching and querying tiddlers, it's a ''garbage-in, garbage-out'' tool: its ability to locate ideas and find connections between them is only as good as your commitment to understanding what information you're putting in, how you might want to use it, and how you should organize it. TiddlyWiki is your partner in understanding your notes and your ideas, not a magic box that spits insights back at you after you follow a prescriptive set of steps. We already discussed this mindset in some detail in the previous chapter, but as we look at the mechanisms for finding things in this chapter, we'll keep coming back to the habits you need to make them work well.\\n\\n!! In this chapter\\n\\n{{||ChapterOutlineTemplate}}\"},\"Filtering and Formatting\":{\"title\":\"Filtering and Formatting\",\"caption\":\"3: Filtering and Formatting\",\"created\":\"20201125195211013\",\"description\":\"In which we learn how to use filters to answer questions about our notes, like “What are the email addresses of all the people who went to X meeting?”, or “At what meetings attended by Jane did we discuss X concept?”. We'll also dig into HTML and widgets, which allow us to create tiddlers that use complex formatting and update automatically when other tiddlers are changed.\",\"list\":\"Filters [[Using Filter Expressions]] [[Anatomy of Filter Steps]] [[Common Filter Operators]] HTML Widgets [[Your First Dynamic List]] Comments [[When Things Go Wrong]]\",\"modified\":\"20210409141729452\",\"parent\":\"Outline\",\"tags\":\"Chapter\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"One of the things TiddlyWiki does best is selecting tiddlers that match certain criteria and remixing them into different forms. This chapter explores these capabilities in two phases.\\n\\n# We'll learn how to write ''filters'' to choose tiddlers that match almost any criteria you can think of.\\n# We'll take a deeper dive into wikitext by learning the basics of the formatting language ''HTML'' and its TiddlyWiki extensions, which we will continue to use throughout the rest of the book.\\n\\nAt the end, we'll bring these topics together by creating formatted lists of tiddlers that automatically update to match the results of a filter, and we'll discuss some troubleshooting skills to be used when these features don't work as expected.\\n\\n!! In this chapter\\n\\n{{||ChapterOutlineTemplate}}\"},\"Filters and Transclusions\":{\"title\":\"Filters and Transclusions\",\"created\":\"20200604030325277\",\"description\":\"TiddlyWiki can transclude the output of a filter, or transclude a variable or field into a filter.\",\"modified\":\"20210818210356183\",\"parent\":\"Variables, Macros, and Transclusions\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Filters and transclusions interact in two useful ways:\\n\\n* We can ''transclude the result of a filter''.\\n* We can ''transclude the value of a variable or tiddler field into a filter''.\\n\\n!! Transcluding the result of a filter\\n\\nAs we know, we can transclude the `text` field of a tiddler by placing its title in `{{double curly braces}}`. We can transclude the result of a filter expression by placing it in `{{{triple curly braces}}}`; this is sometimes called a ''filtered transclusion''. Here's a filtered transclusion of the names of the alphabetically first five sections in this book:\\n\\n{{Sn:ChapterFilterTransclusion||MagicSnippet}}\\n\\n(The `all[tiddlers+shadows]` step is required here and in many live examples to come because of the way //Grok TiddlyWiki// is packaged; in your own wiki, you wouldn't need this step. If you're too curious to wait for the explanation, jump ahead to [[Shadow Tiddlers]].)\\n\\nThe spaces directly inside the curly braces are not required, but they're highly recommended: if you leave them out, there are so many brackets next to each other that it is nearly impossible to tell whether you've inserted the right number of them.\\n\\nLet's open up the `MeetingList` tiddler in our example wiki and create a list of meetings using a similar filter:\\n\\n```html\\n{{{ [tag[Meeting]] }}}\\n```\\n\\nYou'll want to put a blank line above and below this line -- otherwise, all the titles will be run together (this is the [[block-versus-inline-mode thing|Block Mode and Inline Mode]] again).\\n\\nThis is a really quick-and-dirty way of creating a list which can come in handy occasionally, but this syntax is most commonly used when we want to use a filter to create or manipulate some text and include it somewhere, either directly in the body of a tiddler or as an attribute of a widget or HTML tag. For instance, suppose we want to display a count of how many meetings we currently have notes on:\\n\\n```html\\nThere are {{{ [tag[Meeting]count[]] }}} meetings in this wiki.\\n```\\n\\nIf you tweak the filter in your wiki to match this, you'll notice something a little odd, though -- supposing your wiki currently has 2 meetings, 2 is a //link//, to a nonexistent tiddler called `2`. What's up with that?\\n\\nWell, since filters are mostly designed to work with tiddler titles, when you get the output of a filter, TiddlyWiki assumes each item in the output is a tiddler, so it tries to be helpful and link it. Certain filter operators, however -- like `count[]`, or `get[]` -- will break this assumption. Fortunately, if you're fussy about having pointless links show up, overriding the default is easy -- we simply use the `$text` widget, which tells TiddlyWiki that we want something to be treated as plain text rather than wikitext:\\n\\n```html\\nThere are <$text text={{{ [tag[Meeting]count[]] }}} /> meetings in this wiki.\\n```\\n\\n\\n!! Transcluding things into a filter\\n\\nThe dynamic lists we've created so far are nice, but they've had a significant limitation: no part of the filter can change unless we go in and edit it. Often, we might like to be able to ''make part of the filter a value that changes'', like a field or a variable.\\n\\nLet's think back to the [[exercise|Ex:JaneManagerPhone]] where we included Jane's manager's phone number in the `JaneDoe` tiddler (we've since moved this bit onto the `ContactInformationTemplate`). Suppose that instead of the phone number of the person's manager, we want to list the names and phone numbers of all people listed in the `family` field.\\n\\nAt first, this seems pretty straightforward:\\n\\n```html\\n<ul>\\n\\t<$list filter=\\\"some filter\\\">\\n\\t\\t<li>{{!!title}}: {{!!phone}}</li>\\n\\t</$list>\\n</ul>\\n```\\n\\nBut what do we put as the filter to retrieve the contents of the `family` field? We can't directly name the tiddler we want to retrieve the field from (e.g., `JaneDoe`), since this snippet would then only work in Jane's tiddler. Instead, we need to refer to a value on the [[current tiddler|Templates and the Current Tiddler]] somehow. Our first thought might be to define a macro, like we did in the manager exercise:\\n\\n```html\\n\\\\define myfilt(people)\\n[enlist[$people$]]\\n\\\\end\\n```\\n\\nThe `enlist` filter operator takes a list field, with values separated by spaces or wrapped in `[[double square brackets]]`, and splits it apart into individual tiddler names. If we left `enlist` out, then we'd be looking for a tiddler called `JohnDoe EmilyDoe` (the exact text that's in the `family` field of the `JaneDoe` tiddler), instead of the two tiddlers `JohnDoe` and `EmilyDoe` (what we meant).\\n\\nOK, now let's just pass the results of calling that macro to the `$list` widget:\\n\\n```html\\n<$list filter=<<myfilt ...>> >\\n```\\n\\nWait a sec…how do we call `myfilt` with the value of the `family` field? `<<myfilt {{!!family}}>>` sounds nice, but isn't valid. We have to use a `$macrocall` widget to pass transclusions as parameters to a macro. But sadly, this isn't valid syntax either:\\n\\n```html\\n<$list filter=<$macrocall $name=\\\"myfilt\\\" people={{!!family}}/>>\\n```\\n\\nYou can't put a widget inside an attribute of another widget. We could turn the result of the macro call into a variable that we could pass to the `filter` attribute of the `$list` widget:\\n\\n```html\\n<$set name=filtersnippet value=...\\n```\\n\\n…Wait, same problem! Dang it!\\n\\nThere is in fact a way to solve this problem with macros; we'll learn how to do it in [[Using Variables in Macros]]. But it should be clear that using a macro here is a whole lot more work than we want to deal with. All we really want is to pass the contents of the `family` field into the `enlist` operator.\\n\\nHere's the syntax that allows us to do that.\\n\\n```html\\n<ul>\\n\\t<$list filter=\\\"[enlist{!!family}]\\\">\\n\\t\\t<li>{{!!title}}: {{!!phone}}</li>\\n\\t</$list>\\n</ul>\\n```\\n\\nNotice that there is only ''one set of curly braces'' in the filter expression, rather than two, just like there is only one set of square brackets in their place if you're providing a value that doesn't change.\\n\\nIf the value we wanted to use was in a variable rather than a tiddler field, we could use single angle brackets:\\n\\n```html\\n<ul>\\n\\t<$set name=\\\"familyfield\\\" value={{!!family}}>\\n\\t\\t<$list filter=\\\"[enlist<familyfield>]\\\">\\n\\t\\t\\t<li>{{!!title}}: {{!!phone}}</li>\\n\\t\\t</$list>\\n\\t</$set>\\n</ul>\\n```\\n\\nCurly braces or angle brackets can be used by themselves, not preceded by an operator, to directly introduce an arbitrary value into the filter pipeline. This is the equivalent of specifying a literal title with square brackets:\\n\\n{{Sn:DirectAngleBrace||MagicSnippet}}\\n\\nLastly, you can also transclude the result of macro calls with constant parameters into a filter:\\n\\n{{Sn:MacroCallTransclusion||MagicSnippet}}\\n\\nSometimes a filter parameter that is transcluded into the filter with `{braces}` or `<angle brackets>` is called a ''soft parameter'', in contrast to an unchanging ''hard parameter'' specified with `[square brackets]`.\\n\\n\\n!! Side note\\n\\nActually, there's an even easier if not immediately intuitive way to make the family list, and this would likely be what you'd want to do in a real-world situation:\\n\\n```html\\n<ul>\\n\\t<$list filter={{!!family}}>\\n\\t\\t<li>{{!!title}}: {{!!phone}}</li>\\n\\t</$list>\\n</ul>\\n```\\n\\nThat may look weird right now, but when we get to [[Multi-Run Filters]], you'll understand why this works. For now, this is more a curiosity than anything else; it certainly won't work in all situations in which you might want to substitute a field or variable value into a filter, so what we learned above is still important.\\n\\n\\n!! Exercises\\n\\n{{Ex:TiddlersContainingWikiTitle||ExerciseTemplate}}\\n{{Ex:AllFamilyInformation||ExerciseTemplate}}\\n{{Ex:WikipediaLinkWithoutMacro||ExerciseTemplate}}\\n{{Ex:WikipediaLinkTemplate||ExerciseTemplate}}\\n{{Ex:DefaultToField||ExerciseTemplate}}\\n{{Ex:WikiStatistics||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\\n\"},\"Filters\":{\"title\":\"Filters\",\"created\":\"20200530170321923\",\"description\":\"Filters are a lightweight query language used primarily to select tiddlers.\",\"modified\":\"20210409151506904\",\"parent\":\"Filtering and Formatting\",\"tags\":\"Concept Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"It's time to introduce our sixth [[basic TiddlyWiki concept|Concept]]: the ''filter''.\\n\\nTiddlyWiki filters are a lightweight query language used primarily to select tiddlers (they have a few other tricks up their sleeve, like doing math). If you're familiar with Excel or another spreadsheet application, TiddlyWiki filters are kind of like formulas -- while you could have a useful wiki without filters, filters provide a kind of general-purpose glue that lets you avoid a lot of manual work.\\n\\nYou can do ad-hoc searches with filters. You can also use them to embed dynamic lists of tiddlers or content into other tiddlers. Like Excel does with formulas, TiddlyWiki is constantly checking and recalculating the contents of these lists, so as soon as you create or change a tiddler that matches, the contents of your list will update. This is where the real magic of TiddlyWiki starts to show up.\\n\\nYou can read about the syntax of filters in the following two sections, [[Using Filter Expressions]] and [[Anatomy of Filter Steps]], and see some basic filter techniques in [[Common Filter Operators]].\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Front Matter\":{\"title\":\"Front Matter\",\"caption\":\"Front Matter\",\"created\":\"20200605170912534\",\"description\":\"In which we examine why you would want to use TiddlyWiki, why you would want to learn it from this book, and how the book can teach you TiddlyWiki.\",\"list\":\"[[Welcome to Grok TiddlyWiki]] [[Why TiddlyWiki?]] [[Philosophy of Grok TiddlyWiki]] [[How to Use This Book]]\",\"modified\":\"20210325120310802\",\"parent\":\"Outline\",\"tags\":\"Chapter\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"//Grok TiddlyWiki//’s front matter explains why you should care about TiddlyWiki, why you should care about this book, and how you can best use the book. If that sounds important, read on; if it sounds boring, proceed to the first chapter, [[The Shape of TiddlyWiki|The Shape of TiddlyWiki]].\\n\\n!! In this chapter\\n\\n{{||ChapterOutlineTemplate}}\"},\"Getting Help\":{\"title\":\"Getting Help\",\"created\":\"20200822204627346\",\"description\":\"Where to look and who to ask for help on TiddlyWiki if you can't figure something out yourself.\",\"modified\":\"20210502164446089\",\"parent\":\"Resources\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The best place to get help on TiddlyWiki is the [[TiddlyWiki Google group|https://groups.google.com/g/tiddlywiki]]. If you are ever not sure how to accomplish something, searching the archives is quite likely to find either a drop-in solution or the insight you need to solve the problem yourself. If you can't find anything relevant, you can start a new thread -- people are invariably welcoming and helpful.\\n\\nWhen starting a new thread about [[a problem you're experiencing|When Things Go Wrong]], be sure to [[ask a good question|https://medium.com/@gordon_zhu/how-to-be-great-at-asking-questions-e37be04d0603]]; not only will you look like you care about other people's time and be more likely to get a response, but you'll learn more, produce an entry in the group archives that will be more likely to help others in the future, and possibly even solve your problem while writing the question.\\n\\nBesides technical questions about how to use TiddlyWiki, the group is also a great place to discuss philosophical and practical questions about TiddlyWiki.\\n\\nYou also shouldn't miss:\\n\\n* The [[documentation|https://tiddlywiki.com/]] (enough said)\\n* The [[dev wiki|https://tiddlywiki.com/dev/]], an addendum to the manual with information on things like creating plugins and writing JavaScript modules for TiddlyWiki\\n* [[The Book of TiddlyWiki: Advanced Customization|https://my-tw-notes.droppages.com/TheBook.pdf]], a deeper dive into many of the concepts discussed in this book, particularly the stuff in Chapters 6 and 7, and a great reference if you're not sure where to start with a particular customization.\\n* [[Standard Nomenclature|https://anthonymuscio.github.io/#Standard%20Nomenclature]], an exhaustive list of all the brackets and quotes and other mysterious syntax of [[wikitext|Wikitext]]. It's likely to be overwhelming for beginners, but once you've worked through most of this book, it may be quite helpful.\"},\"Getting Technical\":{\"title\":\"Getting Technical\",\"caption\":\"8: Getting Technical\",\"created\":\"20200822193159541\",\"description\":\"In which software developers and other computer geeks can learn how to extend and interact with TiddlyWiki using JavaScript, CSS, and external programs.\",\"list\":\"[[JavaScript Macros]] Stylesheets [[Creating Plugins]] [[Writing Shell Scripts Against a TiddlyWiki]]\",\"modified\":\"20210820160548929\",\"parent\":\"Outline\",\"tags\":\"Chapter\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"This chapter differs from the others in the book in that it discusses how TiddlyWiki ''integrates with other technologies'' -- JavaScript, CSS, shell scripts, and so on. You may not have the technical knowledge or previous experience to benefit from some or all of these sections, so they are totally optional and not a necessary part of broad TiddlyWiki expertise, but if some of them look interesting and in line with your other skills, feel free to explore!\\n\\n!! In this chapter\\n\\n{{||ChapterOutlineTemplate}}\"},\"Getting the Current Tiddler Right on Drafts\":{\"title\":\"Getting the Current Tiddler Right on Drafts\",\"created\":\"20210206181426380\",\"description\":\"The side-by-side preview won't display correctly when the current tiddler is used in certain ways, but you can work around it.\",\"modified\":\"20210317011739772\",\"parent\":\"Tips and Tricks\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"It's likely that you will often include content that depends on the value of the current tiddler in your tiddlers. This can sometimes get you in trouble if you're trying to see that content in the side-by-side preview while editing a tiddler. Specifically, the preview works fine if referring to fields on the current tiddler (since those will also be fields on the [[draft tiddler|Browsing Your Tiddlers]]), but it doesn't work if the current tiddler's title is used to retrieve content from somewhere else (since the tiddlers you aren't editing won't have their content change because you're editing a draft).\\n\\nFor instance, imagine we are looking at a contact tiddler and we want to find all tiddlers that have a `family` list field containing the current contact. We might say:\\n\\n```html\\n<<list-links \\\"[contains:family<currentTiddler>]\\\">>\\n```\\n\\nThis will display OK on the standard [[ViewTemplate|The View Template]] while viewing the tiddler, but will show no output in the preview when editing the tiddler, because the current tiddler at that point is actually called something like “Draft of My Contact”.\\n\\nIf this gets annoying enough to be worth fixing, there is an easy fix: we just need to check if the current tiddler is a draft tiddler, and if it is, ''set the current tiddler to the tiddler this is a draft of'' instead. The original tiddler can be found in the `draft.of` field of the draft.\\n\\n```html\\n<$tiddler tiddler={{{ [all[current]is[draft]then{!!draft.of}else<currentTiddler>] }}}>\\n    <<list-links \\\"[contains:family<currentTiddler>]\\\">>\\n</$tiddler>\\n```\\n\\n(The `then` operator outputs its parameter if the input is non-empty, while the `else` operator outputs its parameter if the input is empty.)\\n\\nNotice that with the pattern above, if you are relying on both the name of the current tiddler //and// the values of its fields, your changes to the fields won't appear until you save since the current tiddler is now changed to the original rather than the draft. If that's a problem, you can always set a variable other than `currentTiddler` to the value of the original tiddler, and use `currentTiddler` when referring to fields and the other variable when referring to the name.\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Global Macros\":{\"title\":\"Global Macros\",\"created\":\"20200718014509693\",\"description\":\"Macros can be made available to all tiddlers in the wiki, or to some subset of tiddlers.\",\"modified\":\"20210316172113253\",\"parent\":\"Looking Under the Hood\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"So far, macros have been very useful for reducing repetition and implementing [[Text Substitution]] within tiddlers, but we haven't seen any way to make them available in more than one tiddler, which has somewhat limited their usefulness.\\n\\nNow that we've looked at [[system tiddlers|System Tiddlers]], however, there's an easy way to make a macro available in all tiddlers, which is a useful shortcut if you find yourself needing the same formatting or snippets of text over and over again and a [[template|Templates and the Current Tiddler]] isn't convenient. Such macros are commonly referred to as ''global macros''.\\n\\nThe trick is a special tag, [[$:/tags/Macro]] (don't forget the capital `M` -- as always, tiddler titles are case-sensitive). When TiddlyWiki displays a tiddler, it looks through all tiddlers with this tag, gathers the macros they contain, and effectively prepends them to the tiddler being displayed. (It's a little more complicated behind the scenes, but it's safe to think of it this way.) Therefore, they're available for use in every tiddler.\\n\\n\\n!! Semi-shared macros\\n\\nIf you want to make a macro available in more than one tiddler, but not in all of them, another option is to use the `\\\\import` pragma. This takes a filter as an argument, so to import macros from all tiddlers tagged `MyAwesomePrivateMacros`, you would put the following at the top of a tiddler:\\n\\n```html\\n\\\\import [tag[MyAwesomePrivateMacros]]\\n```\\n\\nInternally, TiddlyWiki actually imports your global macros using this `\\\\import` pragma on the //page template// (`$:/core/ui/PageTemplate`), which is responsible for transcluding all other parts of the wiki that appear on screen at any given time.\\n\\n!! Exercises\\n\\n{{Ex:MakeGlobalMacros||ExerciseTemplate}}\\n{{Ex:ReadingDefaultMacros||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"HTML\":{\"title\":\"HTML\",\"created\":\"20201124235605503\",\"description\":\"HTML is a simple formatting language used to describe web pages, including TiddlyWikis. We can go “down a level” from wikitext to HTML when we need a bit more control over presentation.\",\"modified\":\"20210818005856549\",\"parent\":\"Filtering and Formatting\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"''HTML'' (which stands for //Hypertext Markup Language//, but nobody calls it that) is a markup language that underlies all web pages and a substantial number of desktop and mobile applications, including TiddlyWiki. Your web browser, or TiddlyDesktop if you're displaying your wiki in TiddlyDesktop, reads HTML code to determine what to display on the screen.\\n\\nIf you're a web developer or otherwise familiar with HTML already, you can skim this section, but it's still worth reading through it – it will highlight how wikitext and HTML work together, as well as how TiddlyWiki may differ slightly from the HTML standards you usually work with (for instance, different versions of HTML treat self-closing and void tags differently).\\n\\n\\n!! HTML and wikitext\\n\\nHTML is not a difficult language, but it is somewhat verbose, so in TiddlyWiki we usually write our tiddlers in the lighter-weight and more convenient [[wikitext|Wikitext]] syntax instead. TiddlyWiki then converts the wikitext to HTML for us prior to handing it to the browser to display. However, when building more complicated formatting or dynamic tiddlers, it's often necessary, or sometimes just easier, to go a layer down and work directly in HTML.\\n\\nWe don't have to choose whether to use HTML or wikitext in a given tiddler. In fact, wikitext is almost a perfect superset of HTML -- that is, valid HTML is also valid wikitext. (If you're familiar with HTML, there are a couple of exceptions; you can only use tags that are valid in the `<body>` section of an HTML document, and whitespace is meaningful in wikitext in a few ways that it isn't in HTML.)\\n\\nLet's suppose that we have a simple bulleted list written in wikitext:\\n\\n{{Sn:HtmlWikitextList||MagicSnippet}}\\n\\nLet's further suppose that for some reason, we don't like the wikitext syntax. Instead, we can write the same bulleted list in HTML:\\n\\n{{Sn:HtmlHtmlList||MagicSnippet}}\\n\\nAs you can see, the output of the two snippets is identical.\\n\\n\\n!! HTML tags\\n\\n`<ul>`, `<li>`, `</ul>`, and `</li>` are called ''tags''. There are many different tags, each of which marks a section of text or other HTML markup as having some specific function. For example, `ul` creates an ''unordered list'' (//unordered// meaning that it isn't numbered), while `li` identifies each ''list item'' in the list. {{Ltc:TagsComeInPairs||LieToChildrenTemplate}}; the start of a section of formatting is marked with an ''opening tag'' (`<ul>`), and the end is marked with a ''closing tag'' (`</ul>`), distinguished from an opening tag by the use of a forward slash before the name of the tag.\\n\\nBe careful not to use a //backslash// for a closing tag -- it won't work, and it may screw up the formatting for the remainder of the tiddler. The backslash `\\\\` slants the opposite way from the forward slash `/`. On a US keyboard, the forward slash is in the lower-right on the same key as the question mark; the backslash is on an extra-long key above the enter key. If you have trouble remembering which is which, imagine the two slashes forming a hill which you climb over in reading order from left to right: `/\\\\`. After you go up the hill and you're going //back down// the hill, that's the //back//slash.\\n\\nThe characters `<` and `>`, in the context of HTML tags, are usually called ''angle brackets'' (not “less than” and “greater than”).\\n\\nIf you're reading HTML out loud, you can pronounce the tags “open” and “close” plus the contents of the tag. So `<li>` is “open ell eye” and `</li>` is “close ell eye”.\\n\\n\\n!! Elements and content\\n\\nThe part of an HTML document between an opening tag and its matching closing tag, including the tags themselves, is called an ''element''. So the first //`li` element// in the example above is `<li>Item 1</li>`.\\n\\nThe ''content'' (sometimes called the ''body'') of an element is the part between its opening and closing tags, excluding the tags. So the content of the `<ul>` element in the example above is the two `<li>` elements, and the content of the first `<li>` element is the text `Item 1`.\\n\\n\\n!! HTML attributes\\n\\nHTML elements can have one or more ''attributes''. An attribute is found inside the opening tag of its element and looks like this:\\n\\n{{Sn:HtmlOrangeList||MagicSnippet}}\\n\\nIn this example, `style` is an attribute of the `ul` element, and its ''value'' `color: orange;` gives some more details about how we want to format the list (namely, that the text should be orange).\\n\\nIf we want more than one attribute, we simply put more of them inside the tag, separated from the other attributes by a space:\\n\\n```html\\n<ul class=\\\"mylist\\\" style=\\\"color: orange;\\\">\\n```\\n\\nYou can leave out the quotes around the value if and only if it doesn't contain any spaces or special characters. So this is OK:\\n\\n```html\\n<ul class=mylist>\\n```\\n\\nBut this is wrong:\\n\\n```html\\n<ul style=color: orange;>\\n```\\n\\nIf in doubt, just put in the quotes. Some people consider it better style to include them in all circumstances anyway.\\n\\n\\n!! Finer points\\n\\n{{$:/plugins/sobjornstad/TakeAway/ContextualHelp/DetailsWidget}}\\n\\n<$details summary=\\\"Self-closing tags\\\">\\n\\nIf you don't want to put any content in an element, you can close it immediately. For example, the following creates a bullet point with no associated text:\\n\\n{{Sn:HtmlNonSelfClosing||MagicSnippet}}\\n\\nThis is irritating to type when you work with HTML all day, though, so the folks who developed HTML added this shorthand notation:\\n\\n{{Sn:HtmlSelfClosing||MagicSnippet}}\\n\\n`<li />` is called a ''self-closing tag''. The space before the slash is optional; many people find it easier to read with the space.\\n\\n\\n</$details><$details summary=\\\"Void elements\\\">\\n\\nEarlier we said tags always come in pairs, but this isn't quite true. Certain elements have only an opening tag and no closing tag, because they cannot have any content. These are called ''void elements''. For example, the `<br>` element creates a line break (i.e., the text following the `<br>` tag starts on a new line). It wouldn't make any sense for a line break to have content, so you don't close that element. There is no such thing as a `</br>` tag.\\n\\nThe void elements are as follows:\\n\\n```html\\n<area>, <base>, <br>, <col>, <command>, <embed>, <hr>, <img>, <input>, <keygen>, <link>, <meta>, <param>, <source>, <track>, <wbr>\\n```\\n\\nIn practice, you don't need to carefully memorize which elements are void when using TiddlyWiki. If you accidentally use a self-closing tag for a void element, nothing bad will happen, and if you accidentally use a full closing tag for a void element, the tag will literally appear in the output (try it with `</br>`), at which point you can correct it and go on your merry way. However, it's helpful to be aware that such things as void elements exist so you know what's going on when a tag like `</br>` suddenly appears in your output.\\n\\n\\n</$details><$details summary=\\\"Nested elements\\\">\\n\\nElements can be ''nested'' (placed inside each other) to an arbitrary depth. Not all elements make sense placed inside each other, but many of them do. For instance, to create a multi-level list, you simply place a `<ul>` element inside an `<li>` element:\\n\\n{{Sn:HtmlCorrectlyNestedList||MagicSnippet}}\\n\\nTags need to be closed in the opposite order they were opened. For instance, if you accidentally write the following instead of the previous example, the part of the page after the list is likely to look weird:\\n\\n{{Sn:HtmlIncorrectlyNestedList||MagicSnippet}}\\n\\n(You might not see the issue right away -- if so, examine the snippet carefully until you find it. As you work more with HTML, your eyes will start to light on the mistakes much faster.)\\n\\n\\n</$details><$details summary=\\\"Whitespace\\\">\\n\\nIn general, whitespace in HTML does not matter. Specifically, ''any number of spaces or newlines are treated exactly the same as one space''. You can even add extra spaces in some spots, like before the closing angle bracket at the end of a tag. So we could just as easily write:\\n\\n{{Sn:HtmlNoWhitespace||MagicSnippet}}\\n\\nOr:\\n\\n{{Sn:HtmlWackoWhitespace||MagicSnippet}}\\n\\nHowever, it is hopefully obvious that both of these “styles” are bad form, as they're much harder to read. The standard is to start a new line after each opening tag that encloses an element too large to fit comfortably on a single line, and optionally indent a consistent number of spaces (usually 2 or 4) when doing so. Otherwise, avoid extra whitespace. I've done this in the real examples so far in this section and will continue to do it for the rest of the book.\\n\\nNow, the statement that whitespace doesn't make a difference isn't //entirely// true in TiddlyWiki. Blank lines are significant in wikitext -- specifically, to start a new paragraph, you leave at least one blank line. For this reason, if you're mixing wikitext and HTML, there are some situations where the number of newlines you enter matters. We'll talk about this more in the next chapter, in [[Block Mode and Inline Mode]]. For now, if something isn't displaying the way you expect in a mixed-wikitext-and-HTML situation, try ''adding or removing blank lines'' around the thing that isn't displaying the way you expect.\\n\\n\\n</$details>\\n\\n!! HTML is generous\\n\\nIt's worth noting that unlike many other formatting or programming languages, browsers and other tools that read HTML will “be generous in what they accept” -- that is, they will ''try to guess what you meant'' even if your HTML isn't written correctly. Most of the time they do a very good job at this; for example, if you forget to close a tag, close tags in the wrong order, or forget a quotation mark somewhere, most of the page will almost certainly still be readable, and it may even appear as if nothing is wrong at all.\\n\\nHowever, this same generosity can be a source of frustration when the browser guesses wrong and the page doesn't look the way you expect it to, since it will not produce a detailed error message like other languages will. If your HTML output doesn't look right, go back and take a close look to make sure you didn't make any typos and each opening tag has a matching closing tag in the correct location. The mistake will ordinarily be at the point where the page first starts looking weird.\\n\\n\\n!! Resources\\n\\nIn general, the hardest part of HTML is knowing what tags and attributes to use; we learned almost everything else there is to know about HTML above. We'll be introducing most of the tags you need to be familiar with over the remainder of this book. If you ever don't remember what tag to use, you can try Google-searching something like `HTML tags for bulleted list`, or W3Schools has a popular [[reference guide|https://www.w3schools.com/tags/default.asp]] listing all standard HTML tags.\\n\\n!! Exercises\\n\\n{{Ex:ViewSource||ExerciseTemplate}}\\n{{Ex:GoogleLink||ExerciseTemplate}}\\n{{Ex:ImageHtml||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Hiding and Showing Things\":{\"title\":\"Hiding and Showing Things\",\"created\":\"20210120034946005\",\"description\":\"Portions of tiddlers can be hidden and shown selectively using the `$list` widget and the `$reveal` widget.\",\"modified\":\"20210418165505272\",\"parent\":\"Tips and Tricks\",\"showtest\":\"\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Oftentimes you want to ''show content only in certain circumstances'' (programmers might say an //if-statement// or //conditional// is required). There are a number of ways we can accomplish this. In many cases, you'll have your choice of several methods, but some are more effective or readable than others in individual situations.\\n\\n\\n!! The `$list` widget + a filter\\n\\nIn several earlier [[examples|Text Substitution]] and [[exercises|Ex:ContactsOnlyOnContacts]], we've seen that the `$list` widget can be used to accomplish this, but let's review how that works, as it's a versatile but unintuitive technique.\\n\\nThe contents of a `$list` widget are rendered once for each element in its associated filter. If we can ensure that the filter we use ''returns either one or zero output tiddlers'', we can use it to control showing or hiding some content.\\n\\nLet's suppose we'd like to display a transclusion of the template `ProjectTableOfContents` at the bottom of all project tiddlers, but only if the tiddler `$:/config/ShowProjectTocs` is set to `yes`. We might start with placing this on a tiddler tagged with `$:/tags/ViewTemplate`:\\n\\n```html\\n<ul>\\n<$list filter=\\\"[{$:/config/ShowProjectTocs}match[yes]]\\\">\\n    <$list filter=\\\"[all[current]tag[Project]]\\\">\\n        {{||ProjectTableOfContents}}\\n    </$list>\\n</$list>\\n</ul>\\n```\\n\\nThere's a big problem with this snippet, though, which you'll notice if you create a `ProjectTableOfContents` template and try it in your wiki: the current tiddler is messed up by the outer `$list` widget, so the inner `$list` widget never finds anything (unless you happen to have a tiddler called `yes` tagged `Project`, in which case it will always display the template with the content appropriate to the `yes` tiddler!). Fortunately, there's an easy fix: add `variable=_` to the outer widget, so that it doesn't alter the `currentTiddler` variable. (`_` is a concise, easy-to-type variable name that is commonly understood to mean you don't care about and are not using the value, but TiddlyWiki doesn't care what you name it -- you could just as easily call the variable `trash` or `not-used` or `idontcare` if you prefer.)\\n\\nHere's an improved version:\\n\\n```html\\n<ul>\\n<$list filter=\\\"[{$:/config/ShowProjectTocs}match[yes]]\\\" variable=_>\\n\\t<$list filter=\\\"[all[current]tag[Project]]\\\">\\n\\t\\t{{||ProjectTableOfContents}}\\n\\t</$list>\\n</$list>\\n</ul>\\n```\\n\\nIf you're not comparing against a single tiddler, whether the current tiddler or a hard-coded one like `$:/config/ShowProjectTocs`, you won't be able to guarantee that there is only one match. In this case, you need to use the `first[]` operator to avoid having the contents of the widget unexpectedly repeat a bunch of times. For instance, you might want to know if any tiddlers in the wiki have been modified in the last N days (using the [[days operator|https://tiddlywiki.com/#days%20Operator]]). You might try something like this:\\n\\n{{Sn:NumDaysBack||MagicSnippet}}\\n\\nThat didn't work so well! Try adding the `first[]` operator to the snippet to correct it.\\n\\nAlso notice the use of the `emptyMessage` attribute to the `$list` widget above. This text is displayed if there are 0 results for the filter, and thereby saves us from having to create a second `$list` widget with the opposite condition. If you want to include a large amount of text in the empty condition, you can place it in a macro and call the macro as the value of this attribute.\\n\\n!! The `$reveal` widget\\n\\nA method we haven't seen yet is the `$reveal` widget. Rather than using a filter, this widget includes content based on ''whether a specific field matches a specific value''. Thus, it's somewhat less powerful but often more convenient. Here's the basic syntax:\\n\\n{{Sn:RevealWidgetTest||MagicSnippet}}\\n\\nIn addition to `match`, as shown above, `type` can be set to `nomatch` to invert the match (`match` and `nomatch` widgets are often used in pairs to show one thing if something is true and another if it's not). There are also options to allow the widget to be used to compare numeric values (e.g., only show if a field value is greater than 5); check up the documentation for details.\\n\\nThe `$reveal` widget has one major limitation worth noting: unlike the `$list` widget, it ''creates a new `div` or `span`'' HTML element to wrap the revealed content in. This means you can end up with corrupted output if you use it in certain contexts where one of those elements doesn't belong, for example inside a table (notice the column header is the wrong width when expanded):\\n\\n{{Sn:BrokenRevealTable||MagicSnippet}}\\n\\n\\n\\n!! `$set` with a filter\\n\\nSometimes you don't need to include entirely different content in a tiddler depending on a condition, you just need to ''set a variable to a different value''. Adding `filter` and `emptyValue` parameters to the `$set` widget allows you to set the value of a variable to one of two values, the normal `value` if the filter has more than 0 results, and `emptyValue` if it has 0:\\n\\n{{Sn:SetYourName||MagicSnippet}}\\n\\n\\n!! Fallbacks\\n\\nSeveral widgets will ''display their content if they find no matches'', eliminating the need to create a `$list` or `$reveal` widget at all.\\n\\n\\n!!! `$transclude` fallbacks\\n\\nThe `$transclude` widget is the long syntax for transcluding a field of a tiddler. The tiddler name is optional; if not provided it defaults to the current tiddler.\\n\\n{{Sn:TranscludeWidget||MagicSnippet}}\\n\\nIn addition to its ability to override whether parsing occurs in block or inline mode, as discussed in [[Block Mode and Inline Mode]], you can use the content of a `$transclude` widget as a fallback if the field doesn't exist.\\n\\n{{Sn:TranscludeFallback||MagicSnippet}}\\n\\n(Be aware that the `$transclude` widget //does not change the current tiddler// -- in other words, it treats the transcluded tiddler as a [[template|Templates and the Current Tiddler]] for the current tiddler. If you want to get the equivalent of a straight `{{transclusion}}`, you need to wrap it in a `$tiddler` widget, as described in [[Miscellaneous Widgets]].)\\n\\n\\n!!! `$view` fallbacks\\n\\nThe `$view` widget is much like the `$transclude` widget but displays the field contents in different formats, like dates or URL-encoded text, rather than wikifying them. It supports fallbacks exactly the same way as `$transclude` does:\\n\\n{{Sn:ViewFallback||MagicSnippet}}\\n\\n\\n!! Exercises\\n\\n{{Ex:ViewTemplateExplicitHide||ExerciseTemplate}}\\n{{Ex:ViewTemplateExplicitHideReveal||ExerciseTemplate}}\\n{{Ex:BacklinksConditionalDisplay||ExerciseTemplate}}\\n{{Ex:EmptyAtField||ExerciseTemplate}}\\n{{Ex:ConditionalSetAt||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"How to Use This Book\":{\"title\":\"How to Use This Book\",\"created\":\"20200605170324446\",\"description\":\"How the book plans to do it, if you cooperate.\",\"modified\":\"20210818005827783\",\"parent\":\"Front Matter\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"//Grok TiddlyWiki// is a TiddlyWiki itself and incorporates a few interface features and learning tools that may be new to you. The system is hopefully intuitive enough that you can figure most of it out on your own, but if you prefer to get an overview of it first, or if you get confused by something, the resources in this section will help.\\n\\n!! Video tour\\n\\nThe [[Grok TiddlyWiki Tour|https://www.youtube.com/watch?v=vUkNxbaNHcY]] demonstrates how to navigate around //Grok TiddlyWiki// and use exercises, live examples, and takeaways. If you're in a hurry or videos aren't your thing, the text below contains all the same information.\\n\\n<iframe style=\\\"width: 100%;\\\" height=\\\"300\\\" src=\\\"https://www.youtube.com/embed/vUkNxbaNHcY\\\" title=\\\"YouTube video player\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe>\\n\\n\\n!! Reading and navigating\\n\\n{{$:/plugins/sobjornstad/TakeAway/ContextualHelp/DetailsWidget}}\\n\\n<$details summary=\\\"Typographical conventions\\\">\\n\\n* [[Internal links|How to Use This Book]] take you to another section in the book. [[External links|https://google.com]] take you to a website outside of //Grok TiddlyWiki// (external links open in a new browser tab).\\n* ''Bold type'' is used to call out important terms and points that you may wish to skim the text for.\\n* //Italics// identify things you select on the screen and terms that may be unfamiliar but are not particularly important.\\n* `Monospaced text` indicates something you type into TiddlyWiki (most often [[wikitext|Wikitext]]).\\n* A {{Ltc:ExampleLtc||LieToChildrenTemplate}} indicates that the statement being made is not strictly accurate. Normally, this is done because the details are more confusing than helpful at this moment, but if you're on a second reading or would just like to dive in deeper, click the link to get the full truth.\\n\\n</$details><$details summary=\\\"Structure and navigation\\\">\\n\\n* The book is organized into ''chapters'' and ''sections''.\\n* You can find a ''hierarchical overview with summaries of each section'' in the [[Outline]], which you can access at any time by clicking //outline// in the sidebar underneath the //Grok TiddlyWiki// title (the sidebar is found at the top of the page if your monitor is too narrow to fit the content and the sidebar side-by-side).\\n* When you click on an internal link, you will navigate to the new section, but the section you were previously in stays open. The ''Open'' tab of the sidebar will let you see all the sections you have open and flip between them, much like tabs in your web browser. You can drag and drop the open sections to reorder them.\\n* The ''Bookmarks'' tab of the sidebar contains any sections you have bookmarked. Bookmark or unbookmark any section by clicking the bookmark button <<textual-button \\\"star-filled\\\">> at the top of the section. As with the //Open// tab, you can drag and drop bookmarks to reorder them.\\n* The ''Contents'' tab of the sidebar contains an abbreviated version of the outline, if you already know what you're looking for.\\n* From the footer of each section, you can ''navigate forwards, backwards, or up a level''. You can also find a list of ''related material'' in the footer; click //show related topics//.\\n* When you open //Grok TiddlyWiki//, any sections that you had open when you stopped reading will reopen, provided that you [[saved your changes|Downloading Grok TiddlyWiki]].\\n\\n</$details><$details summary=\\\"Tools\\\">\\n\\nUnderneath the title and the navigation links (home, outline, exercises, takeaways, donate), you'll see several more buttons. Here's what they do:\\n\\n* <<textual-button \\\"close-all-button\\\">> -- ''Close all sections'' you have open.\\n* <<textual-button \\\"permaview-button\\\">> -- ''copy a //permaview//'', or a link that freezes all your open sections, to your clipboard. If you later click on or paste this link into your browser, you'll be brought back exactly where you were at the time you clicked this button.\\n* <<textual-button \\\"storyview-zoomin\\\">> -- ''change the //story view//''. If you are familiar with TiddlyWiki and would like the [[story river|The TiddlyWiki Interface]] to display more than one section at once, you can switch to the //classic// storyview. The default in //Grok TiddlyWiki// is //zoomin//.\\n* <<textual-button \\\"palette\\\">> -- toggle between ''light and dark mode''.\\n* <<textual-button \\\"save-button\\\">> -- ''save a copy'' of the wiki to your hard drive. Learn more in [[Downloading Grok TiddlyWiki]].\\n* <<textual-button \\\"down-arrow\\\">> -- ''see the rest'' of TiddlyWiki's options.\\n\\n</$details>\\n\\n\\n!! The Trinity of //Grok TiddlyWiki//\\n\\n//Book// is a somewhat misleading way to describe //Grok TiddlyWiki//. GTW is really an interactive learning environment for TiddlyWiki that bundles three complementary modes of learning into one TiddlyWiki:\\n\\n* It ''explains concepts'' using English text and code examples.\\n* It ''assigns exercises'' that help you apply and practice what you've learned.\\n* It ''presents takeaways'', questions about key terms, concepts, or skills, for review as you continue through the book, to help you retain what you've learned over a longer period of time.\\n\\nClick on each mode below for a description of what it entails.\\n\\n<$details summary=\\\"Explanations\\\">\\n\\n//Grok TiddlyWiki// is organized into chapters and sections. Each chapter covers a broad range of related topics, while each section covers one feature of TiddlyWiki, pattern of TiddlyWiki use, or organizational principle. Many sections will take as little as five minutes to read, but others ask you to follow along and do things in TiddlyWiki as you read, and still others are about unfamiliar concepts and may need several readings, so these will take longer. In most cases, the text is followed by exercises and/or takeaways (see below).\\n\\nDespite TiddlyWiki's emphasis on enabling nonlinear thinking, a linear mode of presentation is better for building understanding where it doesn't already exist, so this book is ''designed to be worked through from start to finish''; the sections build on each other, and it may be hard to do some of the later exercises without having done the previous ones. Even if you already know the basics of TiddlyWiki, starting from [[chapter 1|The Shape of TiddlyWiki]] shouldn't be a huge sacrifice. The first parts will go fast if you already know them well, but you may pick up some useful terms, concepts, and features that you haven't run across yet.\\n\\nAlthough I have made some concessions in the interest of placing related material together, the chapters generally go in increasing order of complexity and decreasing order of utility, so you can stop for a while whenever you feel you've learned what you need to know for the time being. If you do need to skip ahead, or you come back to the book later to use it as a reference, I try to link back to previous material required to understand each section, when practical. In addition to appearing throughout the text, all of the links found in a section are aggregated under the //show related topics// link in the footer.\\n\\n\\n</$details><$details summary=\\\"Exercises\\\">\\n\\nThe only way to fully understand what you learn about software is by using it, and if you don't understand what you've learned, you won't remember it either. Thus, for this book to be useful, you'll need to do some ''hands-on exercises''. In some sections of the book, particularly the earlier ones where you don't have much experience of TiddlyWiki yet, you'll be asked to open up your wiki and follow along with the text to see what happens; in others, a concept will first be fully explained, then at the end of the section you'll be asked to use what you've learned to make some changes to your wiki or fix some problems.\\n\\nYou should plan to do ''most or all of the exercises'' to cement your understanding. The exercises are not fun, optional diversions! Aside from the importance of hands-on exercises in developing understanding, some of the exercises guide you into discovering something important about TiddlyWiki on your own, then add additional context and explanation in the answer to the exercise. These insights may or may not be discussed again later in the book, so you'll likely miss some important points if you skip all the exercises.\\n\\nExercises have a letter next to them to indicate about how long I'm guessing they'll take you:\\n\\n* (s), for //seconds// -- from a few seconds to 2 minutes (<$text text={{{ [all[tiddlers+shadows]tag[Exercise]field:length[s]!field:origin[Supplemental Exercises]count[]] }}}/> total)\\n* (m), for //minutes// -- from 2 minutes to 15 minutes (<$text text={{{ [all[tiddlers+shadows]tag[Exercise]field:length[m]!field:origin[Supplemental Exercises]count[]] }}}/> total)\\n* (M), for //minutes//, but bigger -- from 15 minutes to 40 minutes (<$text text={{{ [all[tiddlers+shadows]tag[Exercise]field:length[M]!field:origin[Supplemental Exercises]count[]] }}}/> total)\\n* (h), for //hours// -- 40 minutes or more, up to a couple of hours (only supplemental exercises are this long)\\n\\nOf course, these estimates are not guarantees -- depending on your past experience with tools similar to TiddlyWiki, you might take longer or shorter than average for most exercises, and like when solving a math problem, you might happen to work something difficult out on the first try, or struggle with something for 20 minutes that would have been instantly obvious to you on a different day.\\n\\nIf there are both exercises and takeaways in a given section, you should usually ''do the exercises before proceeding to the takeaways'', as some of the takeaways may check knowledge you won't have until you complete the exercises. (We'll talk about takeaways in a moment.) The headings are always presented in this order, so as long as you don't try to skip ahead, you'll be fine.\\n\\nSome exercises, and some parts of the text, include ''code snippets'' that you are supposed to copy into your own wiki. If you're completely new to TiddlyWiki, I recommend //retyping// these snippets rather than using the copy-paste functionality on your computer. This isn't a hard requirement, but you will get the hang of the [[syntax of the snippets|Wikitext]] faster if you do.\\n\\nWhen you're done with an exercise, you can tick the //Complete// box in the upper-right. This will change its color to make it easy to see what you've completed, as well as mark it off your list in the [[Exercise Browser]], where you can search through all exercises in the book and see a list of the ones you haven't yet completed. (Click //exercises// under the //Grok TiddlyWiki// title to go here at any time.)\\n\\nA number of longer exercises are provided in the [[Supplemental Exercises]] chapter at the end of the book, if you get through most or all of the book and want to try some more guided exercises rather than jumping into implementing your own wikis immediately. You are not expected to do these unless you want to, and they are not included in the exercise counts above.\\n\\nHere's an exercise to try:\\n\\n{{Ex:SampleExercise||ExerciseTemplate}}\\n\\n</$details><$details summary=\\\"Takeaways\\\">\\n\\nWhy are tools like TiddlyWiki often intimidating to newcomers and difficult to learn? One of the biggest reasons is that they present a ''vast array of new terms and concepts''. If you jump into the documentation with no experience, it may well look like complete gibberish. Even when it's partly comprehensible, you'll be spending your mental energy trying to remember the basics, rather than understanding the new ideas presented by what you're reading.\\n\\nHowever, these terms and concepts rarely challenge learners in themselves. Each concept is easy enough to understand at the beginning, at least when the concepts are introduced in an appropriate order and explained in detail, as happens in any decent textbook. When a large number of them appear over a short period of time, though, each concept is quickly forgotten, creating a treadmill of forgetting where learners must keep running just to relearn what they've already ostensibly learned, never mind picking up the new material.\\n\\nThis suggests a way to make learning much easier: all we need to do is ''stop that process of forgetting''. That might sound like a silly claim -- anything sounds easy when you leave out the most important part -- but it turns out there's a straightforward, scientifically backed study method called //spaced repetition// that can virtually eliminate forgetting for any ideas you choose. A spaced-repetition algorithm produces 95% recall for as long as you want; all you have to do is regularly spend a small amount of time reviewing the items the algorithm presents to you. Yet although spaced repetition is extremely powerful, taking advantage of it is often a complex skill in itself and a big time sink when learning a new topic: since most books and learning resources don't use it, learners must understand how to extract the knowledge from the text into spaced-repetition prompts and spend extra time doing so.\\n\\nEnter [[TakeAway|TakeAway Help]], a native TiddlyWiki [[mnemonic medium|https://numinous.productions/ttft/#introducing-mnemonic-medium]] which is making its debut in this book. In a TakeAway-enabled book, most sections end with a heading called //Takeaways//. Instead of you having to identify and rephrase all the important concepts, the author does it for you, extracting the ideas presented in the section into a form that can be efficiently reviewed. (If the author passes over ideas you'd like to remember or phrases them in a way you don't appreciate, you can also edit the author's takeaways or add your own.)\\n\\nTakeaways are prompts in one of two formats:\\n\\n* A ''question-and-answer pair'' (e.g., //What letter does the word “tiddler” start with?// / “t”).\\n* A ''cloze deletion'', or fill-in-the-blank prompt (e.g., //The word “tiddler” starts with the letter {…}.//).\\n\\nTakeaways serve two purposes. First, they allow you to immediately ''check your understanding'' of the concepts to be sure you're reading actively; we've all had the experience of reading a section and then discovering we have no idea what it said. Just think about the answer to each takeaway and click //show answer// to confirm you got it right.\\n\\nSecond, TakeAway will help you ''build long-term understanding'' and prevent you from backsliding by suggesting you periodically review the takeaways you've previously encountered; a banner notification will appear in the book when it's time to review. TakeAway tracks how well you remember each takeaway and uses that information to decide when to show it again. All you have to do is open the text periodically and review the takeaways, and you'll remember the concepts. (For maximum retention and the easiest study sessions, it's best to review as close to daily as possible, but if you miss some days here and there, things will still work fine.)\\n\\nTakeaways mean that it's safe to take a break from working through the text for a while, and you will forget very little of the knowledge you've gained so far -- provided that you continue to open the text and review the takeaways every day or two, which should only take you a few minutes at most. Even if you don't review for a while, you'll be able to pick up what you've forgotten faster by reviewing the takeaways.\\n\\nIf you're already familiar with spaced repetition and prefer using [[Anki|https://apps.ankiweb.net]] to review, an Anki add-on that imports takeaways from the book is also available; see [[the appropriate section of the TakeAway help|TakeAway Help/Studying with Anki]] for how to set that up.\\n\\nHere's a takeaway to try:\\n\\n<div class=\\\"mm-takeaway-example\\\">\\n\\t{{Ta:20210117001839027||$:/plugins/sobjornstad/TakeAway/TakeawayListItem}}\\n</div>\\n\\n</$details>\\n\\n\\n!! Live examples\\n\\n{{Live Examples}}\\n\\n{{Sn:JaneDoeJournalStart||MagicSnippet}}\\n\\n\\n!! Sending feedback\\n\\n//Grok TiddlyWiki// can always be improved, and I hope to publish new versions regularly. If you find a typo or factual error, something doesn't make sense to you or doesn't display correctly on your device, or you have any other questions or suggestions, use the //send feedback// <<textual-button \\\"mail\\\">> link at the bottom of any section or when reviewing any takeaway to email me with an automatic reference to the section or takeaway. If you provide your email address, I will do my best to get back to you.\\n\\nAlternatively, you can use the information on my [[contact page|https://sorenbjornstad.com/contact/]] to get in touch directly.\\n\"},\"Images and Attachments\":{\"title\":\"Images and Attachments\",\"created\":\"20200716024459314\",\"description\":\"Content other than wikitext can be embedded into a TiddlyWiki, or stored outside of it and referenced in a variety of ways.\",\"modified\":\"20210818172314460\",\"parent\":\"More Organizational Tools\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"So far, we've written an awful lot of formatted text. What about including images or other files in the wiki?\\n\\nThis is, perhaps unexpectedly, one of the more troublesome aspects of TiddlyWiki, which is why we've left it until now. Let's talk about how we do it and what concerns we'll have to think about.\\n\\n\\n!! Importing files\\n\\nThis part is slick. Want a file to be part of your TiddlyWiki? Just ''drag and drop it'' out of your computer's file manager onto the TiddlyWiki window. A banner will appear at the top of the screen that says “Drop here.” When you drop the file, a special tiddler called `$:/Import` will appear. Click ''Import'', and a new tiddler is created containing the content. `$:/Import` will show a link to the newly added tiddler.\\n\\nThis works for text, images, PDFs, and even binary files (though this last option is usually a bad idea, as TiddlyWiki can lock up if you try to open the tiddler for a large binary file, and you won't be able to read it anyway). You can import multiple files at once by dragging multiple files; you'll have the chance to review and uncheck any that you don't want before you import.\\n\\nYou can also ''copy content between TiddlyWikis'' this way. For instance, if you wanted a copy of the [[Classifying Tags]] section in your wiki, you could simply grab that link and drag and drop it right onto your wiki window (this doesn't consistently work, however, if you don't have both wikis open in the same web browser -- you may have to try another browser in some cases).\\n\\nIf it's easier than dragging and dropping, you can also click the <<textual-button \\\"import-button\\\">> ''Import'' button on the ''Tools'' tab of the sidebar to select a file to import. In particular, when using TiddlyDesktop with certain operating systems and browsers, it may be tricky to get drag-and-drop to work, but the Import button will almost always work fine.\\n\\nGo ahead and import a file or two into your wiki, including at least one image so we can take a look at that below.\\n\\n\\n!! Putting images in your tiddlers\\n\\nOnce you have an image in your wiki, you probably want to know how to include it in a tiddler. Let's create a new tiddler called `ImageTest` for this purpose.\\n\\nThe easiest way to include it is to simply [[transclude|Transclusions]] it. So if the image tiddler is called `image.png`, use `{{image.png}}`.\\n\\nFor more control over the image, you can use a special link syntax, `[img [image.png]]` (notice the space before the second `[` -- this is not important yet, but is required when including attributes, as described in the next sentence). In between the `img` and the opening square bracket, you can include `width=200` and/or `height=200` attributes to size the image, replacing `200` with however many pixels you want to use for the image. It's also possible to use a macro or field transclusion to set the size, e.g.:\\n\\n```html\\n[img width={{MyFavoriteImageWidth}} [image.png]]\\n```\\n\\n\\n!! Putting PDFs in your tiddlers\\n\\nAnother common type of file to embed in your wiki is a PDF. You can't set the size a PDF displays at, but you can transclude a PDF tiddler, like `{{mydocument.pdf}}`, and a mini-embedded PDF viewer will appear at that point in the tiddler. Be aware this can slow down the loading of the tiddler since your browser has to load the entire PDF before it can finish displaying the tiddler, so be careful not to put it somewhere that might get loaded or re-loaded frequently, like on your wiki's front page or in the sidebar.\\n\\n\\n!! Directly adding images to your tiddlers\\n\\nAbove we discussed how importing images works when you import the image first and then create a tiddler that displays it. But often you'll be editing a tiddler and only then realize you need to import an image. In this case, you can ''drag and drop the image directly into the editor'' or paste it from the clipboard. In either case, a small popup will appear (you may need to scroll down to see it in some cases) offering to import the image. When you accept, it will both import the image and insert `[img [image.png]]` into the tiddler you're editing, where //image.png// is the name of the imported image tiddler.\\n\\nAside from this automatic insertion of appropriate wikitext markup, directly adding an image to a tiddler works exactly like importing it on its own and then referencing it from within a tiddler later.\\n\\n\\n!! The problem with TiddlyWiki attachments\\n\\nHere's the essential problem with all this: in single-file TiddlyWikis, ''anything you attach to your wiki gets embedded in the file''. That's no big deal if you only add a few small images or documents to your wiki, but if you start adding tens or dozens of large images, that file will balloon in size. And that's a big problem, because //every time TiddlyWiki saves//, it makes a new copy of the file for backup purposes. If your wiki is 100 MB, and you save your wiki just 20 times, you're now using 2 GB of space on your hard drive. Plus, it takes a long time to write a 100 MB file to your hard drive or load it into the browser, so performance will start to slow down.\\n\\nYou can reduce the number of backups saved by various means, but that only hides the problem for longer; eventually your wiki is still going to get really big.\\n\\n(For the curious, text is so much smaller than images that serious difficulties are unlikely. You would have to write over 16 million average-length words of English, or 32,000 densely filled pages, to reach 100 MB of text. If you write 3 pages every day, it will still take you 30 years to write that much.)\\n\\n\\n!! Possible solutions\\n\\n{{$:/plugins/sobjornstad/TakeAway/ContextualHelp/DetailsWidget}}\\n\\n<$details summary=\\\"Using Node.js\\\">\\n\\nIf you're technical enough to know a little bit about running a web server, or just a lot about JavaScript or Node.js, you can ''use a folder wiki'' instead of a single-file wiki, which eliminates the file-size problem because the attachments are stored as separate files and don't have to be rewritten unless they're changed. If you don't have any particular reason to prefer single-file TiddlyWiki, this is likely your best option.\\n\\nTake a look at the [[Options for Saving and Hosting Your Wiki]] appendix for details.\\n\\nIf you're editing the wiki over a network (i.e., not from the computer on which you're running the server), this method might still be slow if you have a lot of images, since all of the images will still be sent to your browser when you open the wiki. To avoid this, you can configure the server to [[lazy-load|https://tiddlywiki.com/#LazyLoading]] the images.\\n\\n</$details><$details summary=\\\"Linking to external content\\\">\\n\\nOne way to avoid the issue is to ''link to content stored elsewhere'' instead of putting it in your wiki at all. For instance, you can display an image stored on the web using the `img` syntax:\\n\\n```html\\n[img [https://example.com/url/of/my/image.png]]\\n```\\n\\nSimilarly, you could link to a PDF instead of transcluding it.\\n\\nYou can also link to files ''on your computer'' by placing them in a folder next to your TiddlyWiki. Say that you're using TiddlyDesktop, and you have a single-file TiddlyWiki, `C:\\\\Users\\\\Soren\\\\Documents\\\\TiddlyWiki\\\\tw.html`. You could create a folder called `C:\\\\Users\\\\Soren\\\\Documents\\\\TiddlyWiki\\\\attachments`. Then, when you want to have a file available for linking from TiddlyWiki, put it in this folder and display an image or link to a PDF like this:\\n\\n```html\\n[img [attachments/myimage.png]]\\n[[See my PDF|attachments/mydocument.pdf]]\\n```\\n\\n</$details><$details summary=\\\"_canonical_uri\\\">\\n\\nOften, you might be fine storing the content external to your wiki, but you'd really like to be able to ''treat it as a normal tiddler'' -- for instance, so you can transclude a PDF into another tiddler, or filter your images by certain criteria. You can improve on the approach above using a special field called `_canonical_uri` on a tiddler. (Notice that this is spelled `uri`, not `url` -- the difference between a URI and a URL is technical and irrelevant for our purposes, but getting the field name wrong will have very relevant results!)\\n\\nHere's how it works. Start by creating the folder and files mentioned in that section. Then, in TiddlyWiki, create a new tiddler and give it the name and fields that you would like. Instead of filling in the `text` field, however, create a field called `_canonical_uri` and paste in the path, like `attachments/mydocument.pdf`. (You can also provide a URL to content on the web, if you like.) When you add the field, a notice will appear that you can't edit the content in TiddlyWiki because it's stored outside the wiki.\\n\\nIt's important you get the ''MIME type'' right (that's the little box labeled //Type// right underneath the content). If you don't, your content won't show up when you save the tiddler. If TiddlyWiki doesn't fill something appropriate in, you can pick from the drop-down for image or text types, or type `application/pdf` for a PDF.\\n\\nWhen you save the tiddler, you should see the content appear. At this point, it will behave just like any other tiddler, except that you can't edit the content from within TW and it will stop working if the content is moved.\\n\\n</$details>\\n\\n!! Exercises\\n\\n{{Ex:ContactInformationPicture||ExerciseTemplate}}\\n{{Ex:CanonicalUri||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Installing TiddlyWiki\":{\"title\":\"Installing TiddlyWiki\",\"created\":\"20200530172429726\",\"description\":\"How to get TiddlyWiki set up on your computer.\",\"modified\":\"20210818005955868\",\"parent\":\"The Shape of TiddlyWiki\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"TiddlyWiki, while having many virtues, is tricky to get started with. That's partly because it can do pretty much anything, so it's not always obvious what to do with it once you have it. Working through this book should take care of that part.\\n\\nAnother problem is that there is a ridiculous array of options for what software to use with TiddlyWiki. I know, right: it's already a piece of software that runs in a browser, so why do you have to choose other software? Basically, because TiddlyWiki isn't a centralized service, there are many different places you can store your data. You can keep it on your local computer, make it accessible from a server you own, keep it on Dropbox, keep it in a GitHub repository, keep it on your phone, engrave it on a special spy pocketknife with a Bluetooth-enabled laser cutter…and each of these methods has its own associated plugin or browser extension or third-party web service account or downloaded tool. These tools are often called //savers//.\\n\\nI know your eyes are glazing over and you're questioning your choices in life, so let's forget about savers for the moment. We're both going to go download and install [[TiddlyDesktop|https://github.com/Jermolene/TiddlyDesktop/releases]], which is an all-in-one turnkey solution that just works and has no extra options or configuration settings to deal with. TiddlyDesktop is by no means the best option for everyone, so once you've gotten comfortable with TiddlyWiki, you can [[look into the other options|Options for Saving and Hosting Your Wiki]] for saving -- especially if you want to use your wiki from multiple computers.\\n\\n(//Note:// If you have some experience with TiddlyWiki already and have another saver that you prefer, you want to do all your work with GTW on a mobile device, or you don't think TiddlyDesktop will work for you for whatever reason, feel free to use [[a different saver|Options for Saving and Hosting Your Wiki]] instead. The rest of this book will only occasionally talk about TiddlyDesktop, and the saver you are using is rarely relevant at all as long as it's successfully saving your changes.)\\n\\n!! Installation process\\n\\nTo install TiddlyDesktop, hit the link above, expand the “Assets” section of the most recent release, and download the appropriate file for your operating system (if you have a reasonably new computer, it'll be `win64`, `mac64`, or `linux64`, depending on whether you use Windows, MacOS, or Linux).\\n\\nIf you're not sure how to proceed from there:\\n\\n{{$:/plugins/sobjornstad/TakeAway/ContextualHelp/DetailsWidget}}\\n\\n<$details summary=\\\"Windows\\\">\\n\\nWatch the [[official introductory video starting from the Windows section|https://youtu.be/i3Bggkm7paA?t=163]].\\n\\n</$details>\\n<$details summary=\\\"macOS\\\">\\n\\nWatch the [[official introductory video|https://www.youtube.com/watch?v=i3Bggkm7paA]] through the end of the section describing macOS (Windows steps are shown afterwards).\\n\\n</$details>\\n<$details summary=\\\"Linux\\\">\\n\\nUnzip the file, go into the `tiddlydesktop-someversion` folder it contains, and run the `nw` executable.\\n\\nThe exact steps needed to accomplish this may differ slightly depending on your system and what version you've downloaded, but it will probably look something like this at a command line:\\n\\n```\\n$ unzip tiddlydesktop-linux64-v0.0.15-prerelease.2.zip\\n$ cd tiddlydesktop-linux64-v0.0.15\\n$ ./nw\\n```\\n\\n</$details>\\n\\nOnce we have TiddlyDesktop installed, there's one more step: we need to create a new, blank wiki file to put in it. TiddlyDesktop can automatically download the latest version from the web and save it for us: click the //Create new wiki// button on the toolbar, pick “Empty TiddlyWiki file,” and choose a location and filename. It's important that you end the filename with `.html`, or funny things will happen when you try to open it (this is a known bug). After you save the new wiki, TiddlyDesktop should open it automatically in a new window. If it doesn't, or next time you start TiddlyDesktop, click the //open// button in its entry in the list of wikis to start it up.\\n\\n{{open-button.png}}\\n\\n!! Backups\\n\\nBefore we proceed, just one more thing. You probably won't care much if you lose your sample wiki. But if you're keeping real thoughts and ideas and notes in TiddlyWiki, ''you //must// back up your wiki regularly''. This is not an optional good practice or something you can do later “when you get around to it.” If you accidentally delete a bunch of content in TiddlyWiki, your hard drive crashes, or your computer gets confused and saves your wiki incorrectly, and you don't have a backup, everything will be gone forever. That might not seem like that big a deal right now, but once you've been using TiddlyWiki for a while, losing your wiki is the digital equivalent of having your house burn to the ground. If you don't have a regular backup strategy for your computer, you can check out my [[blog post|https://controlaltbackspace.org/filesystem/starting-off-with-a-backup/]] about that. Compared to losing data, it is easy, fast, and cheap!\\n\\nIf you want to get started learning TiddlyWiki before developing a backup strategy, that's fair enough -- but if you don't already have everything on your hard drive backed up on a regular schedule, go put it on your to-do list or your calendar right now to come up with a backup strategy. Then you can come back and continue with the book.\\n\\nWhen you have the `GettingStarted` page of your new TiddlyWiki looking back at you, proceed to the next section.\\n\"},\"JavaScript Macros\":{\"title\":\"JavaScript Macros\",\"created\":\"20200719033806080\",\"description\":\"Macros can execute JavaScript code rather than evaluating wikitext.\",\"modified\":\"20210502162723219\",\"parent\":\"Getting Technical\",\"prerequisite\":\"Basic knowledge of JavaScript\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"(''Prerequisite'' for this section: {{!!prerequisite}}.)\\n\\nIf you want to do something that's just a little bit out of reach of a wikitext macro, you can also write macros in [[JavaScript|https://en.wikipedia.org/wiki/JavaScript]]. It's important that your macro execute quickly and have no side effects, as TiddlyWiki may repeatedly rerender the page containing the macro and call your JavaScript function in the process, just as it would with a wikitext macro. JavaScript macros also cannot access the browser DOM, since they may run server-side if you're serving your wiki with Node.js.\\n\\nThe process of creating a JavaScript macro is [[documented on the TiddlyWiki Dev wiki|https://tiddlywiki.com/dev/index.html#JavaScript Macros]], although not particularly well. Let's suppose that we want a macro that ''rounds timestamps to the nearest 15 minutes''. First, we write a JavaScript function that takes arguments matching those of the macro and returns the wikitext we want to output. You can test this function in any JavaScript development environment you like, including something as simple as your browser devtools. You'll end up with a single function, like this:\\n\\n```javascript\\nfunction(parameter) {\\n\\t/* do some stuff */\\n\\treturn \\\"my return value\\\";\\n}\\n```\\n\\nThen, we create a tiddler with type `application/javascript` and a field `module-type` set to `macro`. Drop in the following template snippet, then update the documentation comments and `exports.name` and `exports.params` variables as appropriate and assign your function to `exports.run`.\\n\\n```javascript\\n/*\\\\\\ntitle: YOUR MACRO NAME\\ntype: application/javascript\\nmodule-type: macro\\n\\nDESCRIPTION OF YOUR MACRO\\n\\\\*/\\n(function(){\\n\\\"use strict\\\";\\n\\nexports.name = \\\"YOUR MACRO NAME\\\";\\nexports.params = [\\n\\t{name: \\\"YOUR FIRST PARAMETER NAME\\\"}\\n\\t/* repeat for additional parameters */\\n];\\nexports.run = /* INSERT YOUR FUNCTION HERE... */;\\n\\n})();\\n```\\n\\nWhen you change a JavaScript macro, you must ''reload the entire wiki'' for the changes to take effect, as TiddlyWiki doesn't dynamically reload JavaScript. It won't tell you to do so -- this can be very puzzling if you aren't aware it's necessary!\\n\\nAfter reloading the wiki, assuming you did everything right, your macro will be available for use in any tiddler just like any other global macro.\\n\\n\\n!! Exercises\\n\\n{{Ex:RoundtimeMacro||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\\n\"},\"Journal Tiddlers\":{\"title\":\"Journal Tiddlers\",\"created\":\"20200530202215791\",\"description\":\"How to create journal tiddlers and use basic wikitext formatting features.\",\"modified\":\"20210504020220895\",\"parent\":\"The Shape of TiddlyWiki\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Now that we have the software installed and our wiki created, we've learned about a few basic TiddlyWiki concepts, and we know what kind of wiki we're trying to build, we're ready to get started!\\n\\nLet's begin by setting up the TiddlyWiki journal functionality to handle our work diary requirement. We're in luck here, because TiddlyWiki has built-in ''journal'' functionality to create a new tiddler with the current date in its title. As we create journal tiddlers, we'll take a look at some of the most popular [[wikitext|Wikitext]] formatting.\\n\\n!! Journal settings\\n\\nPop open your <<textual-button \\\"options-button\\\">> [[control panel|Tweaking Your Settings]] again and go to the //Info/Basics// tab.\\n\\n!!! Titling\\n\\nScroll down to //Title of new journal tiddlers//. I [[dislike the default date format|https://thetechnicalgeekery.com/2013/06/yyyy-mm-dd-the-best-way-to-write-dates/]] (//23rd May 2020//) because it causes journal tiddlers to sort in an unhelpful order in many views. The YYYY-MM-DD format (//2020-05-23//), in contrast, will sort nicely in chronological order in any lists it may end up in without requiring any special treatment. I also find it helpful to toss the day of the week in the title after the date (not before it, or you break the sort again!).\\n\\nThe incantation to make this format happen is `YYYY-0MM-0DD DDD`, so fill that in the //Title of new journal tiddlers// field. If you prefer a different format, you can find details in the [[DateFormat|https://tiddlywiki.com/#DateFormat]] section of the TiddlyWiki documentation.\\n\\n!!! Starting text\\n\\nYou might like to start out your day's journal entry with some basic structure reminding you what you should fill in. You can fill in the //Text for new journal tiddlers// field to accomplish this. Let's do:\\n\\n{{Sn:JournalStartingText||MagicSnippet}}\\n\\nThe `!!` is the wikitext syntax for a top-level section heading, while the `*`'s create a list.\\n\\n!!! Tags\\n\\nBy default, journal tiddlers are tagged with //Journal//, which is already what we want, so we'll leave //Tags for new journal tiddlers// at its default value.\\n\\n!! Creating a new journal tiddler\\n\\nYou can find the new-journal button <<textual-button \\\"new-journal-button\\\">> under the //Tools// tab in the sidebar. This is an out-of-the-way place for something we're going to be clicking at least once a day, though, so let's tick the check box next to the button. This will place it on the [[page toolbar|The TiddlyWiki Interface]] at the top of the sidebar, right next to the normal new-tiddler button.\\n\\nIf you now click on the new-journal button, you will see a new tiddler open up for editing, with its title already set to today's date and its text set to the starting text we set above. Go ahead and play around: write in some sample content and try the editor buttons to see what kind of formatting markup you can insert.\\n\\nCan't tell if you did the markup right? There is a live ''side-by-side preview'' function, which you'll likely want to have open most of if not all of the time unless you're working on an unusually small screen, but the discoverability is terrible. The button is second from the right on the editor toolbar, and it looks like a jagged mouth <<textual-button \\\"preview-closed\\\">>; you'll see after clicking it that it's supposed to be a closed eye to contrast with the open eye <<textual-button \\\"preview-open\\\">>. Alternatively, you can press Alt+P while editing (your cursor has to be in the text field for this shortcut to work). Most buttons in the editor toolbar have similar keyboard shortcuts, which you can find by hovering over them.\\n\\nIf you have a small screen and need more space to see the editor and the preview side by side, you can click the double right chevron <<textual-button \\\"chevron-right\\\">> way in the upper-right corner of the screen to hide the sidebar temporarily (click the button again to put it back). If you're using a full browser rather than TiddlyDesktop, you can also hide your browser's toolbars and interface by pressing F11 (or Command+Shift+F on a Mac), which is nice if you want to focus on what you're writing or you need a bit more vertical space. (This doesn't work in TiddlyDesktop since it already has no toolbars.)\\n\\nWhen you're done, click the check mark <<textual-button \\\"done-button\\\">> in the upper-right corner of the tiddler to accept the changes and admire your handiwork. You should see a tooltip momentarily appear, indicating that your wiki has been saved; TiddlyDesktop will automatically save your wiki every time you save a tiddler. You can also manually save the wiki by clicking the checkmark inside a circle <<textual-button \\\"save-button\\\">> on the page toolbar, which changes color when there are changes to be saved.\\n\\n{{Ex:BasicWikitext||ExerciseTemplate}}\\n\\n!! Finding closed tiddlers\\n\\nBefore we move on, let me point out that if you close a tiddler by clicking the <<textual-button \\\"close-button\\\">> in the upper-right corner, it may not be immediately obvious how to open it again! For now, as we don't have many tiddlers, going to the `Recent` tab in the sidebar and scanning the list for the appropriate tiddler should be enough to get you back to any tiddler you've closed.\\n\\nWe'll talk more about the various options for finding and browsing tiddlers in chapters 2 and 3, [[Filing and Organizing]] and [[Filtering and Formatting]]. If we had to call out the top three features that differentiate TiddlyWiki from other note-taking systems, the flexibility of the search and filtering system would likely be on the list, so there's plenty to talk about here.\\n\\n{{Ex:CloseAndReopen||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Knowledge Tiddlers\":{\"title\":\"Knowledge Tiddlers\",\"created\":\"20200531022953084\",\"description\":\"How to organize information that doesn't fall into a clear category, and why such information should be pulled out into separate units of information and related to others.\",\"modified\":\"20210504022221627\",\"parent\":\"The Shape of TiddlyWiki\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"We've almost made it through all of the types of tiddlers we identified in [[Structuring Our Wiki]]. The remaining type we listed out is the non-type: what we called the ''knowledge tiddler''. Studying the amorphous nature of knowledge tiddlers will lead us to some important insights about organizing information which we'll build on in the next chapter, [[Filing and Organizing]].\\n\\n!! Creating missing tiddlers\\n\\nWe already have a knowledge tiddler that we need to create. Remember how back when we were [[working on Jane's tiddler|Contact Tiddlers]], we decided that the employee information system was a concept that should be called out with a link? Let's start a knowledge tiddler about the employee information system.\\n\\nHow should we create this tiddler? As with everything in TiddlyWiki, we have several options. If we have a good memory, we might simply recall that we need to create a tiddler called `EmployeeInformationSystem`, and in that case we could just click the <<textual-button \\\"new-button\\\">> new tiddler button and write it up. Alternatively, we could go back to Jane's tiddler, where there will be an italicized link indicating it doesn't exist, click on it, and edit from there. However, let's try a new method. TiddlyWiki actually keeps track of what tiddlers have been linked to but don't exist, so we can check periodically and create any that seem important. These tiddlers that are linked to but have not been created are called ''missing tiddlers''.\\n\\nClick into the //More// tab in the sidebar, then //Missing//. You should see `EmployeeInformationSystem` listed. If you click on it, you'll see a pop-up similar to what you get when you click on a tag: above the line is the missing tiddler itself, and underneath are all the tiddlers that link to it. This is a nifty way to figure out what a missing tiddler is supposed to be about if you can't quite remember from the title -- often seeing the places where you mentioned it will be sufficient to jog your memory.\\n\\n!! Describing the Employee Information System\\n\\nLet's click on `EmployeeInformationSystem` and edit it. We could start with some notes about the system:\\n\\n{{Sn:EmployeeInformationSystemExample||MagicSnippet}}\\n\\nWait…remember how we're supposed to consider if there are any concepts that need links? Have a read and see if you can identify some things that might deserve links and separate tiddlers! Then continue below.\\n\\n* The ''Really Annoying Five-Factor Authentication Process'' (RAFFAP) is probably the most obvious candidate here. Perhaps we don't have all that much to say about it, but we would likely at least want to maintain a link to the company documentation on it.\\n* It could be worth creating tiddlers for ''the process of retrieving pay stubs or requesting vacation'' -- particularly the latter, since there are probably a number of further considerations involved in taking vacation (e.g., having your boss and/or teammates approve your plans). If you don't know much about the process yet, you could simply leave the tiddler missing and fill it in when you learn more, or if you don't like leaving missing tiddlers, drop in a sentence that says “Vacation time is requested in the EmployeeInformationSystem.”\\n* The ''company cafeteria'' is certainly a concept, but unless you're one of those people who keep exhaustive spreadsheets about everything, it's unlikely you want to take notes on it, so it won't need a tiddler. Similarly, ''coffee, tea, and pastries'' are concepts, but presumably nothing more needs to be said about them here, and you have no need to correlate mentions of tea across all of your work notes.\\n\\nFor the moment, for the sake of not getting sidetracked, let's leave all of them unlinked.\\n\\n\\n!! Classifying the Employee Information System\\n\\nHere's a million-dollar question: how exactly does the EIS relate to our OnboardingProcess project? Is it a //part// of the project? Is it just related to the project? This is an important question because it determines whether we should ''tag'' the EIS with OnboardingProcess, or merely ''link'' them together.\\n\\nI'm personally inclined to say that ''the EIS is merely related to the project'': we're presumably going to find use for the EIS in many contexts outside our company onboarding, and it has no particular relationship to the project except that we were shown how to use it as part of the project. However, this isn't necessarily a transferable rule even for any pair of a project and an application associated with that project. If our project was to purchase and set up a label printer, we'd have a strong case for considering the label-printing software part of that project, even though it could be used outside of that project in the future -- it's an integral part of the project, compared to the EIS, which is an incidental part of being onboarded.\\n\\nFortunately, making the wrong decision here is hardly going to be fatal. These questions are not meant to give the impression that you have to immediately know the “right” answer every time -- they're meant to get you thinking about the different options and why you might choose one over another. Once you've been using TiddlyWiki for a while, you'll probably just go, “Hmm. I think I'm going to use a tag here,” and then do it, and never think about it again unless it proves to be confusing or problematic for some reason. It's much like learning a new language: at first you have to stop from time to time and think really hard if you want to get your grammar right, but if you keep practicing, soon enough it flows out naturally, even if you might still mix something up once in a while.\\n\\nSo, if we've decided on a link, let's add a sentence to the end of the tiddler's text:\\n\\n```html\\nJaneDoe taught me about the EIS in our EmployeeProfileSetupMeeting.\\n```\\n\\nThis will nicely tie together all the relevant pieces of information for us.\\n\\n!! Tags\\n\\nSince this is a knowledge tiddler, it doesn't have a tag identifying exactly what type of information it is like the others did. However, it might still be nice to classify it: this is a software application, so let's tag it with `Application`.\\n\\nIt's important not to create a blizzard of tags -- the more tags you have, the harder it is to scan through them and figure out what they are and what other tiddlers you might want to apply them to -- so before creating a new tag, it's good to make sure you can ''identify a situation in which you would actually use that tag''. Here's the use case we could identify for Applications:\\n\\n> From time to time, we may wish to see a list of the tools we have available at our disposal, if we get stuck on a problem or we know there's an app that does what we need but just can't quite remember what it's called or where to look for it.\\n\\n(In many cases, it's helpful to put a little blurb like this one in the tag tiddler itself, so if you ever forget where the tag should be applied, you can look it up. Feel free to do this in your example wiki if you want to.)\\n\\nAccording to this rule, we wouldn't tag the EIS tiddler `Coffee`, because we agreed there's no benefit to tracking where we talk about coffee in this wiki, or `TrainedByJaneDoe`, because (a) it's difficult to imagine any situation in which we would need to know what applications Jane trained us to use, and (b) we have already linked this tiddler to Jane's tiddler and thus can easily get a list of applications Jane is associated with, which is likely to be more than enough to gather this data in the unlikely event we need it, even if we have to sort out a few applications that are related to Jane in some other way. (We'll learn how you would go about seeing a list of exactly the tiddlers that link to or from Jane's tiddler and are applications in chapter 3, when we talk about [[filters|Filters]].)\\n\\nWe might, however, have a case for tagging this tiddler `ThingsThatAreHarderOnTuesdays`, if that proves to be a common category at the company, since we might want to use that information to plan our weeks!\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\\n\"},\"LieToChildrenTemplate\":{\"title\":\"LieToChildrenTemplate\",\"created\":\"20210110042143124\",\"modified\":\"20210130022017337\",\"tags\":\"Template\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\whitespace trim\\n\\n<$link class=\\\"ltc-link\\\" tooltip=\\\"\\\"\\\"This is a “lie to children”: it is not strictly accurate, but will give you sufficient understanding for now. Click if you want to know the full truth.\\\"\\\"\\\" to={{!!title}}>{{!!description}}</$link>\"},\"Links\":{\"title\":\"Links\",\"created\":\"20200530170256021\",\"description\":\"Links tell TiddlyWiki what ideas (tiddlers) in your wiki are related to each other.\",\"modified\":\"20210504015504198\",\"parent\":\"The Shape of TiddlyWiki\",\"tags\":\"Concept Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"''Links'' between [[tiddlers|Tiddlers]] are the most basic way to make your way around a TiddlyWiki and relate ideas to each other.\\n\\nLinks may be created within a tiddler by surrounding the name of the tiddler to link to with `[[double square brackets]]`. Additionally, anything written in `CamelCase`, with no space between words and each word capitalized, will be automatically linked. (If you don't find camel-case linking helpful, you can turn it off, as we saw in [[Tweaking Your Settings]]. The utility of this feature depends on your personal preference and the purpose of your wiki.)\\n\\nIf you want the displayed text to be different than the target of the link (i.e., where you'll go when you click on it), you can write `[[link text|TargetTiddlerName]]` (that's a pipe `|` character separating the two parts of the link, found above the enter key on a US keyboard).\\n\\nHere's an example of these two kinds of links. {{Live Examples}}\\n\\n{{Sn:TweakingYourSettings||MagicSnippet}}\\n\\n!! Links define relationships\\n\\nAs you likely expect from your past experience of links, clicking on a link to another tiddler opens that tiddler (usually as a new item in the [[story river|The TiddlyWiki Interface]]). In addition to this obvious function, however, TiddlyWiki links also ''define relationships between tiddlers'' and let you search based on these relationships. For instance, you can get a list of all tiddlers that link //to// a particular tiddler (these are called //backlinks//, and often allow you to find relationships between ideas you wouldn't have realized were related otherwise). Or you can get a list of all the people you linked to anywhere in your notes on a particular conference. This is a powerful idea that plays a large part in [[making TiddlyWiki human-shaped|Why TiddlyWiki?]]: our brains think most naturally in terms of links and relationships between things, not in hierarchies and attributes.\\n\\nAs an example, here are the backlinks of this //Links// section, i.e., the other sections in the book that link here. In [[chapter 3|Filtering and Formatting]], you'll learn how to query your wiki like this, as well as how to turn the results into lists that update automatically, like this one.\\n\\n<<list-links \\\"[[$:/plugins/sobjornstad/GrokTiddlyWiki]plugintiddlers[]] :filter[links[]match<currentTiddler>] -[[Wr:Links]]\\\">>\\n\\nYou can link to tiddlers that don't exist yet. These links will be displayed in italics to indicate their target doesn't exist, and following the link will prompt you to create it. Tiddlers that have been linked to but don't exist yet are called ''missing'', and you can get a list of all missing tiddlers if you'd like to see what you wanted to talk about but haven't written yet (we'll see how in [[Browsing Your Tiddlers]]).\\n\\n!! External links\\n\\nIn addition to the //internal// links we've discussed so far (ones that point to other tiddlers in the same wiki), you can include ''external links'' (ones that point to URLs on the web or your computer). External links are created the same way as internal ones, except the link target is a URL rather than a tiddler name. Alternatively, if you want the URL itself to be the link text, you can just paste the URL into your wikitext and it will automatically be turned into a link. You can tell an external link from an internal one because external links are underlined, while internal links are only in a different color (compare the following example with the previous one).\\n\\n{{Sn:LinkToGoogle||MagicSnippet}}\\n\\nSince the targets of external links aren't part of TiddlyWiki, you don't get backlinks or link-based searches for external links.\\n\\nExternal links will always open in a new tab or window so that you don't lose your place in the wiki.\\n \\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Live Examples\":{\"title\":\"Live Examples\",\"created\":\"20210117002226847\",\"modified\":\"20210321010956034\",\"tags\":\"Fragment\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"You'll see live examples like this one periodically throughout the book -- the left side shows the [[wikitext|Wikitext]], i.e., what you would type in when editing a tiddler, while the right side shows what the result looks like when viewing the tiddler. You can also click the //Wikitext// or //Output// tab to see the left or right side alone, if you'd like a little more horizontal space to read a long line. Finally, you can click the //Edit// tab to change the snippet and see how TiddlyWiki reacts. (If you edit the snippet, a link to restore the original text will appear in the upper-right, so you can experiment without fear.)\"},\"Looking Under the Hood\":{\"title\":\"Looking Under the Hood\",\"caption\":\"6: Looking Under the Hood\",\"created\":\"20200717225720913\",\"description\":\"In which we follow the implications of everything being a tiddler to their conclusions: TiddlyWiki can be extensively customized with little more than the tools we've already learned.\",\"list\":\"[[System Tiddlers]] Plugins [[Shadow Tiddlers]] [[Global Macros]] [[The View Template]] [[Adding to the Sidebar]] Stamps [[Creating a List of Links and Backlinks]] [[Buttons and Input Widgets]] [[Creating Tiddlers With Predefined Fields]]\",\"modified\":\"20210327173513370\",\"parent\":\"Outline\",\"tags\":\"Chapter\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Everything we've learned about tiddlers so far ''can also be applied to the functionality of TiddlyWiki itself'', because everything's a tiddler!  After completing this chapter, you'll be able to customize TiddlyWiki's interface and behavior in a variety of useful ways, such as by adding buttons to the toolbars, placing predefined content on tiddlers matching some criteria, and creating new forms and interface elements.\\n\\nWe'll start by looking at [[system tiddlers|System Tiddlers]], [[plugins|Plugins]], and [[shadow tiddlers|Shadow Tiddlers]], which are extensions to the normal understanding of [[tiddlers|Tiddlers]]. Then we'll see how mechanisms built into TiddlyWiki allow us to edit parts of TiddlyWiki's interface and link our own entirely new tiddlers into it -- whether that's the [[set of built-in macros|Global Macros]], the [[sidebar|Adding to the Sidebar]], or [[tiddlers in the story river|The View Template]]. And we'll work through several example customizations so you can see how these features will be used.\\n\\n!! In this chapter\\n\\n{{||ChapterOutlineTemplate}}\"},\"Ltc:AllListsAllTiddlers\":{\"title\":\"Ltc:AllListsAllTiddlers\",\"created\":\"20210131163920553\",\"description\":\"all of your tiddlers\",\"modified\":\"20210409123355214\",\"tags\":\"Lie\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Actually, neither [[System Tiddlers]] nor [[Shadow Tiddlers]] -- which in a small wiki will be //most// of the tiddlers -- appear in the ''All'' list. But those won't contain any of your content unless you intentionally put it into such tiddlers, so you don't need to worry about them for now.\"},\"Ltc:AllTiddlersInTheLeft\":{\"title\":\"Ltc:AllTiddlersInTheLeft\",\"created\":\"20210110042100375\",\"description\":\"all tiddlers in the wiki\",\"modified\":\"20210110161959248\",\"tags\":\"Lie\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"//{{!!description}}//: Actually, it is only all non-[[shadow tiddlers|Shadow Tiddlers]]. Hit the link for details on shadow tiddlers and how you can include shadow tiddlers in the pipeline as well.\"},\"Ltc:BlockAndInlineMode\":{\"title\":\"Ltc:BlockAndInlineMode\",\"created\":\"20210116183316696\",\"description\":\"elements are rendered in either block mode or inline mode\",\"modified\":\"20210116214206949\",\"tags\":\"Lie\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"This sentence contains a whole host of inaccuracies. In HTML, there are a number of possible display modes besides block and inline, such as `inline-block`, `flex`, and so on. Further, HTML doesn't generally call them “modes” -- you're more likely to see “layouts” or “contexts” depending on exactly what is being discussed. But as we'll see, this is convenient terminology to use with TiddlyWiki because the wikitext parser actually does have “modes,” so it will be good enough for this discussion.\"},\"Ltc:CoreCodeTiddlers\":{\"title\":\"Ltc:CoreCodeTiddlers\",\"created\":\"20210116232945883\",\"description\":\"even the core code of TiddlyWiki itself\",\"modified\":\"20210207060523909\",\"tags\":\"Lie\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"While almost all of the core code of TiddlyWiki is stored in tiddlers, there is a small [[component|https://tiddlywiki.com/dev/#Microkernel]] called the //microkernel// that is not. This component is needed to “bootstrap” TiddlyWiki to the point that it is capable of reading the rest of its code from tiddlers.\"},\"Ltc:CurrentTiddlerDefinition\":{\"title\":\"Ltc:CurrentTiddlerDefinition\",\"created\":\"20210207221248517\",\"description\":\"accurate definition of the current tiddler\",\"modified\":\"20210207221316374\",\"tags\":\"Lie\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Actually, properly setting the current tiddler also involves setting some variables to the names of CSS classes, as discussed in the section on the `$tiddler` widget in [[Miscellaneous Widgets]]. However, in virtually all cases you can get away with simply setting the value of the `currentTiddler` variable.\"},\"Ltc:EverySetting\":{\"title\":\"Ltc:EverySetting\",\"created\":\"20210121003205119\",\"description\":\"every setting in the control panel has a tiddler here holding your choice of value\",\"modified\":\"20210206213445145\",\"tags\":\"Lie\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Actually, a handful are so important that they have values right under `$:/`, such as [[$:/SiteTitle]]. And you or a plugin author could add items to the control panel that don't store configuration in `$:/config`.\"},\"Ltc:ExampleLtc\":{\"title\":\"Ltc:ExampleLtc\",\"created\":\"20210116232539412\",\"description\":\"dashed underline\",\"modified\":\"20210321143816951\",\"tags\":\"Lie\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"There's no actual lie here. Normally, you would find a description of why what I said was inaccurate, and perhaps a pointer to where you can learn the exact truth.\"},\"Ltc:GmtUtc\":{\"title\":\"Ltc:GmtUtc\",\"created\":\"20210323235617632\",\"description\":\"Greenwich Mean Time\",\"modified\":\"20210409025028533\",\"tags\":\"Lie\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Actually, GMT and UTC are not quite the same thing. You probably do //not// want to bother with the difference, because it is completely irrelevant for most purposes, but if you're feeling pedantic or curious about time zones:\\n\\n* ''UTC'' (//Coordinated Universal Time//, and yes I know [[that isn't the right order of the letters|https://en.wikipedia.org/wiki/Coordinated_Universal_Time#Etymology]]) is a [[time standard|https://en.wikipedia.org/wiki/Coordinated_Universal_Time]] by which other time zones are compared. The standard is kept based on atomic measurements, but is periodically adjusted by inserting [[leap seconds|https://en.wikipedia.org/wiki/Leap_second]], to keep it close to UT1, with the goal of preventing them from drifting more than a second apart. The correct way to describe the US Eastern time zone, not on Daylight Saving Time, for comparative purposes, is “UTC minus 5 hours”.\\n* ''UT1'' is [[another time standard|https://en.wikipedia.org/wiki/Universal_Time#Versions]] based on the progress of the Earth's motion around the Sun. UT1 is relevant here because for many purposes, like navigation, people consider //it//, rather than “UTC”, the reference for “GMT”.\\n* ''GMT'' is also the [[name of a time zone|https://en.wikipedia.org/wiki/Greenwich_Mean_Time]] which has an offset of UTC+0. Prior to the introduction of the UTC standard, it was the normal means of measuring time zone offsets.\\n\\nConfused yet? Good.\"},\"Ltc:MostRecentHundred\":{\"title\":\"Ltc:MostRecentHundred\",\"created\":\"20210409122941649\",\"description\":\"the most recent 100 tiddlers you edited\",\"modified\":\"20210409123258096\",\"tags\":\"Lie\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Actually, TiddlyWiki selects entire days on which tiddlers were edited, one by one, stopping when it has selected a total of at least 100 tiddlers. This means that, if you count, there are usually slightly more than 100. For instance, suppose that TiddlyWiki has selected 98 tiddlers so far and reaches August 12, on which 4 tiddlers were edited. Since TiddlyWiki will always include all edits for any day it selects, the list will end up with 102 tiddlers in it.\"},\"Ltc:SpanInlineMode\":{\"title\":\"Ltc:SpanInlineMode\",\"created\":\"20210116175307438\",\"description\":\"are ordinarily rendered in inline mode\",\"modified\":\"20210121003920030\",\"tags\":\"Lie\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"It would be more correct to say that `<div>` elements //participate in a block formatting context//, while `<span>` elements //participate in an inline formatting context//. The context is how each element itself is laid out with respect to its neighbors. But the element's content is laid out in a different context, which means it might not use the same layout mode! For instance, `<span>` elements may contain elements which will be laid out in a block context, despite themselves being laid out in an inline context (this is generally not a good idea, but it does work).\\n\\nYou can see this in the following example, where a paragraph (a block element) is nested inside of a span (an inline element) which also contains some raw text. The span containing the paragraph is shown in orange for clarity:\\n\\n{{Sn:BlockInlineContextLtc||MagicSnippet}}\\n\\nThis is unlikely to be something you need to worry about when writing in wikitext, though, unless you are trying to create complex custom [[stylesheets|Stylesheets]] to format your tiddlers.\"},\"Ltc:TagsComeInPairs\":{\"title\":\"Ltc:TagsComeInPairs\",\"created\":\"20210124035422845\",\"description\":\"Tags always come in pairs\",\"modified\":\"20210124035402745\",\"tags\":\"Lie\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"A few HTML tags, called //void tags//, don't come in pairs. We'll talk about void tags later in the section.\"},\"Ltc:TempNotSaved\":{\"title\":\"Ltc:TempNotSaved\",\"created\":\"20210418152518443\",\"description\":\"are not saved with your wiki\",\"modified\":\"20210418152628904\",\"tags\":\"Lie\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Actually, it depends on [[what saver|Options for Saving and Hosting Your Wiki]] you are using -- some savers won't discard temporary tiddlers. But you should always assume that they'll go away, to avoid creating a wiki that only works with some savers.\"},\"Ltc:TiddlerDoingTransclusion\":{\"title\":\"Ltc:TiddlerDoingTransclusion\",\"created\":\"20210206174218963\",\"description\":\"in the tiddler doing the transclusion\",\"modified\":\"20210206174246923\",\"tags\":\"Lie\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Actually, as we'll see later in the section, a template can be made to refer to information in any tiddler you like. The tiddler containing the reference information is chosen at the time the transclusion is requested, and it defaults to the tiddler doing the transclusion.\"},\"Ltc:TwoWaysToConcatenate\":{\"title\":\"Ltc:TwoWaysToConcatenate\",\"created\":\"20210818124538866\",\"description\":\"two ways\",\"modified\":\"20210818125040615\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"You could also use a `$wikify` widget, as explained in [[Wikification]]:\\n\\n{{Sn:WikifyConcatenation||MagicSnippet}}\\n\\nThis works because TiddlyWiki acts like `{{!!title}}.png` is directly within the text of a tiddler when you use the `$wikify` widget, and as we'll see in another example further along in the section, putting a transclusion adjacent to constant text works fine in running text.\\n\\nHowever, the `$wikify` widget unnecessarily complicates things here, and it tends to be slower than solutions that don't use it, so it's not normally a good solution for simple problems like this one.\"},\"Ltc:WidgetsExtension\":{\"title\":\"Ltc:WidgetsExtension\",\"created\":\"20210116201528646\",\"description\":\"are a TiddlyWiki extension\",\"modified\":\"20210131175322304\",\"tags\":\"Lie\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Actually, widgets have a more complex role in the rendering of pages than I'm letting on when I claim that wikitext is a superset of HTML and that widgets are an extension to HTML. When a tiddler is being rendered, everything in its wikitext is transformed into underlying widgets, including HTML that you've embedded in your wikitext. Once this //widget tree// has been built, TiddlyWiki can convert it back to the HTML that causes the page to display in your web browser. `$widget`s in pages aren't an extra feature added to wikitext, but a means of directly creating a widget in TiddlyWiki's underlying representation of the page, rather than allowing wikitext or HTML to be transformed into a widget by TiddlyWiki.\\n\\nYou can read more about this in the [[Widgets|https://tiddlywiki.com/dev/#Widgets]] section of the TiddlyWikiDev wiki.\\n\\nUnless you dig into the JavaScript code underlying TiddlyWiki, this is not a detail you need to concern yourself with.\"},\"Macros are not functions\":{\"title\":\"Macros are not functions\",\"created\":\"20210818000912323\",\"description\":\"TiddlyWiki macros do not behave like functions in other programming languages.\",\"modified\":\"20211005133426764\",\"parent\":\"Common Misunderstandings\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"If you're familiar with programming languages like JavaScript or C++, it may be tempting to think of [[macro calls|Macros]] (or [[variables|Variables]] whose values are set with `\\\\define`) like function calls. If you're using this mental model, you assume that where you write `<<test-macro>>`, you get the result of evaluating the `test-macro` macro as [[wikitext|Wikitext]].\\n\\nThis is not how macros work. Rather, the exact text of the macro, with any [[text substitutions|Text Substitution]] the macro might include completed, is inserted wherever the `<<macro transclusion>>` is found. ''Wikitext is not parsed or rendered'' during this process!\\n\\nA more helpful mental model, if you know these tools, might be a (La)TeX macro or a `#define` directive in the C/C++ preprocessor.\\n\\n\\n!! Example of the mistake\\n\\n<<<\\nI want to create a variable in a tiddler whose value comes from a filter. The variable will be used to define a tiddler whose `description` field should be transcluded. When I hard-code this tiddler's name, it works fine:\\n\\n{{Sn:MacroFunctionCallOk||MagicSnippet}}\\n\\nBut if I set the variable to the result of a filtered transclusion, it doesn't work properly -- or, rather, sometimes it works and sometimes it doesn't:\\n\\n{{Sn:MacroFunctionCallBad||MagicSnippet}}\\n\\nWhat am I doing wrong?\\n<<<\\n\\n\\n!! Explanation\\n\\nUp top, we learned that wikitext is not parsed or rendered during a macro call (the process of parsing and evaluating wikitext is called [[wikifying|Wikification]]). Sometimes you won't even notice this, because if the result of the macro call ends up directly within the body of a tiddler, TiddlyWiki will wikify it again immediately. That's why the second paragraph of the second snippet still works: the macro call within the body of the tiddler, and after the macro call takes place, the result (which is the literal text `{{{ [<currentTiddler>get[description]] }}}`) is wikified by TiddlyWiki.\\n\\nHowever, this breaks down when you use the macro call as the attribute of an HTML tag or widget, as in `<$transclude tiddler=<<test-macro>> field=\\\"description\\\"/>`. In this case, TiddlyWiki doesn't do a wikification step; it just passes the result of the macro call to the tag or widget. (This is a design choice -- in many cases, it's what you want since stray formatting tags could otherwise end up messing up your widgets.) That means that you're asking TiddlyWiki to transclude a tiddler called `{{{ [<currentTiddler>get[description]] }}}`, which presumably does not exist.\\n\\n\\n!! Solutions\\n\\nIn this case, the filter is sufficiently simple that we're probably best off just using it directly in the `$transclude` widget:\\n\\n{{Sn:MacroFunctionCallDirect||MagicSnippet}}\\n\\nOr, since we have a sufficiently simple filter, we can just say:\\n\\n```html\\n<$transclude tiddler={{!!description}} field=\\\"description\\\"/>\\n```\\n\\nSometimes you might need to use the variable in many places, or it might change on the fly, so simply repeating its value everywhere won't work. In that case, you can use the `$wikify` widget to force the result of the macro call to be wikified into a variable, then continue from there:\\n\\n{{Sn:MacroFunctionCallWikify||MagicSnippet}}\\n\\nNow the `$wikify` widget evaluates the wikitext `{{{ [<my_tiddler>get[projectId]] }}}`, storing the result, `Macros are not functions`, in the `myResult` variable. Then the `$transclude` widget uses that variable to decide what tiddler to transclude.\\n\\n!! Further reading\\n\\n* [[Text Substitution]] -- the only change that //is// made to a macro's text when the macro is called\\n* [[Wikification]] -- when automatic wikification takes place and how to use the $wikify widget when it doesn't\"},\"Macros\":{\"title\":\"Macros\",\"created\":\"20200603011212616\",\"description\":\"Macros extend the concept of variables by allowing portions of the value to change each time the macro is referenced.\",\"modified\":\"20210512022609740\",\"parent\":\"Variables, Macros, and Transclusions\",\"tags\":\"Section Concept\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Sometimes we repeat text which is exactly the same, and [[variables|Variables]] let us eliminate that repetition. But often, we want to repeat some text which is //mostly// the same, but which ''varies in a small part or two''.\\n\\nFor instance, suppose we are linking to Wikipedia articles over and over again, and we're getting tired of copying and pasting the URLs. Wikipedia article URLs have a very predictable format: for an article named `Article Name` in the English encyclopedia, the URL looks like `https://en.wikipedia.org/wiki/Article Name`. The only part that ever changes is the name of the article.\\n\\nIn situations like this, we can use a ''macro''. A macro is simply a variable with some bits that change depending on how you refer to it; the bits that change are called ''parameters'' or ''arguments''. A macro definition for creating Wikipedia links could look like this:\\n\\n```html\\n\\\\define wikipediaLink(articleName)\\nhttps://en.wikipedia.org/wiki/$articleName$\\n\\\\end\\n```\\n\\nTo get the value of the macro (this is referred to as ''calling'' or ''invoking'' it), we use the same double angle brackets that we would for a variable, but we include the values of the parameters as well (this is called ''passing'' the parameters to the macro). Specifically, we place them inside the double angle brackets after the macro name, separated from the macro name and from each other by a space:\\n\\n```html\\n<<wikipediaLink Aardvark>>\\n```\\n\\nLet's put it together:\\n\\n{{Sn:InitialAardvarkWikipediaLink||MagicSnippet}}\\n\\nLet's get this example in your wiki: create a new tiddler called `WikipediaLinks` and type this snippet in. (Careful: unlike in [[HTML]], `\\\\define` and `\\\\end` use a //backslash//, not a forward slash. Review the linked section if you can't remember which is which.) You should see the link appear, as it does in the preview above.\\n\\nThe process of TiddlyWiki handling a call to your macro is called ''macro expansion'', and we say that the macro has been ''expanded'' when the result shows up in our formatted tiddler, and that the result is the ''expansion'' of the macro call.\\n\\n!! Anatomy of a macro\\n\\nLet's take a closer look at what's going on here. Our macro started with this line:\\n\\n```html\\n\\\\define wikipediaLink(articleName)\\n```\\n\\nThe word starting with a backslash indicates a kind of ''pragma'', which is a really fancy name for an instruction that comes at the top of a tiddler and changes the way TiddlyWiki reads the rest of the tiddler. Specifically, the `\\\\define` pragma tells TiddlyWiki that every time it sees a reference to `wikipediaLink`, it should follow the instructions in this macro.\\n\\n`wikipediaLink`, of course, is the name of the macro.\\n\\nThe part in parentheses, called the ''parameter list'', describes the parameters of the macro. When TiddlyWiki sees a macro call, it will look at each of the parameters passed and match them up to the names in the parentheses, based on what order they come in. In our example, it concludes that `articleName` should be `Aardvark` within the macro. (In the [[next section|The Finer Points of Macros]], we'll see an example with more than one parameter.)\\n\\nEverything between the line beginning with `\\\\define` and the line beginning with `\\\\end` is called the ''body'' of the macro. When we call the macro, TiddlyWiki will stop processing wikitext and rendering your tiddler for a moment, read the body of the macro, and see:\\n\\n```html\\nhttps://en.wikipedia.org/wiki/$articleName$\\n```\\n\\nIt will spot the bit between the dollar signs, notice that we said `articleName` represented `Aardvark` in this case, and substitute in the word `Aardvark`, yielding an expansion of `https://en.wikipedia.org/wiki/Aardvark`. Finally, it will go back to processing wikitext, starting with the expansion of the macro, at which point it will notice that this is a web URL, which should be turned into a link, and display the link on-screen.\\n\\nLastly, there's the line:\\n\\n```html\\n\\\\end\\n```\\n\\nThis indicates that we've come to the end of the macro. A macro can go on for as many lines as we want it to, until we come to the `\\\\end`.\\n\\n!! Exercises\\n\\n{{Ex:PrettyWikipediaLink||ExerciseTemplate}}\\n{{Ex:MacroAdjacency||ExerciseTemplate}}\\n{{Ex:EmptyMacroCall||ExerciseTemplate}}\\n{{Ex:MacroPosition||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"MagicSnippet\":{\"title\":\"MagicSnippet\",\"created\":\"20201231200111052\",\"modified\":\"20210819204041169\",\"tags\":\"Template\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define deltid() <$action-deletetiddler $tiddler=<<currentTiddler>>/>\\n\\n<$list filter=\\\"[<renderingStatic>!match[yes]]\\\" variable=_ emptyMessage={{$:/sib/Snippet/MagicSideBySide}}>\\n\\n<div style=\\\"float: right; margin-top:10px; font-size:14px;\\\">\\n<$list filter=\\\"[is[shadow]field:title<currentTiddler>]\\\">\\nmodified by you (<$button class=\\\"tc-btn-invisible tc-tiddlylink\\\" actions=<<deltid>>>restore original</$button>)&nbsp;·\\n</$list>\\n<$button message=\\\"tm-copy-to-clipboard\\\" param={{!!text}} class=\\\"tc-btn-invisible tc-tiddlylink\\\">copy wikitext to clipboard</$button>\\n\\t\\n</div>\\n<<tabs \\\"$:/sib/Snippet/TiddlerAsWikitext $:/sib/Snippet/TiddlerAsRendered $:/sib/Snippet/MagicSideBySide $:/sib/Snippet/MagicEditor\\\" default:\\\"$:/sib/Snippet/MagicSideBySide\\\" class:\\\"sib-magic-bottom-border\\\">>\\n\\n</$list>\"},\"Meeting Tiddlers\":{\"title\":\"Meeting Tiddlers\",\"created\":\"20200531011856906\",\"description\":\"How to take notes on meetings, excising existing notes and using TiddlyWiki's timestamp format to identify when the meeting happened.\",\"modified\":\"20210908153643241\",\"parent\":\"The Shape of TiddlyWiki\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The next tiddler type to consider is the ''meeting''. If you stop and think about it, we probably already have a meeting, we just haven't created a tiddler for it yet: Jane met with our fearless wiki-writing protagonist to help her set up her computer, according to the journal entry we wrote. So let's create a meeting tiddler.\\n\\n!! Excising a meeting\\n\\nIt's common in TiddlyWiki to write something in a tiddler and then realize it should be its own smaller tiddler. In fact, it's so common there's a special button on the edit toolbar for this operation, called ''excising''. Let's excise the line about Jane welcoming our protagonist from our journal entry. To do this, edit the journal tiddler, select the sentence, and click the appropriate button <<textual-button \\\"excise\\\">> on the editor toolbar (just a little bit to the right of the heading icons). Let's call the new tiddler `EmployeeProfileSetupMeeting`.\\n\\nYou can see there's a choice for what we want to replace the excised text with: link, transclusion, or macro. Transclusions and macros are kind of fancy, so let's stick with the basic and easy-to-understand link for now; we'll explore [[transclusions|Transclusions]] and [[macros|Macros]] in detail in chapter 4. Click //Perform excision//, and the selected text will be replaced with a link. Save the tiddler and click the link, and we're looking at our new meeting tiddler, containing the text we originally selected.\\n\\n\\n!! Adding metadata\\n\\nLet's edit our new meeting tiddler and give it a tag of `Meeting`, to start with. We're also going to want to add some other metadata: we said in our requirements that we wanted to be able to find meeting notes based on (1) when the meeting happened and (2) who attended.\\n\\nLet's start with ''who attended''. We have at least two obvious options here. One is to simply make sure that we link to everyone involved in the meeting somewhere within the text of the tiddler. Another is to explicitly list out the participants in a field. The former option is probably easier, but you're more likely to forget someone, and you won't be able to distinguish between people who were //at// the meeting and people who were merely //discussed// at the meeting. Let's be a bit more precise and create a field, called `participants`, and set its value to `JaneDoe`. (We'd be more precise to add ourselves too; but most people do not often take notes on meetings they're not at, so this likely isn't necessary unless you frequently receive meeting notes from others that you'd like to import into your wiki.)\\n\\nThe other way we wanted to be able to slice our meetings is by ''when they happened''. One straightforward way to handle this would be to use the created time on the tiddler, which TiddlyWiki fills in automatically whenever you create one. However, this means that if we start our meeting notes prior to the meeting (to stub out an agenda if we're running the meeting), or fill them in afterwards (because we didn't have our laptop at the meeting), the time will be wrong. So for the sake of demonstration, let's create our own date/time field.\\n\\n{{Datetime Format}}\\n\\nThis can be a little irritating to work with, but there are several ways we can make it easier: plugins are available that can create a special date/time picker we can include on our meeting tiddlers, or we can autofill the time when we create the tiddler, thus making it easier to make any minor adjustments necessary. Let's do it manually for the moment so you learn how it works. (In an [[exercise|Ex:NewMeetingButton]] in chapter 5, we'll improve this using the autofill approach.) Create a new field called `at`, work out your current date and time in TiddlyWiki's date format, as described in the preceding paragraph, fill that in as the value of the `at` field, and click the ''add'' button.\\n\\nTo check your work, paste the following magic snippet into the text of the tiddler and have a peek at the live preview, which should show the date you've entered in a nice human-readable format. We'll learn what exactly this snippet does in [[Working with Dates]].\\n\\n{{Sn:MagicDateSnippet||BasicSnippet}}\\n\\nSave this tiddler, and we've got our first meeting.\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Metadata\":{\"text\":\"{\\n\\t\\\"version\\\": \\\"1.2.2\\\",\\n\\t\\\"tw-version\\\": \\\"5.2.1\\\",\\n\\t\\\"project-url\\\": \\\"https://groktiddlywiki.com\\\"\\n}\\n\",\"type\":\"application/json\",\"created\":\"20210130180352000\",\"modified\":\"20220103171717950\",\"tags\":\"\",\"title\":\"Metadata\"},\"Miscellaneous Widgets\":{\"created\":\"20210206180940598\",\"text\":\"A handful of widgets are frequently useful but haven't been needed in this book thus far. Here is a quick introduction to each of them. For a full listing of all widgets, visit the [[appropriate page of the TiddlyWiki documentation|https://tiddlywiki.com/#Widgets]].\\n\\n\\n!! `$let`\\n\\nThis is a shorter way of writing multiple `$set` [[widgets|Variables]]:\\n\\n{{Sn:SetVsLet||MagicSnippet}}\\n\\nLater variables within the `$let` widget can refer to earlier ones:\\n\\n{{Sn:LetPreviousVariableReferencing||MagicSnippet}}\\n\\nThis method is slightly less powerful than using the `$set` widget repeatedly:\\n\\n* The ''name of each variable must be literal'', not a transclusion. That is, you can't say `<$vars <<myname>>=<<myvalue>>>`, while you can say `<$set name=<<myname>> value=<<myvalue>>>`.\\n* You ''can't use an `emptyMessage` or a filter'' with `$let`, as [[Hiding and Showing Things]] explains you can do with `$set`.\\n\\nThis said, it's relatively rare to need either of these features, so `$let` often comes in handy.\\n\\nThere is also a `$vars` widget. This widget is identical to the `$let` widget except that it doesn't allow later variables named within the widget to refer to earlier ones. There's no good reason to use `$vars` anymore; it exists only for backwards compatibility (`$let` was introduced in version 5.2.1).\\n\\n\\n!! `$count`\\n\\nThis is a shorter way of displaying the number of tiddlers that match a filter.\\n\\n{{Sn:CountWidget||MagicSnippet}}\\n\\n\\n!! `$tiddler`\\n\\nThis is a friendly way of setting the current tiddler. In addition, it does a little more than just setting the `currentTiddler` variable would, by [[setting some variables to CSS classes appropriate to the new current tiddler|https://tiddlywiki.com/#TiddlerWidget]]. This is more esoterica than anything else, but on occasion having access to these might be important or useful.\\n\\n{{Sn:TiddlerWidget||MagicSnippet}}\\n\\n\\n!! `$radio`\\n\\nThis allows you to create a ''radio button''. Radio buttons work much like the `$edit-text` widget and the `$checkbox` widget. You use them by listing several values the user can choose from in separate `$radio` widgets, and TiddlyWiki will decide which one to show as selected based on the value of the bound field.\\n\\nThe `tiddler` attribute defaults to the current tiddler, and the `field` attribute to `text`, but either can be set to something else if desired. Below, we bind our radio buttons to the `text` field of a temporary tiddler.\\n\\n{{Sn:RadioExample||MagicSnippet}}\\n\\nNote the use of `&nbsp;` and `&ensp;` to handle spacing. These are called [[HTML entities|https://developer.mozilla.org/en-US/docs/Glossary/Entity]], a way of writing characters that don't have keys on the keyboard or have special meaning in HTML. The former is a //non-breaking space// (the same width as a normal space, but the browser will prefer not to put a line break there, unless there is no other way to make the line fit on the screen), and the latter is an //en space// (longer than a normal space, the width of a lowercase //n//). A more flexible way to handle the spacing between the buttons would be using [[CSS rules|Stylesheets]], but spaces are often good enough.\\n\\n\\n!! `$select`\\n\\nWhen you have more than a couple choices, you may wish to present them as a ''drop-down menu'' rather than as radio buttons. Let's rewrite the radio-buttons example to use a drop-down instead:\\n\\n{{Sn:SelectExample||MagicSnippet}}\\n\\nSometimes you might want to populate the drop-down menu dynamically, rather than listing out a number of options. This is easy to do with a `$list` widget:\\n\\n{{Sn:DynamicSelectExample||MagicSnippet}}\\n\\nYou can do something similar for radio buttons if you like, but it's more typical to use a drop-down when you aren't sure in advance what items will be in the list -- if at some point in the future there are unexpectedly 200 items rendering as radio buttons, your tiddler might be pretty hard to use!\\n\\n\\n!! Exercises\\n\\n{{Ex:SetLetReplacement||ExerciseTemplate}}\\n{{Ex:CountWidgetReplacement||ExerciseTemplate}}\\n{{Ex:FamilyRadioButton||ExerciseTemplate}}\\n{{Ex:ContactCard||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\",\"type\":\"text/vnd.tiddlywiki\",\"title\":\"Miscellaneous Widgets\",\"tags\":\"Section\",\"modified\":\"20220103170539534\",\"parent\":\"Tips and Tricks\",\"description\":\"A handful of widgets are frequently useful but haven't been needed in this book thus far. \"},\"More Organizational Tools\":{\"title\":\"More Organizational Tools\",\"caption\":\"5: More Organizational Tools\",\"created\":\"20200607150802909\",\"description\":\"In which we cover miscellaneous TiddlyWiki features that didn't fit in any of the previous chapters, including images, tabs, and more on filters and tags.\",\"list\":\"[[Classifying Tags]] [[Multi-Run Filters]] [[Images and Attachments]] Tabs [[Data Tiddlers]]\",\"modified\":\"20210410143903634\",\"parent\":\"Outline\",\"tags\":\"Chapter\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"At this point, we've covered most of the important features of TiddlyWiki. In the next chapter, we'll be exploring how we can use what we've learned to customize TiddlyWiki's interface and behavior. Before that, though, let's look at a few miscellaneous features that we haven't covered yet.\\n\\n!! In this chapter\\n\\n{{||ChapterOutlineTemplate}}\"},\"Multi-Run Filters\":{\"title\":\"Multi-Run Filters\",\"created\":\"20200715220657649\",\"description\":\"Filters can be made more complex and powerful by including more than one run.\",\"modified\":\"20210818205007521\",\"parent\":\"More Organizational Tools\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The last time we discussed filters, back in the [[Finding Things|Filing and Organizing]] chapter, we learned that there is such a thing as a [[filter run|Using Filter Expressions]], indicated by those outer square brackets, and that you can have more than one filter run in a filter. We also saw an example of this, in passing, when we discussed [[Text Substitution]] and this weird filter:\\n\\n```html\\n[title[EmployeeProfileSetupMeeting]contains:participants[]][[SomeRandomGuy]]\\n```\\n\\nSo why would we want to use multiple filter runs? Essentially, they let us build up more complicated logic. With a single run, we can only find tiddlers that match //all// of a set of conditions. With multiple runs, we can combine AND, OR, and NOT conditions as much as we like, although due to the “pipeline” nature of filters, the logic works a little differently than the conventional Boolean logic used in Excel or a typical programming language.\\n\\n\\n!! Creating OR conditions\\n\\nLet's imagine we want to find all tiddlers which are ''either meetings or journal entries''. If we limit ourselves to a single run, it's easy to find tiddlers which have //both// tags by using two steps in the run: `[tag[Journal]tag[Meeting]]`. But the only way we can find ones that have //either// tag without using multiple runs is to run two filters and manually combine the results in our heads. That's no good at all!\\n\\nFortunately, all we have to do is ''create two runs'' by putting the filter steps in different outer sets of square brackets:\\n\\n```html\\n[tag[Journal]] [tag[Meeting]]\\n```\\n\\nTiddlyWiki will process each of these runs separately, gathering first all the tiddlers that are tagged //Journal// and then all the tiddlers that are tagged //Meeting//, and combine the results. Unless we add an additional sort step or the same tiddler has both tags (more on that in a moment), all of the tiddlers tagged //Journal// will come before all the tiddlers tagged //Meeting//.\\n\\nWe can, of course, add additional steps to either of the filter runs. For instance, maybe we want to see all journal entries, along with only the meetings that included Jane:\\n\\n```html\\n[tag[Journal]] [tag[Meeting]contains:participants[JaneDoe]]\\n```\\n\\nPutting spaces between filter runs is optional but can help to make filters more readable. (Don't put spaces between filter //steps//, though: as noted in [[Using Filter Expressions]], your filter won't work as expected if you do that.)\\n\\nAnother extremely common OR condition is a simple ''list of tiddlers''. For instance, imagine we want to get tiddlers A, B, and C:\\n\\n```html\\n[[A]] [[B]] [[C]]\\n```\\n\\nOr, since the names A, B, and C don't have spaces in them, we can just say:\\n\\n```html\\nA B C\\n```\\n\\nYou may notice that this is exactly the same format as a [[tiddler list|Ordering Tiddlers]]. This, incidentally, is why, in a note at the end of [[Filters and Transclusions]], we were able to set the `filter` attribute of a list to simply the `{{!!family}}` list field and have it work like a filter.\\n\\nDon't, however, take this to mean that tiddler lists and filters are the same thing. While a tiddler list is a valid filter, most filters are not valid tiddler lists; you can't, for example, use a filter run like `[tag[Contact]]` as an element of a tiddler list and expect it to work.\\n\\n\\n!! Dominant appending\\n\\nYou might wonder what happens if the same tiddler comes up in multiple filter runs. Let's try it. Start with this filter:\\n\\n```html\\n[tag[Meeting]]\\n```\\n\\nYou should see several meetings. Now try adding tiddlers that are tagged `OnboardingHr`, since we have at least one meeting that's part of that project:\\n\\n```html\\n[tag[Meeting]] [tag[OnboardingHr]]\\n```\\n\\nYou should notice several things. First, no duplicate entries were created. But second, the //order// changed. Why's that?\\n\\nThink about how TiddlyWiki works //within// filter runs for a moment. It starts with the leftmost filter step, then passes the output of that step to the next step to the right, which does something with that output and produces its own output, and so on until we reach the end of the filter run.\\n\\nTiddlyWiki does something similar with filter runs. The output of the first filter run doesn't affect the input of the second filter run -- the second filter run gets a fresh set of input tiddlers -- but TiddlyWiki does execute each filter run in order from left to right and combine the results as it finishes each. It's the way it combines the results that can get tricky.\\n\\nWe'll call the output of the filter run that's currently being executed the //current run// and the set of output produced from combining all of the previous filter runs the //accumulated results//. (The accumulated results can be empty -- for instance, if this is the first filter run, or if all previous filter runs returned no results.)\\n\\nWhen a run finishes, TiddlyWiki ''dominantly appends'' the output from the current run to the accumulated results. During a dominant append, if the item doesn't exist in the list of accumulated results already, it goes at the end of the list, as you would expect. However, if the item already exists in the accumulated results, it is actually //removed// from the list in its current position and then added back at the end. This is why you saw the order of the list change -- an item that wasn't already the last item in the accumulated results was shifted to the end because it also showed up in the second run.\\n\\n\\n!! Run prefixes\\n\\nIf you don't want the standard dominant-append behavior, you can place the character `=`, `+`, `-`, or `~` (or the equivalent named prefixes `:all`, `:and`, `:except`, and `:else`), directly in front of the filter run, e.g., `=[tag[Meeting]]`. These work as follows:\\n\\n; `=` or `:all`\\n: Just ''slap the results of the runs together'', rather than performing deduplication by dominantly appending; `A B C` and `B C D` results in `A B C B C D`, rather than the default of `A B C D`.\\n\\n; `+` or `:and`\\n: A few paragraphs up, we said each filter run gets its own input. That's not quite true; actually, each filter run gets its own input //unless// you put a `+` in front of it, in which case ''its input is the accumulated results and its output replaces everything output so far''. You can usually accomplish the same thing by just combining the filter runs together into one run (e.g., `[tag[Meeting]] +[tag[Journal]]` is an overly complex way to say `[tag[Meeting]tag[Journal]]`), but sometimes you'll want to do something like OR together the results of several filter runs and then AND their results with another run.\\n\\n; `-` or `:except`\\n: ''Remove items in this run'' from the accumulated results, if they were present (Boolean NOT condition).\\n\\n; `~` or `:else`\\n: ''If the list of accumulated results is currently empty'', execute this run and make its output the accumulated results. Otherwise, ignore the run completely.\\n\\nSeveral prefixes were added in version 5.1.23 and 5.2.0 that are only available in the named variants. They're a little harder to understand, and TiddlyWiki users have gotten by without them for years, so you won't need to use them for the exercises and takeaways and you can skip them for now if you like, but at some point you might want to investigate them.\\n\\n<$details summary=\\\"More named prefixes\\\">\\n\\n; `:filter`\\n: Evaluate the filter run on each tiddler in the accumulated results and ''output elements where the filter expression does not evaluate to an empty list''. This differs from `+` in that `+` makes the output of its run the accumulated results. `:filter` doesn't use the output of its run at all, except to check whether it's non-empty.\\n\\n; `:intersection`\\n: Like `+`, but ''the second filter run is evaluated completely before being ANDed''. The TiddlyWiki documentation gives this example: if you are trying to see what tags two tiddlers have in common, you might say `[[Tiddler 1]tags[]] +[[Tiddler 2]tags[]]`; but this wouldn't work because `[[Tiddler 2]]` is a constructor and will wipe out anything from the first filter run. `:intersection` evaluates the two filter runs in isolation, so that the ANDing takes place on the sets of tags once they've been expanded.\\n\\n; `:map`\\n: Apply this filter run to each item in the accumulated results in turn, and ''replace each item in the accumulated results with the output of the mapped filter run''.\\n\\n; `:reduce`\\n: ''Flatten the accumulated results into a single value'' by applying this filter run to each tiddler in the accumulated results in turn. Within this inner filter run, a variable `accumulator` contains the single value produced by the previous execution of the filter run. The output of the last input tiddler becomes the run's output.\\n\\n; `:sort`\\n: Apply this filter run to each tiddler in the accumulated results in turn, and ''sort the accumulated results by the key produced by this filter expression''. That is, the filter run followed by `:sort` transforms each input into the form needed for sorting. This is the same thing as the `sortsub` operator, but it's often easier to use because you don't have to define a separate variable containing the sort filter.\\n\\nYou can read more about these run prefixes [[in the documentation|https://tiddlywiki.com/#Filter%20Expression]].\\n\\n</$details>\\n\\n\\n\\n!! Exercises\\n\\n{{Ex:JaneMeetingMultirun||ExerciseTemplate}}\\n{{Ex:FudgeWithoutJane||ExerciseTemplate}}\\n{{Ex:RedATags||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Naming Conventions\":{\"title\":\"Naming Conventions\",\"created\":\"20200603181515580\",\"description\":\"//Naming conventions// are rules about how sets of things should be named. Creating your own conventions will make it easier to create titles and easier to find tiddlers later.\",\"modified\":\"20210504023207883\",\"parent\":\"Filing and Organizing\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"//Naming conventions// are rules about how sets of things should be named. Creating your own conventions will make it easier to create titles and easier to find tiddlers later.\\n\\n\\n!! Coding tiddler names\\n\\nSometimes it's helpful to include a bit of additional information in a title by convention. For instance, in my personal reading notes, I suffix the names of sources with the year of publication, and I prefix the names of people and organizations with `Mr`, `Ms`, or `The`. This makes it quick and easy to identify whether a tiddler I'm looking at is about an idea, a source, or a person.\\n\\nOf course, I could get the same information by looking at the tags, fields, and text of each tiddler. But to do that, I would have to open each of the tiddlers, or create some extra tooling to see those values in a convenient format. Unless you intentionally hide it, it's rare to not be able to see the //title// of a tiddler, so if you have a simple piece of information you frequently need to see, it makes sense to include it in the title.\\n\\n\\n!! Capitalization\\n\\nTiddlyWiki titles are, irritatingly, ''case-sensitive'' -- you can create tiddlers called `Apple Computer` and `Apple computer`, and TiddlyWiki considers them different things. As such, it's a good idea to make sure you always capitalize things consistently, or you may end up creating duplicate tiddlers by mistake.\\n\\nSome languages use Title Case, Where All Words Are Capitalized Except a Few Little Ones. Others prefer to capitalize only nouns in the phrase, or only the first letter. It doesn't matter what you pick, but pick a standard and always use it for your tiddler titles.\\n\\nIf you're using CamelCase titles, that point is moot, but several additional considerations come up:\\n\\n* It's useful to ''normalize the capitalization'' of weird things like acronyms: for instance, it's not `WritingInHTML` but `WritingInHtml`.\\n* Some people make single-word titles into CamelCase by ''capitalizing a letter in the middle'' (e.g., writing `ApPle` instead of `Apple`). Aside from being pretty ugly, this can be dangerous since you might pick a different letter to capitalize the next time and not notice that you already have a similar tiddler; this is one of the main arguments for avoiding CamelCase altogether. Even if I'm using CamelCase titles for most tiddlers in a wiki, I prefer to dispense with the CamelCase and use extra brackets around any link where the title is naturally only one word.\\n\\nSome people like to capitalize tags differently than content tiddlers (for instance, tags are all lowercase). I dislike this approach since [[tags really are tiddlers too|Tags]], but if it's helpful for you, go for it.\\n\\n\\n!! Plurals\\n\\nAnother way you can end up creating duplicate tiddlers by mistake is to write one of the titles in the singular and the other in the plural. This is especially common with tags. For this reason, I like to always ''write all nouns in the singular''. So instead of tagging tiddlers with `CoffeeOptions`, we would tag them with `CoffeeOption`. This isn't as ungrammatical as it may look at first glance, since each tiddler with the tag is a single coffee option. If you prefer, you could just as easily choose to make all nouns plural, but it's best to pick one and stick with it.\\n\\n\\n!! Namespacing\\n\\nIf you have a lot of tiddlers of the same type or on the same topic, you might want to ''begin all of their titles the same way''. For instance, we might begin all tiddlers related to the onboarding project with `Onboarding`. Often, people will separate portions of the tiddler name with a slash (`/`) or a colon (`:`), e.g., `Onboarding/People` or `Onboarding:People`.\\n\\nAs another example, in this book's wiki, all of the exercise tiddlers begin with `Ex:`, the code snippet tiddlers begin with `Sn:`, and the takeaway tiddlers begin with `Ta:`.\\n\\nThe advantages are that the related tiddlers then sort together in alphabetical listings, you immediately know that you thought of them as a unit even without looking at any fields other than the title (see //Conventions//, above), and it feels nice and clean. The disadvantage is that you end up thinking more hierarchically, which isn't always desirable: it now seems like this tiddler is //part// of this single, specific other thing, and less related to anything else it may be linked or otherwise connected to. Your titles may also look a little less pretty.\\n\\n\\n!! Exercises\\n\\n{{Ex:NamingConventionImagination||ExerciseTemplate}}\\n{{Ex:ProblematicTiddlerNames||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"On Notes\":{\"title\":\"On Notes\",\"created\":\"20201121224639134\",\"description\":\"More on how to take notes and organize ideas in a tiddly style.\",\"modified\":\"20210110054747287\",\"parent\":\"Resources\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"A few useful resources on notes, particularly evergreen-style notes:\\n\\n* //How to Take Smart Notes//, Sönke Ahrens\\n** This book discusses Niklas Luhmann's //Zettelkasten// system and how you can use it to research and study.\\n* [[How to Make a Complete Map of Every Thought You Think|https://users.speakeasy.net/~lion/nb/book.pdf]], Lion Kimbro\\n** Ebook about using a series of three-ring binders to take notes on and organize all your thoughts. Focuses on mind-maps, hierarchical subject divisions, and indexes as the organizing principles. It is very stream-of-consciousness, so will probably not appeal to someone who wants a straightforward treatment of note-taking techniques, but if you like seeing how other people operate their note-taking practices and thinking through system design, you might appreciate it more this way.\\n\\nIf you're interested in Zettelkasten in particular, check out my [[bibliography|https://zettelkasten.sorenbjornstad.com/#ZettelKastenBibliography]] on the topic.\"},\"Options for Saving and Hosting Your Wiki\":{\"title\":\"Options for Saving and Hosting Your Wiki\",\"created\":\"20201121231218670\",\"description\":\"The variety of ways you can save and store your wiki.\",\"modified\":\"20210504013511473\",\"parent\":\"Appendices\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In [[Installing TiddlyWiki]], we decided to use TiddlyDesktop to save and manage our wiki. However, once you have the hang of TiddlyWiki, TiddlyDesktop is not necessarily the best fit. For instance, it doesn't let you access your wiki across the internet or make it available to other users. Or you might be frustrated with the limitations on [[Images and Attachments]] in a single-file wiki and want to store your wiki as a folder of individual tiddlers and host it on Node.js.\\n\\nIf this sounds like something you'd like to explore, you can find a list of all the available savers in the [[Getting Started|https://tiddlywiki.com/#GettingStarted]] tiddler on tiddlywiki.com. Several particularly interesting ones:\\n\\n* [[TiddlyDesktop|https://tiddlywiki.com/#Saving%20on%20TiddlyDesktop]] is the tool that //Grok TiddlyWiki// has generally been assuming you are using.\\n* The [[GitHub saver|https://tiddlywiki.com/#Saving%20to%20a%20Git%20service]] allows you to save your changes to a public or private Git repository hosted on GitHub.\\n* [[Node.js|https://tiddlywiki.com/#Installing%20TiddlyWiki%20on%20Node.js]] is really TiddlyWiki's native platform, and the single-file versions a kind of package containing the elements needed to allow it to operate outside of Node. This is the most powerful way to work with your wiki, but also requires some technical expertise to take advantage of.\\n* [[Timimi|https://tiddlywiki.com/#Timimi%3A%20WebExtension%20and%20Native%20Host%20by%20Riz]] is a combination browser add-on and desktop application that allows you to seamlessly save to your hard drive -- much like TiddlyDesktop, but you access your wiki from within a normal browser.\\n* [[Quine 2|https://tiddlywiki.com/#Saving%20on%20iPad%2FiPhone]] allows you to conveniently view and edit TiddlyWikis on an iOS device.\"},\"Ordering Tiddlers\":{\"title\":\"Ordering Tiddlers\",\"created\":\"20200608015232773\",\"description\":\"A set of tiddlers, such as those with a particular tag, can be given a specific order using a tiddler list.\",\"modified\":\"20210504025014452\",\"parent\":\"Filing and Organizing\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Sometimes a set of tiddlers has a particular //order//. For instance, this book is composed in TiddlyWiki with each section as a tiddler, and the sections should be read in a certain order. We need some way of telling TiddlyWiki what that order is.\\n\\nWe could simply create a tiddler that contained links to each of the tiddlers in order, but then we'd have to remember to manually change that tiddler every time we created a new one, and it wouldn't help TiddlyWiki display them in the correct order in [[tables of contents|Creating Hierarchies with a Table of Contents]] or tag pills. We need something more formal.\\n\\n\\n!! The tiddler list\\n\\nTiddlyWiki uses ''tiddler lists'', often called just //lists//, as a formal mechanism to order tiddlers. As you may recall, at its most basic, a list is simply a series of tiddler names written in a field, separated by spaces, or placed in double square brackets if the tiddler name itself contains a space. We first discussed the idea of a list way back in [[Contact Tiddlers]], when we created a `family` field on our contact tiddlers that was a list. The `participants` field on our meetings is also a list.\\n\\nOne list on each tiddler is particularly special to TiddlyWiki. This list is stored in the field called, appropriately enough, `list`. If this field is populated on a tiddler that's serving as a tag, TiddlyWiki will peek into it when it's displaying a tag pill or a [[table of contents|Creating Hierarchies with a Table of Contents]] and list the tagged tiddlers in the order they appear in the `list` field. (If there is no `list` field, the tagged tiddlers will be shown in alphabetical order by title.)\\n\\nTwo related fields are available as well, `list-before` and `list-after`. These fields are stored on //tagged// tiddlers rather than tagging tiddlers, and they allow you to modify how TiddlyWiki reads the `list` field without actually changing that field. For example, suppose we have tag tiddler T tagging tiddlers A, B, C, and D. The `list` field of tiddler T is `A B D`. If we populate the `list-before` field of tiddler C with `D`, then when we see a list of the tiddlers tagged by T, we'll see `A B C D`. On the other hand, if we populate the `list-after` field of tiddler C with `A`, we'll see `A C B D`.\\n\\nRight now, it is probably not obvious why you would ever do this rather than simply modify the `list` field. In most cases, it's indeed easier and clearer to change the `list` field. However, there may be some times when you prefer not to modify a tag tiddler -- for instance, if it's a [[shadow tiddler|Shadow Tiddlers]] that makes up part of TiddlyWiki's internals. We'll learn more about this in [[Chapter 6|Looking Under the Hood]].\\n\\n\\n!! Corner cases\\n\\nIf you like [[finding problems with everything you read|https://zettelkasten.sorenbjornstad.com/#HackingPedantryAndScience]], you might have noticed a couple of possibilities not accounted for by the explanation above. Here's what happens in those:\\n\\n* If a tiddler is in more than one of `list`, `list-before`, and `list-after`, ''the last one in that ordering wins'' (i.e., `list-after` takes precedence over `list-before`, and `list-before` over `list`).\\n* If a tiddler is tagged by T but doesn't appear in T's `list` field and doesn't have a `list-before` or `list-after` field (i.e., ''no ordering information is available at all''), TiddlyWiki puts it after all tiddlers that do have ordering information. If there are multiple tiddlers with no ordering information, they appear in alphabetical order by title.\\n\\nSee [[Order of Tagged Tiddlers|https://tiddlywiki.com/#Order%20of%20Tagged%20Tiddlers]] in the TiddlyWiki documentation for even a couple more details that you probably don't need.\\n\\n\\n!! Changing the order of lists\\n\\nSo that's all well and good, but editing a `list` field to move things around sounds like a bit of a pain, doesn't it? Maybe it's all right if we have a couple of tiddlers that need ordering, but what if there are dozens? Editing a line of text that scrolls off the side of the screen isn't much fun.\\n\\nFortunately, TiddlyWiki offers us several ways to drag and drop tiddlers into the right order and automatically modify the `list` field to match. In fact, we've used one of these drag-and-drop views already: the //Open// tab in the sidebar. That one just happens to be reordering a list of open tiddlers rather than a list of tiddlers with a particular tag.\\n\\nThe easy way to reorder tiddlers with a particular tag is to find a tag pill for that tag, click on the pill, and drag and drop the entries in the list. If the tag tiddler doesn't currently have a `list` field, your first drag-and-drop will create it, with all the tiddlers in alphabetical order except the one you just moved.\\n\\nYou can also insert such a reorderable list anywhere you want using `list-links-draggable`:\\n\\n```html\\n<<list-links-draggable \\\"MyTiddler\\\">>\\n```\\n\\nThis will produce a bulleted list with links to each of the tiddlers listed in the `list` field of `MyTiddler`, and if you drag and drop them, the field will be updated, just like if you drag and drop tiddlers within the tag pill. (As with the various table-of-contents incantations [[in the previous section|Creating Hierarchies with a Table of Contents]], this is a built-in macro, and this will all make more sense once we get to [[Chapter 4|Variables, Macros, and Transclusions]].)\\n\\n____\\n\\n!! Exercises\\n\\n{{Ex:MeetingOrdering||ExerciseTemplate}}\\n{{Ex:MeetingOrderingByMacro||ExerciseTemplate}}\\n{{Ex:OnboardingPeopleFirst||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Outline\":{\"title\":\"Outline\",\"created\":\"20210110054022717\",\"list\":\"[[Front Matter]] [[The Shape of TiddlyWiki]] [[Filing and Organizing]] [[Filtering and Formatting]] [[Variables, Macros, and Transclusions]] [[More Organizational Tools]] [[Looking Under the Hood]] [[Tips and Tricks]] [[Getting Technical]] [[Supplemental Exercises]] [[Common Misunderstandings]] Resources Appendices\",\"modified\":\"20210820160542320\",\"tags\":\"Index\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"This outline of //Grok TiddlyWiki// summarizes all the chapters and sections. Click a chapter or section to jump in.\\n\\nYou can also browse all [[exercises|Exercise Browser]], [[takeaways|Takeaway Browser]], or [[concepts|Concept]].\\n\\n<dl class=\\\"gtw-outline\\\">\\n\\t<$list filter=\\\"[list[Outline]]\\\">\\n\\t<div class=\\\"gtw-chapter-item\\\">\\n\\t\\t<dt>\\n\\t\\t<$link to={{!!title}}>\\n\\t\\t<$view field=\\\"caption\\\">\\n\\t\\t\\t{{!!title}}\\n\\t\\t</$view></$link>\\n\\t\\t</dt>\\n\\t\\t<dd>\\n\\t\\t\\t<div style=\\\"font-style: italic;\\\">\\n\\t\\t\\t\\t{{!!description}}\\n\\t\\t\\t</div>\\n\\n\\t\\t{{||ChapterOutlineTemplate}}\\n\\t\\t\\n\\t\\t</dd>\\n\\t</div>\\n\\t</$list>\\n</dl>\\n\\n<style>\\ndl.gtw-outline {\\n\\tpadding-left: 0;\\n}\\n\\ndl.gtw-outline dd ul {\\n\\tmargin-left: 18px;\\n\\tpadding-left: 0;\\n}\\n\\ndiv.gtw-chapter-item {\\n}\\n</style>\"},\"Philosophy of Grok TiddlyWiki\":{\"title\":\"Philosophy of Grok TiddlyWiki\",\"created\":\"20200531031717111\",\"description\":\"Why this book exists and what it aims to do.\",\"modified\":\"20210321225117350\",\"parent\":\"Front Matter\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"!! The role of this book\\n\\nThis book's mission is to ''teach you TiddlyWiki from start to finish''. You can start with a vague idea of what TiddlyWiki is and finish with the ability to create a wiki for any purpose that fits your brain and works exactly how you want it to.\\n\\nThis book is intended to be ''thorough'' and teach you to fully understand the concepts it covers. It's easy to use a tool like TiddlyWiki for months or years by copying and pasting snippets from the Web or trying random things until it works. While this random-stumbling-around-in-the-dark approach to problem-solving might allow you to accomplish your goal, you will get better only very slowly, and it will be frustrating every time, because you don't really understand what you're doing. This book will give you the terminology to think and talk about what you're doing and the insight into why things work the way they do that you need to easily solve new problems on your own.\\n\\nYou will not by any means learn everything there is to know about TiddlyWiki in this book. You would not want to work through a book that long! However, by the time you finish the book, you will ''be able to think like a TiddlyWiki user'' and be deeply comfortable with the most important TiddlyWiki features. You will also have the knowledge and skills you need to figure the rest out yourself as you need it, by consulting the technical documentation, exploring the innards of TiddlyWiki, and occasionally asking for help from the community.\\n\\nThis book will try to ''clear an easier path for you'' by making executive decisions on a few choices that tend to trip up new users, like what saver to use (in TiddlyWiki, you have to choose //how to save your wiki// before you can start using it -- yes, really). By the end of the book, you'll be in a better position to consider other options if the initial ones aren't right for you.\\n\\n\\n!! The method\\n\\nOver the course of the book, we will create a TiddlyWiki that can be used for keeping notes on an average office job, stopping to explain each choice and tool provided by TiddlyWiki along the way. We'll cover the basics as well as some moderately advanced customizations and custom logic. No “programming” in the traditional sense is necessary to customize TiddlyWiki: if you can use tools like Microsoft Excel or HTML, you can learn this part of TiddlyWiki. And if you don't know Excel or HTML, millions of “non-technical” people have gotten good at those, so don't worry. (If the idea of programming excites you instead of scaring you, you can write plugins in JavaScript too…although you may be shocked to find how rarely you need or want to go beyond the tools TiddlyWiki provides. You'll find more nerdy details in the [[Getting Technical|Getting Technical]] chapter.)\\n\\nTaking notes on an office job might be a boring topic to focus this book around, but it's a general, unspecialized need with plenty of tricky questions to deal with, and unlike many other topics I could have chosen, I think most people reading this book will have gotten close enough to an office job or something similar to understand what we're talking about.\\n\\nIn addition to reading the text, you'll do a series of ''exercises'' in your sample wiki, and you'll study ''takeaways'', short prompts intended to test and maintain your knowledge of material you've already seen. For more on these features, move on to the next section, [[How to Use This Book]].\"},\"Plugins\":{\"title\":\"Plugins\",\"created\":\"20200530170315795\",\"description\":\"Plugins are bundles of tiddlers that provide new functionality.\",\"modified\":\"20210418133307463\",\"parent\":\"Looking Under the Hood\",\"tags\":\"Concept Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"We've been talking about plugins occasionally throughout the book, so it's worth taking a moment to explain what exactly plugins are and how they work.\\n\\nPlugins are essentially just bundles of [[tiddlers|Tiddlers]]. They're typically composed of [[system tiddlers|System Tiddlers]] which contain some kind of code or interface element or tool, but in theory the tiddlers can be named anything and contain anything. To put this more formally, a plugin is a single tiddler that contains multiple “virtual” tiddlers, known as //shadow// tiddlers. We'll learn about how shadow tiddlers behave [[in the next section|Shadow Tiddlers]].\\n\\nYou can install a plugin by finding any link to it, usually on a plugin demo or documentation TiddlyWiki on the web, and ''dragging and dropping'' it into your wiki -- this copies the tiddler and therefore the plugin. Many “official” plugins can also be installed through the //Plugins// section of the Control Panel. (If you [[use TiddlyWiki on Node.JS|Options for Saving and Hosting Your Wiki]], you have [[some other options|https://tiddlywiki.com/#Installing%20custom%20plugins%20on%20Node.js]] as well that may make it easier to keep the plugins up to date.)\\n\\nIf you look at the ''Plugins'' section of the ''More'' tab in the sidebar, you'll see at least one plugin even in a clean install -- most of TiddlyWiki's core code is actually implemented as a plugin, [[$:/core]]. Clicking on a plugin in this view will show you a special tiddler that contains a little bit of information about the plugin as well as a list of all the bundled tiddlers it has installed into your wiki. Deleting the plugin tiddler will remove the plugin from your wiki, including all its shadow tiddlers (don't try this with core though!).\\n\\nThe [[Useful Plugins]] appendix lists some publicly available TiddlyWiki plugins that I find particularly useful.\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Project Tiddlers\":{\"title\":\"Project Tiddlers\",\"created\":\"20200531014330950\",\"description\":\"How to organize meetings and knowledge into overarching projects.\",\"modified\":\"20210504021610224\",\"parent\":\"The Shape of TiddlyWiki\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Now for ''project tiddlers''. Let's create ourselves a project for completing the company onboarding process. Create a new tiddler (that's the <<textual-button \\\"new-button\\\">> button in the upper-right corner, if you forgot, or Alt+N if you have your hands on the keyboard already), name it `OnboardingProcess`, and tag it `Project`.\\n\\nWhat kind of information do we want to keep track of for projects? We might imagine including deadlines, stakeholders, approvals, and so on, but it's probably going to depend a bit on the project, and at this point we're too new to understand how the company operates and what processes our projects will move through, so let's refrain from adding fields until we know we need them. However, we do already know that every project we're assigned will have an entry in the company's ticket-tracking system with an associated ID number, so let's create a field called `ticketnum`. Our protagonist's onboarding is ticket number 245188, so put that in as the field value. Let's throw something in the body describing the project for good measure: how about `A project where we waste a bunch of perfectly good time learning all about this nice company.`.\\n\\n!! Project contents\\n\\nThere's our project tiddler, but it's missing something: the meeting we had with Jane was definitely part of the company onboarding process. We need to relate these two tiddlers somehow. How should we do that? We have several sensible and straightforward options, along with many more silly ones. Here are the most obvious choices:\\n\\n# We could ''link to the meeting'' from the project tiddler.\\n# We could ''link to the project'' from the meeting tiddler.\\n# We could ''create a field'' called `project` on the meeting tiddler with a value of `OnboardingProcess`.\\n# We could ''tag the meeting'' with the project's title, `OnboardingProcess`.\\n\\nOption (1) works, but if you have a large project, your project tiddler might be primarily composed of links to tiddlers relating to the project. In general, it's usually better for tiddlers to indicate that they're a part of some whole, rather than the whole listing out all of its parts; it's easy in TiddlyWiki to identify all of the parts of a whole in any number of ways, but the reverse tends to be fussier. Further, it's irritating to have to open and edit the “whole” tiddler every time you add a “part” tiddler, and it's easier to forget to do that than to forget to add a “whole” reference to the “part” tiddler. (If you happen to know anything about [[relational database|https://en.wikipedia.org/wiki/Relational_database]] design, you'll see a clear parallel here. TiddlyWiki is in fact arguably a weird kind of relational database, though without rigid schemas.)\\n\\nOption (2) is a solid choice and particularly easy to implement, but links carry less information about what exactly the relationship between the two tiddlers is than tags or fields do. With a link, we just know they're related in some way. With a field or tag, we can know specifically that the meeting is part of the project -- rather than the project being part of the meeting, or the project being mentioned in the meeting as a horrific disaster that needs to be avoided in the next project.\\n\\nOption (3) provides the most information about the precise relationship between the two tiddlers. However, since you'll be creating your own custom field, you'll have to create your own customizations in TiddlyWiki to make the field do anything useful aside from showing up in the “fields” section of the Info tab, so this requires extra work.\\n\\nOption (4) is easy, fast, and effective, and tags are understood as the primary means of creating hierarchies and memberships in various plugins and parts of TiddlyWiki's core. Additionally, you get the autocomplete functionality of tags when searching for a “whole” tiddler to attach your “part” tiddler to. This sounds like an obvious coup, but the disadvantage is that if you have a large wiki, you may end up cluttering up your tag space by using this mechanism for many different things -- that is, dozens or hundreds of tags will show up in your tag picker, making it harder to find the ones you want. There are a number of ways to mitigate this, such as [[color-coding them|Classifying Tags]] or adding prefixes to their names to describe their functions, but it's still a disadvantage, and some experienced users of TiddlyWiki prefer to use fields in many cases for this reason.\\n\\nLet's go with option (4) for this wiki: it's an important part of TiddlyWiki to understand, whether or not it turns out to be your preferred method, and it's a quick and easy way to get started.\\n\\nTo make the `EmployeeProfileSetupMeeting` a part of the `OnboardingProcess` project, then, simply edit the `EmployeeProfileSetupMeeting` tiddler and add a tag `OnboardingProcess`. To check your work, go back up to the `OnboardingProcess` tiddler, click the info button, and choose the //Tagging// tab; you'll see that `OnboardingProcess` is now tagging `EmployeeProfileSetupMeeting`. You can also see the relationship by clicking on the `OnboardingProcess` tag pill on the `EmployeeProfileSetupMeeting` tiddler; above the line you'll see the `OnboardingProcess` tiddler itself (the “whole” tiddler, or the “tag” tiddler), and below the line you'll see a list of everything tagged with that tag (currently, only `EmployeeProfileSetupMeeting`).\\n\\n\\n!! Exercises\\n\\n{{Ex:CarItems||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Public Wikis\":{\"title\":\"Public Wikis\",\"created\":\"20201121225056453\",\"description\":\"Some real TiddlyWikis you can explore for examples and inspiration.\",\"modified\":\"20210906223739549\",\"parent\":\"Resources\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"One of the best ways to learn about any system is to see examples of what others have done with it. Here are some interesting TiddlyWikis:\\n\\n* [[My Zettelkasten|https://zettelkasten.sorenbjornstad.com]]:  shameless self-promotion, but it should be a nice complement to this book. I have several other wikis, but this is my largest public TiddlyWiki and where I do a lot of my TiddlyWiki-assisted thinking.\\n* [[Interactive Historical Atlas of the Disciplines|http://atlas-disciplines.unige.ch]], a beautiful catalog of the branches of science over time.\\n* The [[Community page|https://tiddlywiki.com#Community]] on tiddlywiki.com lists a number of wikis.\\n\\nIf you have a public TiddlyWiki you'd like to see on this list, click the //send feedback// link below and send over a URL and description.\\n\\nThe [[TiddlyWiki Links Aggregator|https://links.tiddlywiki.com]] is still in the early stages of development, but promises to be a valuable resource for finding examples. Right now you should be able to find some under the [[Examples|https://links.tiddlywiki.com/topics/examples/]] tag, but this is subject to change.\"},\"Qualification\":{\"title\":\"Qualification\",\"created\":\"20210206154042167\",\"description\":\"The `qualify` macro lets you avoid having state in one use of a template affect another use of a template.\",\"modified\":\"20220103170403292\",\"parent\":\"Tips and Tricks\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"When we write templates that rely on ''maintaining state'' (that is, values stored in fields somewhere that control the display of the template), we may run into a problem: if the template is displayed in multiple locations at once, the state can collide and cause changes in one location to apply to the other locations as well.\\n\\nThis will become more clear with an example. Put the following on a template called `SelectiveTemplate` in your example wiki:\\n\\n```html\\n<$let stateTiddlerName=\\\"$:/temp/IsOpen\\\">\\n\\t<$reveal state=<<stateTiddlerName>> type=\\\"match\\\" text=\\\"yes\\\">\\n\\t\\t\\t<$button set=<<stateTiddlerName>> setTo=\\\"no\\\">Close</$button>\\n\\n\\t\\t\\tHere is some information that can be selectively hidden and shown: This tiddler's name is {{!!title}}.\\n\\t</$reveal>\\n\\n\\t<$reveal state=<<stateTiddlerName>> type=\\\"nomatch\\\" text=\\\"yes\\\">\\n\\t\\t\\t<$button set=<<stateTiddlerName>> setTo=\\\"yes\\\">Open</$button>\\n\\t</$reveal>\\n</$let>\\n```\\n\\nLeaving the template tiddler open, add a template transclusion `{{||SelectiveTemplate}}` to some other tiddler. Now, click the //Open// button on one of the tiddlers. You'll see that the other tiddler's expandable section opens as well.\\n\\nThis makes sense, given that both `$reveal` widgets are bound to the same tiddler field. In a few cases, this might even be what we want. But in most cases, we'd probably like them to expand and contract separately.\\n\\nOne solution is to place the state in a field on the tiddler itself, using something like `set=\\\"!!isopen\\\"`. Sometimes, this is quite appropriate, but other times, editing the tiddler that is using a template is messy, or even doesn't work at all. The `qualify` macro provides a more robust method. Given a tiddler title, it adds a number to the end of that title that is guaranteed to be unique for each location the invocation of the `qualify` macro might be displayed within the story river (it even takes into account the fact that one tiddler might be recursively transcluded into multiple other tiddlers).\\n\\nWe can fix our example above using the `qualify` macro as follows:\\n\\n```html\\n<$let stateTiddlerName=<<qualify \\\"$:/temp/IsOpen\\\">>>\\n\\t<$reveal state=<<stateTiddlerName>> type=\\\"match\\\" text=\\\"yes\\\">\\n\\t\\t\\t<$button set=<<stateTiddlerName>> setTo=\\\"no\\\">Close</$button>\\n\\n\\t\\t\\tHere is some information that can be selectively hidden and shown: This tiddler's name is {{!!title}}.\\n\\t</$reveal>\\n\\n\\t<$reveal state=<<stateTiddlerName>> type=\\\"nomatch\\\" text=\\\"yes\\\">\\n\\t\\t\\t<$button set=<<stateTiddlerName>> setTo=\\\"yes\\\">Open</$button>\\n\\t</$reveal>\\n</$let>\\n```\\n \\nIf you go look in `$:/temp` after clicking on each of the buttons, you'll see several unique tiddlers that look like `IsOpen-148223948` or `IsOpen--723342025`, each of which contains a unique value describing whether the expandable section is open.\\n\\n\\n!! Exercises\\n\\n{{Ex:QualifyMultipleCalls||ExerciseTemplate}}\\n{{Ex:ContactRadioButtonQualification||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Requirements for the Sample Wiki\":{\"title\":\"Requirements for the Sample Wiki\",\"created\":\"20200530170905243\",\"description\":\"What do we want the example wiki we're building in this book to be able to do?\",\"modified\":\"20210409021002777\",\"parent\":\"The Shape of TiddlyWiki\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Over the course of this book, we're going to be developing an example wiki. But before we start making anything, it's a good idea to be clear on what we're trying to accomplish. What do we want to be able to do with this example wiki?\\n\\nTo frame what we need to keep track of, let's suppose that we're just starting a new job in a new office -- that's probably the moment in an office worker's life when thorough notes are most obviously critical. (This is not to say there's a point at which you should stop taking notes. In fact, good notes, well-organized and continually updated, get more useful the longer you've been taking them and the more you have of them.)\\n\\nHere's what we want to do with our sample wiki.\\n\\n* Keep a simple ''reckoning of what we do'' on a day-to-day basis. \\n** By the way, if you don't keep a work diary in real life, you should consider starting: you can make it as simple or complex as you want, and the benefits have been well documented around the web.\\n* Keep track of ''people'' we meet, their ''contact information'', their ''managers'', anyone else at the company they're ''related to'', ''what they do'', and what ''projects they're involved in''.\\n** In the real world, you'll probably have an easily-accessed company directory integrated with your communications software that has some of this information in it, and you likely don't want to double up and include the information in TiddlyWiki, or you'll just have to update it manually if it changes in the directory. For purposes of demonstration, we'll pretend your employer is really backwards and doesn't have any kind of directory, but most likely you'll need to track only a subset of this information. (Unless you're a freelancer -- then you likely really will need to track large parts of it manually. Whether you should do this in TiddlyWiki instead of in a contacts app may be a difficult question, and we won't get into that here.)\\n* Gather notes on the ''progress of projects'' we're working on.\\n* Keep any ''information we learn'' about company processes and about domain knowledge related to the job (e.g., regulations, industry standards, terminology, software applications) in a form where we can find and update it later.\\n* ''Take notes at meetings'' and find them later, searching on when the meeting happened, who attended, or what the content was related to.\\n* ''Link easily to other resources'' our team uses, such as tasks in a team task manager or entries in a company wiki or knowledge base.\\n\\nYou might notice one important component of personal organization is missing from this list: task management. Some people like to handle tasks in TiddlyWiki and it's entirely possible to do so if you like, but personally I find managing tasks in TiddlyWiki quite finicky and really good software dedicated to managing a to-do list invaluable, so I stop my wiki notes at the project level.\"},\"Resources\":{\"title\":\"Resources\",\"caption\":\"Resources\",\"created\":\"20200822204446698\",\"description\":\"In which we discuss other places you can learn about TiddlyWiki, talk to others who use TiddlyWiki, and see examples of TiddlyWiki in action.\",\"list\":\"[[Getting Help]] [[On Notes]] [[Public Wikis]]\",\"modified\":\"20210207045845010\",\"parent\":\"Outline\",\"tags\":\"Chapter\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{||ChapterOutlineTemplate}}\"},\"Reviewing the Basics\":{\"title\":\"Reviewing the Basics\",\"created\":\"20200531142251622\",\"description\":\"Some final exercises to help you practice the basics.\",\"modified\":\"20210315154237956\",\"parent\":\"The Shape of TiddlyWiki\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"We've now worked our way through the majority of our initial set of requirements! We've created standard types of tiddlers for each of the things we said we wanted to keep track of, decided what kind of information we wanted to capture for each of them, and created a sample tiddler for each.\\n\\nThere are still some significant holes you're probably looking to fill. For instance, we haven't talked about how to ''find tiddlers that match particular criteria'', or indeed how to find tiddlers at all, and we could do with a clearer ''overview'' of all the notes belonging to a particular project or area. Many of the fields we created on tiddlers are kind of hard to use, and we have to manually add them to every tiddler. And there are a great number of other efficiency improvements and customizations we could benefit from.\\n\\nWe'll tackle these things starting in the next chapter, but first, let's do a few exercises to solidify what we've covered so far.\\n\\n{{Ex:RaffapKnowledgeTiddler||ExerciseTemplate}}\\n{{Ex:RaffapReflection||ExerciseTemplate}}\\n{{Ex:CamelCaseKnowledgeTiddlers||ExerciseTemplate}}\\n{{Ex:JaneDoeFamily||ExerciseTemplate}}\\n{{Ex:ManagerField||ExerciseTemplate}}\"},\"SavingProgress\":{\"title\":\"SavingProgress\",\"created\":\"20210123233814789\",\"modified\":\"20210911214545388\",\"tags\":\"Fragment\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"If you're currently viewing this page on the web, you should download a copy now by clicking the save icon at the end of this paragraph: {{$:/core/ui/Buttons/save-wiki}}\\n\\nYou are free to modify your saved copy for personal use, and to share unmodified copies with others, but not to redistribute modified versions or earn money from redistribution. See the [[copyright notice|Copyright]] for details.\\n\\nSince the point of having your own copy is being able to edit the wiki to save your progress, you'll also need a way to save changes to the file. The most convenient way is to [[load the file up in TiddlyDesktop|Installing TiddlyWiki]], just like the wiki you'll be doing exercises in. Once you've done that, close out of //Grok TiddlyWiki// in your web browser and pick up where you left off in TiddlyDesktop (you can use the //Outline// link in the upper-right to quickly find your spot again). In the future, open the book in TiddlyDesktop rather than on the web.\\n\\nBe sure to save your changes when you close the book for a while; TiddlyDesktop will prompt you to do so when you close the window.\"},\"Searching\":{\"title\":\"Searching\",\"created\":\"20200603023508364\",\"description\":\"TiddlyWiki allows fast and convenient full-text searching, although it doesn't look everywhere.\",\"modified\":\"20210409032047883\",\"parent\":\"Filing and Organizing\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Right now, we only have a handful of tiddlers. Earlier, we saw how to use the ''Recent'' list to find tiddlers that we've touched recently. But what happens when we know what we're looking for, but we have dozens or hundreds or thousands of tiddlers? Scrolling through the list of recently updated tiddlers isn't going to cut it anymore.\\n\\n!! Standard search\\n\\nProbably the most basic way of finding things on a computer is to do a ''full-text search''. Let's try that right now: close out of any tiddlers you have open and find Jane's tiddler. Click in the search box in the upper right and type `Jane`.\\n\\nYou'll see a drop-down separated into //Title matches// and //All matches//. As you can see, matches within the title of a tiddler are prioritized, but we can also see tiddlers where we referred to Jane anywhere in the text field. Click on `JaneDoe`, and the appropriate tiddler opens up.\\n\\nIt's a smart idea to try to include the keywords you're most likely to search for in the titles of your tiddlers. Since the title is so short, you will nearly always have many fewer title matches than body matches, making it easier to spot the one you're looking for.\\n\\nPressing Ctrl+Shift+F will focus the search box. After the search results pop open, you can use the up and down arrow keys to navigate through the results, and Enter to select the one you want to open.\\n\\n\\n!! Advanced search\\n\\nIf you click the magnifying glass icon <<textual-button \\\"advanced-search-button\\\">> to the right of the search box, you'll be taken to [[$:/AdvancedSearch]]. The only tab that will likely make sense to you right now is //Standard//, which does exactly the same thing as the search box in the sidebar. However, once you learn about [[System Tiddlers]], [[Shadow Tiddlers]], and [[Filters]], the respective tabs in this tiddler will be very handy, so keep advanced search in mind as you continue with TiddlyWiki.\\n\\n\\n!! Exercises\\n\\n{{Ex:SearchExploration||ExerciseTemplate}}\\n{{Ex:JohnDoeSearch||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Send Feedback\":{\"title\":\"Send Feedback\",\"created\":\"20210102234130275\",\"modified\":\"20210407151645015\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define getWikifyTarget() {{$(targetTiddler)$||$:/sib/DebugRenderTiddler}}\\n\\n<$set name=targetTiddler value={{{ [{$:/temp/FeedbackCollector}get[target]] }}}>\\n\\n<table class=\\\"ta-feedback\\\">\\n\\t<tr>\\n\\t\\t<th>Tiddler</th>\\n\\t\\t<td>{{{ [{$:/temp/FeedbackCollector}get[target]] }}}<br>//<$text text={{{ [{$:/temp/FeedbackCollector}get[target]get[question]] }}}/>//</td>\\n\\t\\t<td>You are sending feedback on this section or takeaway.</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<th>Email (optional)</th>\\n\\t\\t<td><$edit-text tag=input tiddler={{$:/temp/FeedbackCollector}} field=\\\"email\\\"/></td>\\n\\t\\t<td>If you would like the author to be able to contact you about your feedback.</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<th>Comment</th>\\n\\t\\t<td><$edit-text tag=textarea tiddler={{$:/temp/FeedbackCollector}} field=\\\"comment\\\"/></td>\\n\\t\\t<td>What could be improved?</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<th>Send tiddler</th>\\n\\t\\t<td><$checkbox tiddler={{$:/temp/FeedbackCollector}} field=\\\"debug\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"/></td>\\n\\t\\t<td>To make understanding your feedback easier, we'll send along the contents of this section or takeaway, which will include any edits you've made to it.</td>\\n\\t</tr>\\n</table>\\n\\n<$list filter=\\\"[{$:/temp/FeedbackCollector}get[comment]!is[blank]]\\\" emptyMessage=\\\"//Please enter a comment.//\\\">\\n<$wikify name=debuginfo output=\\\"text\\\" text=<<getWikifyTarget>>>\\n\\t<$button>\\n\\t\\t<$action-sendfeedback\\n\\t\\t\\ttiddler=<<targetTiddler>>\\n\\t\\t\\temail={{{ [{$:/temp/FeedbackCollector}get[email]] }}}\\n\\t\\t\\tcomment={{{ [{$:/temp/FeedbackCollector}get[comment]] }}}\\n\\t\\t\\tdebuginfo=<<debuginfo>> />\\n\\t\\t<$action-setfield $tiddler=\\\"$:/config/sobjornstad/GrokTiddlyWiki/Feedback/UserEmail\\\" $value={{{ [{$:/temp/FeedbackCollector}get[email]] }}}/>\\n\\t\\t<$action-sendmessage $message=\\\"tm-close-tiddler\\\" $param=\\\"Send Feedback\\\"/>\\n\\t\\t<$action-deletetiddler $tiddler={{$:/temp/FeedbackCollector}}/>\\n\\t\\t<$action-deletetiddler $tiddler=\\\"$:/temp/FeedbackCollector\\\"/>\\n\\t\\tSend\\n\\t</$button>\\n</$wikify>\\n</$list>\\n\\n</$set>\\n\\n<style>\\n\\ttable.ta-feedback tr td > textarea, table.ta-feedback tr td > input {\\n\\t\\twidth: 100%;\\n\\t}\\n\\t\\n\\ttable.ta-feedback th, table.ta-feedback tr {\\n\\t\\ttext-align: left;\\n\\t\\tvertical-align: top;\\n\\t}\\n\\t\\n\\ttable.ta-feedback tr td:nth-child(3) {\\n\\t\\twidth: 30%;\\n\\t}\\n\\t\\n\\ttable.ta-feedback tr th {\\n\\t\\twidth: 130px;\\n\\t}\\n\\t\\n\\ttable.ta-feedback {\\n\\t\\twidth: 100%;\\n\\t}\\n</style>\"},\"Shadow Tiddlers\":{\"title\":\"Shadow Tiddlers\",\"created\":\"20200530170355218\",\"description\":\"Shadow tiddlers are tiddlers that are provided by plugins; they can be overridden if you want to customize a plugin.\",\"modified\":\"20210817225909687\",\"parent\":\"Looking Under the Hood\",\"tags\":\"Concept Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"We learned in the previous section that [[plugins|Plugins]] are special tiddlers that bundle together other tiddlers, and that these bundled tiddlers are called ''shadow tiddlers''.\\n\\nShadow tiddlers don't actually exist as tiddlers in your wiki. Instead, they're stored as part of the plugin tiddler. (To see how this works, go to the ''Plugins'' section of the ''More'' sidebar tab, select a plugin, and edit it. You'll see the text of numerous tiddlers embedded as [[JSON markup|Data Tiddlers]] within that single tiddler.) When TiddlyWiki is displaying your wiki, though, it largely pretends that these shadow tiddlers are normal tiddlers -- while it generally hides them from searches and filters, they'll show up in the Explorer tab, and you can open, transclude, and link to them as if they were normal tiddlers.\\n\\nThere's one very important exception, though: if your wiki also has a normal tiddler with the same name as the shadow tiddler, the shadow tiddler is completely ignored in favor of the normal one. The shadow tiddler is then said to be ''overridden''.\\n\\n!! Overriding shadow tiddlers\\n\\nHere's why this is useful: If you have a plugin (including the TiddlyWiki core, which, as we just saw in the [[Plugins]] section, is a plugin), sometimes you might want to make some minor changes to it -- say there's a typo in the user interface, or it prints text in red and that's hard to read on your screen and you would rather see it in orange. Rather than having to get a copy of the plugin's source code and rewrite the whole thing, you can simply ''override the relevant shadow tiddler''.\\n\\nFrom your perspective, to edit a shadow tiddler, you just find the relevant tiddler (usually in the ''Explorer'' view under the ''More'' sidebar tab, or using Advanced Search), then edit it and make your changes. When you do this, you'll get a dialog box informing you that you are about to edit a shadow tiddler. If you agree, behind the scenes, TiddlyWiki copies the shadow tiddler out of the plugin into a real tiddler in your wiki, so that when you save your changes they end up in a normal tiddler.\\n\\nIf you delete an overridden shadow tiddler, TiddlyWiki returns to using the version in the plugin. This is a nice way to start over if you ever mess up or want to restore the default behavior.\\n\\nWhen editing an overridden shadow tiddler, if you click the very rightmost drop-down button on the edit toolbar, there is an option called “differences from shadow (if any)”. If you also have the preview pane open, this will visually show what's been removed (in red) and added (in green) in comparison to the default version of the shadow tiddler stored in the plugin, which can be useful if you have to manually merge changes (see the section below), or if you don't remember anymore what you changed three months ago. Programmers call this view a //diff//.\\n\\n\\n!! The dangers of over-overriding\\n\\nBefore you get too excited about overriding shadow tiddlers, beware: if you override too many, ''it may become very difficult to upgrade your wiki and your plugins''. If a new version of the plugin changes the tiddler you overrode, you won't see those changes, since your overridden shadow tiddler prevents TiddlyWiki from ever looking at the plugin's new version. In this case, you may experience odd behavior, since the newly upgraded plugin relies on a new version of a tiddler that it doesn't have access to, and you'll have to manually pick out the changes and merge together your two versions to fix the problem.\\n\\nDoing this for a handful of targeted shadow tiddlers is no big deal. But if you override large portions of your wiki, you're going to be in for a world of hurt! So it's worth taking a moment before editing a shadow tiddler to be sure there's no other way of making the changes you're looking for (perhaps there's actually a mechanism designed for customizing the thing you're trying to change). People discussing solutions on the TiddlyWiki forums will sometimes say things like, “No shadow tiddlers were harmed in this customization,” meaning nothing had to be overridden.\\n\\nMost configuration settings are also internally handled by overriding shadow tiddlers. There's generally no need to worry about doing this, since the core or plugin author will be aware that it's a configurable setting and won't change anything that would require you to merge your changes.\\n\\n\\n!! Finding shadow tiddlers\\n\\nAll shadow tiddlers are listed in the ''Shadows'' view under the ''More'' sidebar tab, and you can search for shadow tiddlers on the ''Shadows'' tab of Advanced Search.\\n\\nYou can identify shadow tiddlers in the ''Shadows'' view, the ''Explorer'' view, and the shadows tab of Advanced Search because they're shown in a bold font. If you've overridden a shadow tiddler, it will show in a normal font. (//Grok TiddlyWiki// disables this mechanism because it uses shadow tiddlers for much of its content, so look in another wiki if you want to see how this works.)\\n\\nA filter for `[is[shadow]]` will bring up a list of ''only the overridden shadow tiddlers''; this can be useful if you want to see a list of your customizations in a given wiki, or if you upgrade your TiddlyWiki to the latest version, something's not working right, and you need to know what shadows you might need to manually merge.\\n\\nBy default, filters do not match shadow tiddlers that have not been overridden. Up until now, we've been lying and saying that //all// the tiddlers in the wiki get put in the left end of a filter run. Actually, it is only all non-shadow tiddlers: the input of a filter run that doesn't start with an `all[something]` filter step is `all[tiddlers]`, which explicitly excludes shadow tiddlers (unless they have been overridden). If you want to see shadow tiddlers, both overridden and not overridden, start your filter run with `all[shadows]`. We actually witnessed this behavior in the exercise [[Ex:AlphabeticallyLastDescription]], all the way back in [[Common Filter Operators]], but we didn't have the context to explain it at the time.\\n\\nIf you want to really get //all// tiddlers, both shadow and non-shadow, start your filter run with `all[tiddlers+shadows]`. You will frequently see this step at the start of filter runs in live examples in //Grok TiddlyWiki//, since much of the content of the book is packaged as shadow tiddlers in the $:/plugins/sobjornstad/GrokTiddlyWiki plugin.\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Slicing Up Content\":{\"title\":\"Slicing Up Content\",\"created\":\"20210206155516669\",\"description\":\"We slice content up into tiddlers by modeling nouns related to our subject matter.\",\"modified\":\"20220103155658370\",\"parent\":\"Filing and Organizing\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"A large portion of the power of TiddlyWiki lies in its ability to reuse content in different contexts. The best way to create opportunities for reuse is to slice content up into tiddlers appropriately. The value of this kind of slicing will become much more obvious once you learn about [[filters|Filters]] in chapter 3 and [[transclusions|Transclusions]] in chapter 4. However, there is already value even when our only means of reusing content is [[linking to it|Links]], and it's a good idea to start thinking about these issues now regardless, so that you'll be prepared to integrate the ideas you learn in those chapters.\\n\\n\\n!! What makes an appropriately sliced tiddler?\\n\\nMany new users of TiddlyWiki start by creating what experienced users would consider monster tiddlers, containing pages-long bulleted lists, lots of headings and subheadings, and so on. As such, a good rule of thumb, when you're getting started, is to ''create more tiddlers than you think you should''. Another good rule of thumb is that ''a tiddler shouldn't get so large that it doesn't fit on your screen without scrolling'' (exactly how large this means the tiddler is of course depends a great deal on what kind of monitor you're using, but unless you are using a truly tiny monitor at low resolution, it's unlikely to suggest your tiddlers should be too small).\\n\\nHowever, while size does matter, it's not the critical factor in how content should be broken up into tiddlers. After all, if it were, TiddlyWiki could break our content up into lots of tiddlers all by itself, perhaps using one tiddler per paragraph or word, and save us some work. Dividing content into tiddlers really has more to do with conceptual boundaries than physical ones -- that is, the appearance of the text or other content on the screen isn't important, but rather how the objects and ideas described by the content relate to each other.\\n\\nWe will now benefit from a new metaphor for [[tiddlers|Tiddlers]]. Tiddlers serve as ''models of nouns'' -- people, things, ideas. Nouns have various properties or aspects; we represent this by adding fields, like //phone number//, //source//, //author//, //temperature//, and so on, to our tiddlers.\\n\\nSimple nouns may be sufficiently described by several of these fields. More complex ones likely also need some text that we write out to describe them -- but since TiddlyWiki can't understand and reuse the content in the text field as well as it can the content in our other custom fields, it's best to be sure that we can't store the information in a field before writing it in the text field. For instance, we shouldn't create a bulleted list like this in a tiddler describing a person:\\n\\n* ''Phone number:'' (212) 555-1234\\n* ''Email:'' alice@example.com\\n* ''Address'': …\\n\\nThis is all information we could easily place in fields, and then we would be able to refer to it from other tiddlers and in searches in the future.\\n\\nNouns also relate to other nouns. For instance, they might be ''part of another noun'' (tagged with that noun), ''similar to another noun'' (linked to that noun), or any number of other relationships (if the precise type of relationship is important, we can create a field named for that relationship, as we did in [[Contact Tiddlers]] for the contact's manager and family members).\\n\\nTiddlers can serve in several more complicated roles as well. They still model nouns, but those nouns do more than just store information about a thing:\\n\\n* They can ''gather together lists of other nouns'' that meet some criteria; in this way, they act like //sentences//, enumerating and expressing the relationships between other things. Their titles [[can then give the relationship a concise name|Tiddler Titles]]. We'll learn about this role in [[chapter 3|Filtering and Formatting]], specifically when we [[create dynamic lists|Your First Dynamic List]].\\n* They can ''modify the way we see other tiddlers''; in this way, they act like //lenses//. We'll learn about this role in [[chapter 4|Variables, Macros, and Transclusions]], specifically in the section on [[templates|Templates and the Current Tiddler]].\\n* They can ''perform actions'' and modify other nouns; in this way, they act like //machines//. We'll learn about this role in [[chapter 6|Looking Under the Hood]] and [[chapter 7|Tips and Tricks]].\\n\\nTo summarize, the key discipline of slicing up your tiddlers is to consider what noun(s) you're modeling, and ensure that only content related to each noun ends up in its tiddler, creating more tiddlers and relating them together as necessary to express more complex ideas.\\n\\n\\n!! What about slicing up wikis?\\n\\nOften people wonder if they should create one large wiki or lots of smaller wikis. As with most questions in life, the answer is “it depends.”\\n\\nCreating different wikis that have the same //function// is usually an antipattern. For instance, if you're a student, it's better not to create one wiki for your notes on your math class and another for your notes on your history class. It's not just possible but likely that you'll eventually find connections between your classes, and when you can [[link these completely different ideas together|https://zettelkasten.sorenbjornstad.com/#DontPartitionKnowledge]], you begin to understand much more about both disciplines and are far more likely to come up with entirely new ideas.\\n\\nFurther, you gain little benefit from a TiddlyWiki perspective from splitting them up. Presumably the design of your wiki and the plugins you include in it will not differ tremendously based on the subject matter -- the much more important element is that you're taking notes on a class. (Sure, you might need to add a plugin for math notation when you're taking math notes, but it won't get in the way of your history notes. And if you want to be able to limit your searches to a single class, you can place a tag or field on each tiddler to identify the class it goes with.) Meanwhile, if you create multiple wikis, you'll have to go duplicate any awesome new customizations you come up with in all of them, making extra work for yourself.\\n\\nWhen you get to entirely different functions -- for instance, your class notes and a tool for managing your favorite recipes -- separate wikis may make more sense. Still, there is no hard and fast rule.\\n\\n\\n!! In //Grok TiddlyWiki//\\n\\nIn the //Grok TiddlyWiki// wiki, each chapter and section has a tiddler. Sections use the `parent` field to describe which chapter they're a part of (tags would work just as well here, but I wanted to keep the list of tags small and neat in this book). Each takeaway, live example, lie, and exercise has its own tiddler. Answers to exercises have their own tiddler.\\n\\nYou can see that the book is neatly divided into its component parts and concepts by this model. Some of the section tiddlers are a little longer than I would consider ideal, but I felt keeping a one-to-one correspondence between tiddlers and sections of the book was more important than the size of those tiddlers, and if a section got too long, I looked to split up the section.\\n\\nYou might wonder how takeaways, exercises, examples, and lies appear within sections if they are separate tiddlers. This relies on [[transclusion|Transclusions]], which we'll learn about in chapter 4, and in some cases [[filters|Filters]], which we'll learn about in chapter 3.\\n\\n\\n!! In our sample wiki\\n\\nOffice notes are harder to slice up than books because the lines between the nouns involved are fuzzier; there often isn't one obvious place to split up a set of notes. Nevertheless, our tiddler types, which we discussed in [[Structuring Our Wiki]], are different classes of nouns. And as we started talking about [[knowledge tiddlers|Knowledge Tiddlers]], we worked to pull individual ideas into their own tiddlers. Fortunately, if it turns out a tiddler needs to be split up, or several tiddlers need to be combined, doing so is straightforward.\\n\\n\\n!! Exercises\\n\\n{{Ex:SlicingInGtw||ExerciseTemplate}}\\n{{Ex:Slicing||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\\n\"},\"Sn:AlphabeticallyLastFilter\":{\"title\":\"Sn:AlphabeticallyLastFilter\",\"created\":\"20210131164939148\",\"modified\":\"20210131164840963\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{{ [all[shadows]tag[$:/tags/EditorToolbar]get[description]split[{{]split[}}]get[text]!sort[]first[]] }}}\"},\"Sn:AnimalLinkText\":{\"title\":\"Sn:AnimalLinkText\",\"created\":\"20210116210305365\",\"modified\":\"20210327153631877\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define wikipediaLink(articleName, linkText)\\n[[$linkText$|https://en.wikipedia.org/wiki/$articleName$]]\\n\\\\end\\n\\n\\\\define animalLinkText(initialLetter)\\nAn animal which begins with $initialLetter$\\n\\\\end\\n\\n* <$macrocall $name=\\\"wikipediaLink\\\" linkText=<<animalLinkText A>> articleName=\\\"Aardvark\\\" />\\n* <$macrocall $name=\\\"wikipediaLink\\\" linkText=<<animalLinkText B>> articleName=\\\"Bee\\\" />\\n* <$macrocall $name=\\\"wikipediaLink\\\" linkText=<<animalLinkText C>> articleName=\\\"Cow\\\" />\"},\"Sn:AtAtClass\":{\"title\":\"Sn:AtAtClass\",\"created\":\"20210116213810262\",\"modified\":\"20210116213859544\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<style>\\n.my-funny-class {\\n  background-color: blue;\\n  color: yellow;\\n  font-size: 150%;\\n  border: 3px dotted orange;\\n  text-align: right;\\n}\\n</style>\\n\\n@@.my-funny-class\\nHere is some funny-looking text.\\n@@\"},\"Sn:AtAtStyle\":{\"title\":\"Sn:AtAtStyle\",\"created\":\"20210116213756531\",\"modified\":\"20210116213706727\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"@@background-color: red;\\nHere is a red area.\\n@@\"},\"Sn:AttributeParameterSubstitution\":{\"title\":\"Sn:AttributeParameterSubstitution\",\"created\":\"20210502185915679\",\"modified\":\"20210502185939977\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define myText(text) Text: <<__text__>>\\n\\n* ''OK:'' <<myText \\\"test text\\\">>\\n* ''Bad:'' <$text text=<<myText \\\"test text\\\">>>\"},\"Sn:AuthorizationBypass\":{\"title\":\"Sn:AuthorizationBypass\",\"created\":\"20210207222708735\",\"modified\":\"20210207223543160\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define checkAuthorization(password)\\n<$list filter=\\\"[[$password$]match{$:/config/SecretPasswordExample}]\\\">\\n  The user is authorized.\\n</$list>\\n\\\\end\\n\\n<<checkAuthorization \\\"\\\">>\"},\"Sn:AuthorizationUnbypass\":{\"title\":\"Sn:AuthorizationUnbypass\",\"created\":\"20210207224335516\",\"modified\":\"20210207224233617\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define checkAuthorization(password)\\n<$list filter=\\\"[<__password__>match{$:/config/SecretPasswordExample}]\\\">\\n  The user is authorized.\\n</$list>\\n\\\\end\\n\\n<<checkAuthorization \\\"]\\\">>\"},\"Sn:BadImageTransclusions\":{\"title\":\"Sn:BadImageTransclusions\",\"created\":\"20210818031724336\",\"modified\":\"20210818122128913\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<!-- Set the current tiddler to this section, so it doesn't matter what tiddler the example snippet is stored in -->\\n<$tiddler tiddler=\\\"Constant strings cannot be combined with transclusions\\\">\\n\\n1\\n{{<<currentTiddler>>.png}}\\n\\n2\\n[img [<<currentTiddler>>.png]]\\n\\n3\\n[img [{{!!title}}.png]]\\n\\n4\\n<$image source={{!!title}}.png/>\\n\\n5\\n<$image source=\\\"{{!!title}}.png\\\"/>\\n\\n6\\n<$image source={{!!title}}\\\".png\\\"/>\\n\\n7\\n<img src=\\\"{{!!title}}.png\\\">\\n\\n</$tiddler>\"},\"Sn:BlockInlineComparison\":{\"title\":\"Sn:BlockInlineComparison\",\"created\":\"20210116172454679\",\"modified\":\"20210410142121440\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<div style=\\\"background-color: red;\\\">Element 1</div>\\n<div style=\\\"background-color: yellow;\\\">Element 2</div>\\n\\n<hr>\\n\\n<span style=\\\"background-color: red;\\\">Element 1</span>\\n<span style=\\\"background-color: yellow;\\\">Element 2</span>\"},\"Sn:BlockInlineContextLtc\":{\"title\":\"Sn:BlockInlineContextLtc\",\"created\":\"20210116175919244\",\"modified\":\"20210116175910453\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<span>Here's an adjacent span.</span>\\n<span style=\\\"color: orange;\\\">My first line, directly inside the span.\\n<p>Here is a paragraph nested inside of the span.</p>\\nHere is another line directly inside the span.</span>\\n<span>Here's an adjacent span.</span>\"},\"Sn:BoldfaceTemplate\":{\"title\":\"Sn:BoldfaceTemplate\",\"created\":\"20210131144834836\",\"modified\":\"20210131144753826\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<strong><$transclude mode=\\\"block\\\"/></strong>\"},\"Sn:BrokenRevealTable\":{\"title\":\"Sn:BrokenRevealTable\",\"created\":\"20210123193535968\",\"modified\":\"20210418165318247\",\"showtest\":\"no\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$checkbox field=\\\"showtest\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\"> Show an extra column</$checkbox>\\n<table>\\n<tr>\\n\\t<th>Column 1</th>\\n\\t<$reveal state=\\\"!!showtest\\\" type=\\\"match\\\" text=\\\"yes\\\">\\n\\t<th>Extra column</th>\\n\\t</$reveal>\\n\\t<th>Column 2</th>\\n</tr>\\n<tr>\\n\\t<td>Data 1</td>\\n\\t<$reveal state=\\\"!!showtest\\\" type=\\\"match\\\" text=\\\"yes\\\">\\n\\t<td>Magic extra data</td>\\n\\t</$reveal>\\n\\t<td>Data 2</td>\\n</tr>\\n</table>\"},\"Sn:CaptionFieldTemplate\":{\"title\":\"Sn:CaptionFieldTemplate\",\"created\":\"20210314125223866\",\"modified\":\"20210314125233928\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The caption of the current tiddler is “{{!!caption}}”.\"},\"Sn:ChapterFilterTransclusion\":{\"title\":\"Sn:ChapterFilterTransclusion\",\"created\":\"20210116211707689\",\"modified\":\"20210817230244878\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{{ [all[shadows+tiddlers]tag[Section]first[5]] }}}\"},\"Sn:ConceptTabs\":{\"title\":\"Sn:ConceptTabs\",\"created\":\"20210103172939715\",\"modified\":\"20210410185433235\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<<tabs \\\"[all[shadows+tiddlers]tag[Concept]]\\\" \\\"Tiddlers\\\">>\"},\"Sn:CorrectAndIncorrectLists\":{\"title\":\"Sn:CorrectAndIncorrectLists\",\"created\":\"20210116184450150\",\"modified\":\"20210116190643884\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"A correct list:\\n\\n* Item 1\\n* Item 2\\n* Item 3\\n\\nText after the correct list.\\n\\nAn incorrect list:\\n* Item 1\\n* Item 2\\n* Item 3\\nText after the incorrect list.\"},\"Sn:CountWidget\":{\"title\":\"Sn:CountWidget\",\"created\":\"20210206210742073\",\"modified\":\"20210512022735796\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"There are <$text text={{{ [all[tiddlers+shadows]tag[Section]count[]] }}}/> sections in this book.\\n\\nThere are <$count filter=\\\"[all[tiddlers+shadows]tag[Section]]\\\"/> sections in this book.\"},\"Sn:DefaultMacroParameterValues\":{\"title\":\"Sn:DefaultMacroParameterValues\",\"created\":\"20210116205525709\",\"modified\":\"20210409194304260\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define wikipediaLink(articleName, linkText:\\\"Wikipedia Link\\\")\\n[[$linkText$|https://en.wikipedia.org/wiki/$articleName$]]\\n\\\\end\\n\\n<<wikipediaLink Aardvark>>\\n<<wikipediaLink Aardvark \\\"Wikipedia on aardvarks\\\">>\"},\"Sn:DirectAngleBrace\":{\"title\":\"Sn:DirectAngleBrace\",\"created\":\"20210120032534130\",\"modified\":\"20210120032639775\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{{ [[abc]addsuffix[def]] }}}\\n\\n<$set name=\\\"myVariable\\\" value=\\\"abc\\\">\\n\\t{{{ [<myVariable>addsuffix[def]] }}}\\n</$set>\"},\"Sn:DynamicSelectExample\":{\"title\":\"Sn:DynamicSelectExample\",\"created\":\"20210206212711611\",\"modified\":\"20210817225459766\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Section: \\n<$select tiddler=\\\"$:/temp/SectionSelectorExample\\\" default=\\\"\\\">\\n\\t<option value=\\\"\\\">(choose a section)</option>\\n\\t<$list filter=\\\"[all[tiddlers+shadows]tag[Section]]\\\">\\n\\t\\t<option value=<<currentTiddler>>>\\n\\t\\t\\t<<currentTiddler>>\\n\\t\\t</option>\\n\\t</$list>\\n</$select>\\n\\n<$list filter=\\\"[{$:/temp/SectionSelectorExample}!is[blank]]\\\" variable=\\\"selectedTiddler\\\" emptyMessage=\\\"Please choose a section.\\\">\\n\\tThe blurb of the section //<<selectedTiddler>>// is “<$transclude tiddler=<<selectedTiddler>> field=\\\"description\\\"/>”\\n</$list>\\n\"},\"Sn:EditableUserWhoClicked\":{\"title\":\"Sn:EditableUserWhoClicked\",\"created\":\"20210116212617639\",\"modified\":\"20210117010422482\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"userwhoclicked\":\"\",\"text\":\"<$edit-text tiddler=\\\"$:/temp/EditingUserName\\\" tag=\\\"input\\\" default=\\\"\\\"/>\\n<$button set=\\\"!!userwhoclicked\\\" setTo={{$:/temp/EditingUserName}}>Save User Who Clicked</$button>\\n\\nThe `userwhoclicked` field is set to \\\"{{!!userwhoclicked}}\\\".\"},\"Sn:EmployeeInformationSystemDisclaimer\":{\"title\":\"Sn:EmployeeInformationSystemDisclaimer\",\"created\":\"20210116203503331\",\"modified\":\"20210116203413436\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$set name=\\\"disclaimer\\\" value=\\\"(This paragraph does not represent the formal opinion of my company.)\\\">\\n\\nThe Employee Information System at this nice company allows employees to perform tasks such as:\\n\\n* update their names and other personal information (on the front page after signing in)\\n* view pay stubs (\\\"remuneration\\\" tab)\\n* request vacation dates (\\\"time off\\\" tab)\\n<<disclaimer>>\\n\\nYou need to use the Really Annoying Five-Factor Authentication Process to get into the Employee Information System if it is a Tuesday, unless you have also purchased coffee (tea or pastries do not count) in the company cafeteria earlier in the day. <<disclaimer>>\\n\\nJaneDoe taught me about the EIS in our EmployeeProfileSetupMeeting. <<disclaimer>>\\n\\n</$set>\"},\"Sn:EmployeeInformationSystemExample\":{\"title\":\"Sn:EmployeeInformationSystemExample\",\"created\":\"20210116192623958\",\"modified\":\"20210504022048490\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"The Employee Information System at this nice company allows employees to perform tasks such as:\\n\\n* update their names and other personal information (on the front page after signing in)\\n* view pay stubs (“remuneration” tab)\\n* request vacation dates (“time off” tab)\\n\\nYou need to use the Really Annoying Five-Factor Authentication Process to get into the Employee Information System if it is a Tuesday, unless you have also purchased coffee (tea or pastries do not count) in the company cafeteria earlier in the day.\"},\"Sn:GoodImageTransclusionFilter\":{\"title\":\"Sn:GoodImageTransclusionFilter\",\"created\":\"20210818121930067\",\"modified\":\"20210818122035251\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$tiddler tiddler=\\\"Constant strings cannot be combined with transclusions\\\">\\n<$image source={{{ [{!!title}addsuffix[.png]] }}}/>\\n</$tiddler>\"},\"Sn:GoodImageTransclusionMacro\":{\"title\":\"Sn:GoodImageTransclusionMacro\",\"created\":\"20210818123826554\",\"modified\":\"20210818123826647\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define myImageFilename() $(currentTiddler)$.png\\n\\n<$tiddler tiddler=\\\"Constant strings cannot be combined with transclusions\\\">\\n<$image source=<<myImageFilename>>/>\\n</$tiddler>\"},\"Sn:GoodImageTransclusionMacroWikitext\":{\"title\":\"Sn:GoodImageTransclusionMacroWikitext\",\"created\":\"20210818124245831\",\"modified\":\"20210818124336854\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define myImage() [img [$(currentTiddler)$.png]]\\n\\n<$tiddler tiddler=\\\"Constant strings cannot be combined with transclusions\\\">\\n<<myImage>>\\n</$tiddler>\"},\"Sn:HtmlComments\":{\"title\":\"Sn:HtmlComments\",\"created\":\"20210117012121365\",\"modified\":\"20210117012853774\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<!-- This is a comment. -->\\n\\nHere's some ordinary text that appears in the output. On the other hand, the <!-- secret --> word doesn't show up.\\n\\n<!--\\nA comment can go on\\nfor multiple lines\\nif you like.\\n-->\\n\\n<!--\\nHTML and wikitext can be included in comments. It's ''easy as''\\n\\n<ul style=\\\"color: red;\\\">\\n\\t<li>one</li>\\n\\t<li>two</li>\\n\\t<li>three.</li>\\n</ul>\\n-->\\n\\nHere's an uncommented list:\\n\\n<!-- The * creates a wikitext list. -->\\n* four\\n* five\\n* six\"},\"Sn:HtmlCorrectlyNestedList\":{\"title\":\"Sn:HtmlCorrectlyNestedList\",\"created\":\"20210116193606277\",\"modified\":\"20210116193550029\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<ul>\\n  <li>Item 1\\n    <ul>\\n      <li>Subitem 1</li>\\n      <li>Subitem 2</li>\\n    </ul>\\n  </li>\\n</ul>\\n\\nSome later text.\"},\"Sn:HtmlHtmlList\":{\"title\":\"Sn:HtmlHtmlList\",\"created\":\"20210116193403174\",\"modified\":\"20210116193313361\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<ul>\\n  <li>Item 1</li>\\n  <li>Item 2</li>\\n</ul>\"},\"Sn:HtmlIncorrectlyNestedList\":{\"title\":\"Sn:HtmlIncorrectlyNestedList\",\"created\":\"20210116193620018\",\"modified\":\"20210116193557083\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<ul>\\n  <li>Item 1\\n    <ul>\\n      <li>Subitem 1</li>\\n      <li>Subitem 2</li>\\n    </li>\\n  </ul>\\n</ul>\\n\\nSome later text.\"},\"Sn:HtmlNoWhitespace\":{\"title\":\"Sn:HtmlNoWhitespace\",\"created\":\"20210116193722640\",\"modified\":\"20210116193632773\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<ul><li>Item 1<ul><li>Subitem 1</li><li>Subitem 2</li></ul></li></ul>\"},\"Sn:HtmlNonSelfClosing\":{\"title\":\"Sn:HtmlNonSelfClosing\",\"created\":\"20210116193523597\",\"modified\":\"20210116193433781\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<ul>\\n  <li>Item 1</li>\\n  <li></li>\\n</ul>\"},\"Sn:HtmlOrangeList\":{\"title\":\"Sn:HtmlOrangeList\",\"created\":\"20210116193454704\",\"modified\":\"20210116193404923\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<ul style=\\\"color: orange;\\\">\\n\\t<li>Item 1</li>\\n\\t<li>Item 2</li>\\n</ul>\"},\"Sn:HtmlSelfClosing\":{\"title\":\"Sn:HtmlSelfClosing\",\"created\":\"20210116193534717\",\"modified\":\"20210116193444901\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<ul>\\n  <li>Item 1</li>\\n  <li />\\n</ul>\"},\"Sn:HtmlTable\":{\"title\":\"Sn:HtmlTable\",\"created\":\"20210117010700104\",\"modified\":\"20210117010610097\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<table>\\n  <tr>\\n    <th>Header 1</th>\\n    <th>Header 2</th>\\n  </tr>\\n  <tr>\\n    <td>Cell 1</td>\\n    <td>Cell 2</td>\\n  </tr>\\n</table>\"},\"Sn:HtmlWackoWhitespace\":{\"title\":\"Sn:HtmlWackoWhitespace\",\"created\":\"20210116193744495\",\"modified\":\"20210116194420173\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\t<ul      >\\n\\n<li>Item 1<ul >\\n<li >Subitem     1</li>\\n\\n\\n\\t<li>\\n\\t\\t\\tSubitem 2</li></ul>\\n\\t\\t\\t</li>\\n\\n</ul>\"},\"Sn:HtmlWikitextList\":{\"title\":\"Sn:HtmlWikitextList\",\"created\":\"20210116193355900\",\"modified\":\"20210116193306134\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"* Item 1\\n* Item 2\"},\"Sn:ImageTransclusionName\":{\"title\":\"Sn:ImageTransclusionName\",\"created\":\"20210818121339333\",\"modified\":\"20210818122148124\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$tiddler tiddler=\\\"Constant strings cannot be combined with transclusions\\\">\\n\\nThe image should be called \\\"{{!!title}}.png\\\".\\n\\n</$tiddler>\"},\"Sn:IncludeMe\":{\"title\":\"Sn:IncludeMe\",\"caption\":\"Include me please!\",\"created\":\"20210131144740960\",\"modified\":\"20210131144657032\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Here is some text to be transcluded.\"},\"Sn:InitialAardvarkWikipediaLink\":{\"title\":\"Sn:InitialAardvarkWikipediaLink\",\"created\":\"20210116203723828\",\"modified\":\"20210117010022389\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define wikipediaLink(articleName)\\nhttps://en.wikipedia.org/wiki/$articleName$\\n\\\\end\\n\\n<<wikipediaLink Aardvark>>\"},\"Sn:JaneDoeJournalStart\":{\"title\":\"Sn:JaneDoeJournalStart\",\"created\":\"20210116192522661\",\"modified\":\"20210123173018341\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"!! Journal\\n\\nJaneDoe welcomed me to the company and helped me set up my computer and employee profile.\"},\"Sn:JournalStartingText\":{\"title\":\"Sn:JournalStartingText\",\"created\":\"20210116011333187\",\"modified\":\"20210124182922088\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"!! Goals for the day\\n\\n* Goal 1\\n* Goal 2\\n* Goal 3\\n\\n!! Scheduled events\\n\\n!! Journal\"},\"Sn:LetPreviousVariableReferencing\":{\"title\":\"Sn:LetPreviousVariableReferencing\",\"created\":\"20220103165749710\",\"modified\":\"20220103165840926\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$let var1=\\\"one\\\" var2=<<var1>>>\\n\\tvar2: <<var2>>\\n</$let>\"},\"Sn:LinkToGoogle\":{\"title\":\"Sn:LinkToGoogle\",\"created\":\"20210116234144219\",\"modified\":\"20210116234350895\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"* https://www.google.com\\n* [[Google|https://www.google.com]]\"},\"Sn:MacroCallTransclusion\":{\"title\":\"Sn:MacroCallTransclusion\",\"created\":\"20210818205917912\",\"modified\":\"20210818210256048\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define partial-name(suffix) Tiddler $suffix$\\n\\n{{{ [<partial-name \\\"Forty-Two\\\">] }}}\"},\"Sn:MacroFunctionCallBad\":{\"title\":\"Sn:MacroFunctionCallBad\",\"created\":\"20210818001607196\",\"description\":\"Macros are not functions\",\"modified\":\"20210818003451927\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define test-macro() {{{ [<currentTiddler>get[description]] }}}\\n\\nThe value of the `description` field of the current tiddler is \\\"<<test-macro>>\\\".\\n\\n<$transclude tiddler=<<test-macro>> field=\\\"description\\\"/>\"},\"Sn:MacroFunctionCallDirect\":{\"title\":\"Sn:MacroFunctionCallDirect\",\"created\":\"20210818004551463\",\"description\":\"Macros are not functions\",\"modified\":\"20210818004617229\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$transclude tiddler={{{ [<currentTiddler>get[description]] }}} field=\\\"description\\\"/>\"},\"Sn:MacroFunctionCallOk\":{\"title\":\"Sn:MacroFunctionCallOk\",\"created\":\"20210818001558804\",\"modified\":\"20210818004020939\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define test-macro() Macros are not functions\\n\\nThe value of the `test-macro` variable is \\\"<<test-macro>>.\\\"\\n\\n<$transclude tiddler=<<test-macro>> field=\\\"description\\\"/>\"},\"Sn:MacroFunctionCallWikify\":{\"title\":\"Sn:MacroFunctionCallWikify\",\"created\":\"20210818004304404\",\"description\":\"Macros are not functions\",\"modified\":\"20210818004627750\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define test-macro() {{{ [<currentTiddler>get[description]] }}}\\n\\nThe value of the `description` field of the current tiddler is \\\"<<test-macro>>\\\".\\n\\n<$wikify name=\\\"myResult\\\" text=<<test-macro>>>\\n<$transclude tiddler=<<myResult>> field=\\\"description\\\"/>\\n</$wikify>\"},\"Sn:MacroInTemplate\":{\"title\":\"Sn:MacroInTemplate\",\"created\":\"20210130005341010\",\"modified\":\"20210130005243333\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$set name=myvar1 value=\\\"xyz\\\">\\n<$set name=myvar2 value={{!!field}}>\\n\\t{{||MyTemplate}}\\n\\t<<myMacro>>\\n</$set>\\n</$set>\"},\"Sn:MacroParameterNames\":{\"title\":\"Sn:MacroParameterNames\",\"created\":\"20210116205418754\",\"modified\":\"20210116205328896\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define wikipediaLink(articleName, linkText)\\n[[$linkText$|https://en.wikipedia.org/wiki/$articleName$]]\\n\\\\end\\n\\n<<wikipediaLink linkText:\\\"Wikipedia on Aardvarks\\\" articleName:Aardvark>>\"},\"Sn:MacroVariableTextSubstitution\":{\"title\":\"Sn:MacroVariableTextSubstitution\",\"created\":\"20210314124816942\",\"modified\":\"20210314125559561\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define wikipediaLink() https://en.wikipedia.org/wiki/$(articleName)$\\n\\n<$set name=\\\"articleName\\\" value=\\\"TiddlyWiki\\\">\\n  <<wikipediaLink>>\\n</$set>\"},\"Sn:MagicDateSnippet\":{\"title\":\"Sn:MagicDateSnippet\",\"created\":\"20210207001005874\",\"modified\":\"20210409024812722\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$view field=\\\"at\\\" format=\\\"date\\\" template=\\\"DD MMM YYYY hh12:0mm:0ss pm\\\"/>\"},\"Sn:MarksTheSpot\":{\"title\":\"Sn:MarksTheSpot\",\"created\":\"20210101173550409\",\"modified\":\"20210101173506420\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define findX()\\nThe current value of X is \\\"<<X>>\\\".\\n\\\\end\\n\\n<$set name=X value=\\\"marks the spot\\\">\\n\\t<<findX>>\\n</$set>\"},\"Sn:MeetingParticipants\":{\"title\":\"Sn:MeetingParticipants\",\"created\":\"20201231200157939\",\"modified\":\"20201231200114825\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"| !Time|20200531013141000|\\n| !Participants|JaneDoe|\"},\"Sn:MetadataDateUpdated\":{\"title\":\"Sn:MetadataDateUpdated\",\"created\":\"20210207001648789\",\"modified\":\"20210207001547418\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$view tiddler=\\\"Metadata\\\" field=\\\"modified\\\" format=\\\"date\\\" template=\\\"DDD, MMM DDth, YYYY\\\"/>\"},\"Sn:MultipleParameterMacro\":{\"title\":\"Sn:MultipleParameterMacro\",\"created\":\"20210116204256895\",\"modified\":\"20210116204603819\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define wikipediaLink(articleName, linkText)\\n[[$linkText$|https://en.wikipedia.org/wiki/$articleName$]]\\n\\\\end\\n\\n<<wikipediaLink Aardvark \\\"Wikipedia on Aardvarks\\\">>\"},\"Sn:NestedComments\":{\"title\":\"Sn:NestedComments\",\"created\":\"20210117012202295\",\"modified\":\"20210117012305859\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<!-- start of first comment\\n\\n<!-- an attempt at creating a comment within the comment -->\\n\\nbut the comment ends after the comment within the comment\\n-->\"},\"Sn:NewTiddlerActionWidget\":{\"title\":\"Sn:NewTiddlerActionWidget\",\"created\":\"20210116213436453\",\"modified\":\"20210130145355721\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define newTiddlerActionWidget()\\n<$action-sendmessage\\n\\t$message=\\\"tm-new-tiddler\\\"\\n\\ttitle=\\\"My New Tiddler\\\"\\n\\ttags=\\\"[[My First Tag]] [[My Second Tag]]\\\" />\\n\\\\end\\n\\n<$button actions=<<newTiddlerActionWidget>>>New Tiddler</$button>\"},\"Sn:NewTiddlerActionWidgetText\":{\"title\":\"Sn:NewTiddlerActionWidgetText\",\"created\":\"20210116213457832\",\"modified\":\"20210116213407934\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$button>\\n  <$action-sendmessage\\n    $message=\\\"tm-new-tiddler\\\"\\n    title=\\\"My New Tiddler\\\"\\n    tags=\\\"[[My First Tag]] [[My Second Tag]]\\\" />\\n  New Tiddler\\n</$button>\"},\"Sn:NowTimestamp\":{\"title\":\"Sn:NowTimestamp\",\"created\":\"20210207002251317\",\"modified\":\"20210207002158486\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define now-timestamp() <<now [UTC]YYYY0MM0DD0hh0mm0ssXXX>>\\n\\n<<now-timestamp>>\"},\"Sn:NumDaysBack\":{\"title\":\"Sn:NumDaysBack\",\"created\":\"20210123192157236\",\"modified\":\"20210123200211178\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$set name=numDays value=\\\"-500\\\">\\n<$list filter=\\\"[days<numDays>]\\\" emptyMessage=\\\"Nope.\\\">\\n\\tYep.\\n</$list>\\n</$set>\"},\"Sn:ParameterlessMacro\":{\"title\":\"Sn:ParameterlessMacro\",\"created\":\"20210116204238244\",\"modified\":\"20210116204148381\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define disclaimer()\\n(This paragraph does not represent the formal opinion of my company.)\\n\\\\end\\n\\nYou need to use the Really Annoying Five-Factor Authentication Process to get into the Employee Information System if it is a Tuesday, unless you have also purchased coffee (tea or pastries do not count) in the company cafeteria earlier in the day. <<disclaimer>>\"},\"Sn:QuoteWithinQuotesMacro\":{\"title\":\"Sn:QuoteWithinQuotesMacro\",\"created\":\"20210116204322898\",\"modified\":\"20210116204619105\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define wikipediaLink(articleName, linkText)\\n[[$linkText$|https://en.wikipedia.org/wiki/$articleName$]]\\n\\\\end\\n\\n<<wikipediaLink Aardvark \\\"What is an \\\"aardvark\\\"?\\\">>\"},\"Sn:QuotedMacroExpansion\":{\"title\":\"Sn:QuotedMacroExpansion\",\"created\":\"20210116210438040\",\"modified\":\"20210327155555215\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define wikipediaLink(articleName, linkText)\\n[[$linkText$|https://en.wikipedia.org/wiki/$articleName$]]\\n\\\\end\\n\\n<$macrocall $name=\\\"wikipediaLink\\\" linkText=\\\"<<linktext>>\\\" articleName=\\\"Aardvark\\\" />\"},\"Sn:RadioExample\":{\"title\":\"Sn:RadioExample\",\"created\":\"20210206211525320\",\"modified\":\"20210817225402878\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"What do you want to look at?\\n\\n<$radio tiddler=\\\"$:/temp/RadioExample\\\" value=\\\"Exercise\\\">&nbsp;Exercises</$radio>&ensp;\\n<$radio tiddler=\\\"$:/temp/RadioExample\\\" value=\\\"Section\\\">&nbsp;Sections</$radio>&ensp;\\n<$radio tiddler=\\\"$:/temp/RadioExample\\\" value=\\\"Takeaway\\\">&nbsp;Takeaways</$radio>\\n\\n<<list-links \\\"[all[tiddlers+shadows]tag{$:/temp/RadioExample}first[5]]\\\">>\"},\"Sn:RevealWidgetTest\":{\"title\":\"Sn:RevealWidgetTest\",\"created\":\"20210123192959878\",\"modified\":\"20210123200233191\",\"showtest\":\"no\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$checkbox field=\\\"showtest\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\"> Show the text</$checkbox>\\n\\n<$reveal state=\\\"!!showtest\\\" type=\\\"match\\\" text=\\\"yes\\\">\\n\\tHere is the text!\\n</$reveal>\"},\"Sn:RubberDucking\":{\"title\":\"Sn:RubberDucking\",\"created\":\"20210121000555417\",\"modified\":\"20210606031219939\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$list filter=\\\"[all[tiddlers+shadows]tag[Section]field;parent[Filtering and Formatting]sort[]get[description]\\\">\\n  <<currentTiddler>><br>\\n</$list>\"},\"Sn:RubberDuckingCorrected\":{\"title\":\"Sn:RubberDuckingCorrected\",\"created\":\"20210121000836750\",\"modified\":\"20210606031228949\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$list filter=\\\"[all[tiddlers+shadows]tag[Section]field:parent[Filtering and Formatting]get[description]sort[]]\\\">\\n  <<currentTiddler>><br>\\n</$list>\"},\"Sn:SelectExample\":{\"title\":\"Sn:SelectExample\",\"created\":\"20210206212257711\",\"modified\":\"20210817225115804\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"What do you want to look at?\\n\\n<$select tiddler=\\\"$:/temp/SelectExample\\\" default=\\\"\\\">\\n\\t<option value=\\\"\\\">(choose an option)</option>\\n\\t<option value=\\\"Exercise\\\">Exercises</option>\\n\\t<option value=\\\"Section\\\">Sections</option>\\n\\t<option value=\\\"Takeaway\\\">Takeaways</option>\\n</$select>\\n\\n<<list-links \\\"[all[tiddlers+shadows]tag{$:/temp/SelectExample}first[5]]\\\">>\"},\"Sn:SetDisclaimer\":{\"title\":\"Sn:SetDisclaimer\",\"created\":\"20210116203350735\",\"modified\":\"20210116203320466\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$set name=\\\"disclaimer\\\" value=\\\"(This paragraph does not represent the formal opinion of my company.)\\\">\\n\\t…insert the text of your tiddler here\\n</$set>\\n\"},\"Sn:SetVsLet\":{\"title\":\"Sn:SetVsLet\",\"created\":\"20210206210503975\",\"modified\":\"20220103165651799\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$set name=\\\"var1\\\" value=\\\"one\\\">\\n<$set name=\\\"var2\\\" value=\\\"two\\\">\\n\\t<<var1>> <<var2>>\\n</$set>\\n</$set>\\n\\n<$let var1=\\\"one\\\" var2=\\\"two\\\">\\n\\t<<var1>> <<var2>>\\n</$let>\"},\"Sn:SetYourName\":{\"title\":\"Sn:SetYourName\",\"created\":\"20210123194135490\",\"modified\":\"20210123194041349\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Your name: <$edit-text tiddler=\\\"$:/temp/ExampleNameField\\\" tag=\\\"input\\\" default=\\\"\\\" />\\n\\n<$set name=\\\"username\\\" filter=\\\"[[$:/temp/ExampleNameField]get[text]]\\\" value={{$:/temp/ExampleNameField}} emptyValue=\\\"Nobody\\\">\\n\\tHi <<username>>!\\n</$set>\"},\"Sn:SimpleMacrocallWidget\":{\"title\":\"Sn:SimpleMacrocallWidget\",\"created\":\"20210116205906718\",\"modified\":\"20210327153554284\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define wikipediaLink(articleName, linkText)\\n[[$linkText$|https://en.wikipedia.org/wiki/$articleName$]]\\n\\\\end\\n\\n<$macrocall $name=\\\"wikipediaLink\\\" linkText=\\\"Wikipedia on Aardvarks\\\" articleName=Aardvark />\"},\"Sn:SingleLineMacro\":{\"title\":\"Sn:SingleLineMacro\",\"created\":\"20210116205742608\",\"modified\":\"20210116205652782\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define disclaimer() (This paragraph does not represent the formal opinion of my company.)\\n\\n<<disclaimer>>\"},\"Sn:StringConcatenationWithFilters\":{\"title\":\"Sn:StringConcatenationWithFilters\",\"created\":\"20210818122739980\",\"modified\":\"20210818123224153\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$set name=\\\"person\\\" value=\\\"Soren Bjornstad\\\">\\n<$set name=\\\"role\\\" value=\\\"author of Grok TiddlyWiki\\\">\\n\\n<$text text={{{ [<role>addsuffix[, ]addsuffix<person>addsuffix[.]addprefix[This example is approved by the ]] }}}/>\\n\\n</$set>\\n</$set>\"},\"Sn:TestVar12\":{\"title\":\"Sn:TestVar12\",\"created\":\"20210101165835117\",\"modified\":\"20210101165751139\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$set name=\\\"testVar1\\\" value=\\\"XYZ\\\">\\n<$set name=\\\"testVar2\\\" value=\\\"<<testVar1>>\\\">\\n  <<testVar2>>\\n</$set>\\n</$set>\"},\"Sn:TestVar122\":{\"title\":\"Sn:TestVar122\",\"created\":\"20210101165917055\",\"modified\":\"20210101170330926\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$set name=\\\"testVar1\\\" value=\\\"XYZ\\\">\\n<$set name=\\\"testVar2\\\" value=\\\"<<testVar1>>\\\">\\n  <$text text=<<testVar2>>/>\\n</$set>\\n</$set>\"},\"Sn:TextBeforeMacro\":{\"title\":\"Sn:TextBeforeMacro\",\"created\":\"20210116203958811\",\"modified\":\"20210124043431219\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Text before a macro\\n\\n\\\\define wikipediaLink(articleName)\\n[[Wikipedia: $articleName$|https://en.wikipedia.org/wiki/$articleName$]]\\n\\\\end\"},\"Sn:TicketLinkMacro\":{\"title\":\"Sn:TicketLinkMacro\",\"created\":\"20210116210221048\",\"modified\":\"20210116210131168\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define ticketLink(ticketId)\\n[[Ticket #$ticketId$|https://tix.example.com/ticket/$ticketId$]]\\n\\\\end\\n\\n<<ticketLink 245188>>\"},\"Sn:TiddlerWidget\":{\"title\":\"Sn:TiddlerWidget\",\"created\":\"20210206211117892\",\"modified\":\"20210206211016565\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$set name=\\\"currentTiddler\\\" value=\\\"New Current Tiddler\\\">\\n\\t<<currentTiddler>>\\n</$set>\\n\\n<$tiddler tiddler=\\\"New Current Tiddler\\\">\\n\\t<<currentTiddler>>\\n</$tiddler>\"},\"Sn:TranscludeFallback\":{\"title\":\"Sn:TranscludeFallback\",\"created\":\"20210123194558334\",\"modified\":\"20210123194504092\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$transclude field=\\\"nonexistentfield\\\">\\n  The nonexistent field does not exist.\\n</$transclude>\"},\"Sn:TranscludeWidget\":{\"title\":\"Sn:TranscludeWidget\",\"created\":\"20210123194341409\",\"description\":\"This is a nice wikitext snippet.\",\"modified\":\"20210206220012176\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$transclude tiddler=<<currentTiddler>> field=\\\"description\\\"/>\\n\\n-----\\n\\n<$transclude field=\\\"description\\\"/>\\n\\n-----\\n\\n{{!!description}}\"},\"Sn:TranscludedMacrocallWidget\":{\"title\":\"Sn:TranscludedMacrocallWidget\",\"created\":\"20210116210007489\",\"modified\":\"20210327153738242\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define wikipediaLink(articleName, linkText)\\n[[$linkText$|https://en.wikipedia.org/wiki/$articleName$]]\\n\\\\end\\n\\n<$set name=\\\"linktext\\\" value=\\\"An animal\\\">\\n\\n* <$macrocall $name=\\\"wikipediaLink\\\" linkText=<<linktext>> articleName=\\\"Aardvark\\\" />\\n* <$macrocall $name=\\\"wikipediaLink\\\" linkText=<<linktext>> articleName=\\\"Bee\\\" />\\n* <$macrocall $name=\\\"wikipediaLink\\\" linkText=<<linktext>> articleName=\\\"Cow\\\" />\\n\\t\\n</$set>\"},\"Sn:TripleDoublesMacro\":{\"title\":\"Sn:TripleDoublesMacro\",\"created\":\"20210116204445198\",\"modified\":\"20210116204614173\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define wikipediaLink(articleName, linkText)\\n[[$linkText$|https://en.wikipedia.org/wiki/$articleName$]]\\n\\\\end\\n\\n<<wikipediaLink Aardvark \\\"\\\"\\\"What is an \\\"aardvark\\\"?\\\"\\\"\\\">>\"},\"Sn:TweakingYourSettings\":{\"title\":\"Sn:TweakingYourSettings\",\"created\":\"20210116004917205\",\"modified\":\"20210116005922831\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"You can click each of these links to see that they go to the same place:\\n\\n* [[Tweaking Your Settings]]\\n* A page on [[tweaking settings|Tweaking Your Settings]]\"},\"Sn:UnclosedItalics\":{\"title\":\"Sn:UnclosedItalics\",\"created\":\"20210116173835903\",\"modified\":\"20210116173746153\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Here is my //first paragraph.\\n\\nHere is my second paragraph.\"},\"Sn:UserWhoClicked\":{\"title\":\"Sn:UserWhoClicked\",\"created\":\"20210116212538921\",\"modified\":\"20210117010338851\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$button set=\\\"!!userwhoclicked\\\" setTo=\\\"Soren\\\">\\n  Big Red Button\\n</$button>\\n\\nUser who clicked: \\\"{{!!userwhoclicked}}\\\"\"},\"Sn:ViewFallback\":{\"title\":\"Sn:ViewFallback\",\"adate\":\"\",\"created\":\"20210123195102822\",\"modified\":\"20210123200150412\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$button set=\\\"!!adate\\\" setTo={{!!created}}>Show Created Date</$button>\\n<$button set=\\\"!!adate\\\" setTo=\\\"\\\">Hide Created Date</$button>\\n\\n<$view field=\\\"adate\\\" format=\\\"date\\\" template=\\\"This tiddler was created on MMM DD, YYYY.\\\">\\n\\tThe date is not currently set.\\n</$view>\"},\"Sn:WidgetLink\":{\"title\":\"Sn:WidgetLink\",\"created\":\"20210116201351228\",\"modified\":\"20210116201329418\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$link to=\\\"Filters\\\">a link to the Filters section</$link>\"},\"Sn:WikifyConcatenation\":{\"title\":\"Sn:WikifyConcatenation\",\"created\":\"20210818124739448\",\"modified\":\"20210818124809470\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$tiddler tiddler=\\\"Constant strings cannot be combined with transclusions\\\">\\n  <$wikify name=\\\"myImageName\\\" text=\\\"{{!!title}}.png\\\">\\n    <$image source=<<myImageName>>/>\\n  </$wikify>\\n</$tiddler>\"},\"Sn:WikitextBoldItalicBad\":{\"title\":\"Sn:WikitextBoldItalicBad\",\"created\":\"20210131045640394\",\"modified\":\"20210131045709108\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Here's how to do //''bold italics''// correctly.\\n\\nHere's the wrong way: //''bold italic//''.\\n\\nOops, now the rest of the tiddler is messed up!\"},\"Sn:WikitextBulletedList\":{\"title\":\"Sn:WikitextBulletedList\",\"created\":\"20210131050047576\",\"modified\":\"20210131045949776\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"* first item\\n* second item\\n** subitems use\\n** a second star\\n*** you\\n**** can\\n***** go\\n****** as deep as you like\\n* third item\"},\"Sn:WikitextCodeBlock\":{\"title\":\"Sn:WikitextCodeBlock\",\"created\":\"20210131143343463\",\"modified\":\"20210214171831138\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Let's say hello to the world in Python, without syntax highlighting:\\n\\n```\\nprint(\\\"Hello world!\\\")\\n```\\n\\nLet's add syntax highlighting by specifying a language (Highlight plugin must be installed):\\n\\n```python\\nprint(\\\"Hello world!\\\")\\n```\\n\\nHow about in JavaScript?\\n\\n```javascript\\nconsole.log(\\\"Hello world!\\\")\\n```\"},\"Sn:WikitextCombinedList\":{\"title\":\"Sn:WikitextCombinedList\",\"created\":\"20210131050132703\",\"modified\":\"20210207184510698\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"# Collect the following items:\\n#* cell phone\\n#* wallet\\n#* keys\\n#* notebook and pen\\n# Leave your house, locking the door behind you.\"},\"Sn:WikitextCurrentTransclusionTemplate\":{\"title\":\"Sn:WikitextCurrentTransclusionTemplate\",\"caption\":\"Transclude the [[current tiddler|Templates and the Current Tiddler]] through a template\",\"created\":\"20210314125101154\",\"modified\":\"20210314125222415\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{||Sn:CaptionFieldTemplate}}\"},\"Sn:WikitextDefinitionList\":{\"title\":\"Sn:WikitextDefinitionList\",\"created\":\"20210131152735293\",\"modified\":\"20210131152650260\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"; First term\\n: Here we would define the first term. The definition might be quite long, like this one, which we are making much longer than necessary to demonstrate a point, and if it is it will wrap onto the next line, maintaining its indentation.\\n\\n; Second term\\n: Second definition.\"},\"Sn:WikitextExtForce\":{\"title\":\"Sn:WikitextExtForce\",\"created\":\"20210131141859994\",\"modified\":\"20210131143303668\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"attachments/my_image.png\\n\\nThat didn't work. How about [[attachments/my_image.png]]?\\n\\nNope! Here's the right way: [ext[attachments/my_image.png]]\"},\"Sn:WikitextHeadings\":{\"title\":\"Sn:WikitextHeadings\",\"created\":\"20210131045414136\",\"modified\":\"20210131045316298\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"! Heading 1\\n!! Heading 2\\n!!! Heading 3\\n!!!! Heading 4\\n!!!!! Heading 5\\n!!!!!! Heading 6\"},\"Sn:WikitextHeadingsRolledIn\":{\"title\":\"Sn:WikitextHeadingsRolledIn\",\"created\":\"20210131045435619\",\"modified\":\"20210131045337785\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Here's an example of what not to do:\\n!! Heading 2\"},\"Sn:WikitextHorizontalRule\":{\"title\":\"Sn:WikitextHorizontalRule\",\"created\":\"20210131151946604\",\"modified\":\"20210131151848284\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Text before the line\\n\\n----------\\n\\nText after the line\"},\"Sn:WikitextHtmlInList\":{\"title\":\"Sn:WikitextHtmlInList\",\"created\":\"20210131050147881\",\"modified\":\"20210131050050051\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"* First item\\n* Second item <div>\\n\\n\\t<p>Here's a second paragraph.</p>\\n\\t<p>Here's a third paragraph.</p>\\n\\t\\n</div>\\n* Third item\"},\"Sn:WikitextImageImgify\":{\"title\":\"Sn:WikitextImageImgify\",\"created\":\"20210131153332007\",\"modified\":\"20210131153447948\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"[img height=50 [anki-config-screenshot.png]]\"},\"Sn:WikitextImageTransclusion\":{\"title\":\"Sn:WikitextImageTransclusion\",\"created\":\"20210131153251089\",\"modified\":\"20210131153152744\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{anki-config-screenshot.png}}\"},\"Sn:WikitextInlineTextFormatting\":{\"title\":\"Sn:WikitextInlineTextFormatting\",\"created\":\"20210131045751508\",\"modified\":\"20210131140928496\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Here is some //italic text//.\\n\\nHere is some ''bold text''.\\n\\nHere is some `monospaced text`. `In here, further //TiddlyWiki markup// is ''ignored''.`\\n\\nHere is a ^^superscript^^ section.\\n\\nHere is a ,,subscript,, section.\\n\\nHere is a ~~struck-through~~ section.\\n\\nHere is an __underlined__ section.\\n\\nHere is some //''bold italic text''//.\\n\\nHere is some ''//__~~^^bold italic underlined superscripted struck-through^^~~__//'' text.\"},\"Sn:WikitextLink\":{\"title\":\"Sn:WikitextLink\",\"created\":\"20210116201345211\",\"modified\":\"20210116201339582\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"[[a link to the Filters section|Filters]]\"},\"Sn:WikitextLinksExample\":{\"title\":\"Sn:WikitextLinksExample\",\"created\":\"20210131141526918\",\"modified\":\"20210131150316213\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"You can read about links in the [[Links]] section.\\n\\nYou can [[read about links|Links]] if you want to learn more about them.\\n\\nIf you have questions that are not related to TiddlyWiki, let me point you to [[Google|https://google.com]], [[DuckDuckGo|https://duckduckgo.com]], or [[Wikipedia|https://en.wikipedia.org]]. (Or, if you prefer a language other than English, try visiting https://wikipedia.org and selecting a language.)\"},\"Sn:WikitextNumberedList\":{\"title\":\"Sn:WikitextNumberedList\",\"created\":\"20210131050100657\",\"modified\":\"20210207184440145\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"# one\\n# two\\n# three\\n## three and a half\\n## three and three-quarters\"},\"Sn:WikitextPoetryMarkup\":{\"title\":\"Sn:WikitextPoetryMarkup\",\"created\":\"20210131152021052\",\"modified\":\"20210131155728546\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<<<\\n\\\"\\\"\\\"\\nTo keep your text in perfect lines,\\n&emsp; Just turn to triple quotes.\\nFor this fine feature, all great minds\\n&emsp; Give TiddlyWiki votes.\\n\\\"\\\"\\\"\\n<<< ---Soren (not that I'm proud of this stanza)\"},\"Sn:WikitextQuotes\":{\"title\":\"Sn:WikitextQuotes\",\"created\":\"20210131142943468\",\"modified\":\"20210131143308457\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"> This is a quote.\\n>> This is a quote within the quote.\\n> But I don't like what was said in the quote within the quote…\\n\\nThe quote ends when we start a new line that doesn't begin with `>`.\\n\\n<<<\\nThis is a quote. The quote\\n\\nwill continue until we close it.\\n\\n> It's also possible to nest quotes by using the line form within the block form.\\n\\n<<< ---You can put a citation here if you like.\\n\\nThe quote ends after the closing `<<<`.\\n\"},\"Sn:WikitextStyles\":{\"title\":\"Sn:WikitextStyles\",\"created\":\"20210131154145461\",\"modified\":\"20210202190728899\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"@@color:red;\\nHere is some red text.\\n@@\\n\\n<style>\\n.my-blue-bold-class {\\n\\tfont-weight: bold;\\n\\tcolor: blue;\\n}\\n</style>\\n\\n@@.my-blue-bold-class\\nHere is some blue, bold text.\\n@@\"},\"Sn:WikitextTable\":{\"title\":\"Sn:WikitextTable\",\"created\":\"20210117010727707\",\"modified\":\"20210117010637701\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"|!Header 1|!Header 2|\\n|Cell 1|Cell 2|\"},\"Sn:WikitextTableAlignment\":{\"title\":\"Sn:WikitextTableAlignment\",\"created\":\"20210131144220852\",\"modified\":\"20210131144250305\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"|!Number| !A|!B|!C |\\n| 1|A1|B1|C1|\\n| 2 |A2|B2|C2|\\n|3 |A3|B3|C3|\"},\"Sn:WikitextTableReference\":{\"title\":\"Sn:WikitextTableReference\",\"created\":\"20210131144255671\",\"modified\":\"20210131144206831\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"|!Number|!A|!B|!C|\\n|1|A1|B1|C1|\\n|2|A2|B2|C2|\\n|3|A3|B3|C3|\"},\"Sn:WikitextTransclusionBasic\":{\"title\":\"Sn:WikitextTransclusionBasic\",\"created\":\"20210131145534681\",\"modified\":\"20210131150117161\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{Sn:IncludeMe}}\\n{{Sn:IncludeMe!!text}}\"},\"Sn:WikitextTransclusionData\":{\"title\":\"Sn:WikitextTransclusionData\",\"created\":\"20210131145622967\",\"modified\":\"20210131150218103\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"//Grok TiddlyWiki// version {{Metadata##version}}\"},\"Sn:WikitextTransclusionField\":{\"title\":\"Sn:WikitextTransclusionField\",\"created\":\"20210131145607043\",\"modified\":\"20210131145508786\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{Sn:IncludeMe!!caption}}\"},\"Sn:WikitextTransclusionFilter\":{\"title\":\"Sn:WikitextTransclusionFilter\",\"created\":\"20210131145649553\",\"modified\":\"20210521201836224\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{{ [all[tiddlers+shadows]!is[system]tag[Template]] }}}\"},\"Sn:WikitextTransclusionFilterTemplate\":{\"title\":\"Sn:WikitextTransclusionFilterTemplate\",\"created\":\"20210131145658933\",\"modified\":\"20210521201912850\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{{ [all[tiddlers+shadows]tag[Exercise]first[]] || Sn:BoldfaceTemplate }}}\"},\"Sn:WikitextTransclusionMacro\":{\"title\":\"Sn:WikitextTransclusionMacro\",\"created\":\"20210131145717485\",\"modified\":\"20210314125402817\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define mymacro(myName) Hi <<__myName__>>!\\n\\n<<mymacro Soren>>\"},\"Sn:WikitextTransclusionMacroSubst\":{\"title\":\"Sn:WikitextTransclusionMacroSubst\",\"created\":\"20210314125642771\",\"modified\":\"20210314125531595\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define mymacro(myName) Hi $myName$!\\n\\n<<mymacro Soren>>\"},\"Sn:WikitextTransclusionTemplate\":{\"title\":\"Sn:WikitextTransclusionTemplate\",\"created\":\"20210131145638915\",\"modified\":\"20210131145540665\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{Sn:IncludeMe||Sn:BoldfaceTemplate}}\"},\"Sn:WikitextTransclusionVariable\":{\"title\":\"Sn:WikitextTransclusionVariable\",\"created\":\"20210131145709035\",\"modified\":\"20210131145610787\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<$set name=\\\"myvariable\\\" value=\\\"Hello!\\\">\\n  <<myvariable>>\\n</$set>\"},\"Sn:WikitextTripleQuotes\":{\"title\":\"Sn:WikitextTripleQuotes\",\"created\":\"20210131152001903\",\"modified\":\"20210202190814050\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"To keep your text in perfect lines,\\nJust turn to triple quotes.\\nFor this fine feature, all great minds\\nGive TiddlyWiki votes.\\n\\n\\\"\\\"\\\"\\nTo keep your text in perfect lines,\\nJust turn to triple quotes.\\nFor this fine feature, all great minds\\nGive TiddlyWiki votes.\\n\\\"\\\"\\\"\"},\"Sn:WikitextWebImage\":{\"title\":\"Sn:WikitextWebImage\",\"created\":\"20210131153434996\",\"modified\":\"20210131153336667\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"[img width=200 [https://upload.wikimedia.org/wikipedia/commons/b/bb/Kittyply_edit1.jpg?download]]\"},\"Stamps\":{\"title\":\"Stamps\",\"created\":\"20200718203354489\",\"description\":\"Stamps allow quick insertion of commonly-used snippets of text into tiddlers while editing.\",\"modified\":\"20210418141657047\",\"parent\":\"Looking Under the Hood\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"''Stamps'' are snippets of text that can be inserted into a tiddler at the click of a button, for use when a macro or transclusion wouldn't be feasible or appropriate. For instance, perhaps what you need to insert is actually a macro call, but one that has a bunch of parameters which you can't remember well.\\n\\nStamps are tiddlers (what else?) tagged `$:/tags/TextEditor/Snippet`. Such tiddlers appear on the <<textual-button \\\"stamp\\\">> stamp button on the edit toolbar under the name in their `caption` field, and clicking them inserts the text of the relevant snippet into the editor.\\n\\nIt's also possible to make a stamp take some selected text and add a prefix or suffix to it, rather than just inserting a chunk of new text. For this and more, see the [[documentation on stamps|https://tiddlywiki.com/#Using%20Stamp]].\\n\\n{{Ex:WikipediaLinkSnippet||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Structuring Our Wiki\":{\"title\":\"Structuring Our Wiki\",\"created\":\"20200530175016785\",\"description\":\"How to translate what we want the wiki to do into TiddlyWiki concepts.\",\"modified\":\"20210504015735447\",\"parent\":\"The Shape of TiddlyWiki\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Now that we've [[identified the requirements|Requirements for the Sample Wiki]] for our sample wiki, and we understand the basic data model of TiddlyWiki, with [[tiddlers|Tiddlers]], [[fields|Fields]], [[wikitext|Wikitext]], [[links|Links]], and [[tags|Tags]], let's develop a broad outline of how we'll implement the requirements in TiddlyWiki. While it's easy enough to restructure a wiki if we need to, it still makes sense to get a clear idea of what we're trying to accomplish before we start, or we'll spend all our time restructuring instead of adding useful content.\\n\\nIt's helpful to be ''consistent'' when structuring a TiddlyWiki: if we want to be able to find all our meetings, for instance, it's probably a good idea to mark all of them as meetings in a consistent way (whether by linking to them from a central list of meetings, tagging them all with the same tag, putting `Meeting` in a `tiddler-type` field on all of them, or whatever). Prebuilt software for handling work notes would likely provide some built-in way to identify something as a meeting -- perhaps a “New Meeting” button that created a different type of note -- but in TiddlyWiki we have to make those decisions ourselves. (The upside, of course, is that we //get// to make these decisions based on what makes the most sense for us.)\\n\\nSo let's take another look at our requirements and figure out how, broadly, we want to structure the notes in our wiki. Specifically, let's identify some types of tiddlers. This is not a technical distinction that TiddlyWiki makes -- a tiddler is a tiddler is a tiddler -- but it's useful for a broad range of wiki use cases to classify tiddlers in some way based on what kind of content we store in them and how we use them.\\n\\n; Daily journal tiddlers\\n: Every day we'll create a new tiddler that summarizes what we did each day.\\n\\n; Contact tiddlers\\n: One for each person we meet and want to keep track of.\\n\\n; Meeting tiddlers\\n: These will be the central location that we work in during a meeting. If there's any information that needs to go into our permanent knowledge banks, though, we'll move that out into project or knowledge tiddlers (discussed momentarily) after the meeting, as it's usually tough to remember which meeting something was part of when you need to find it later.\\n\\n; Project tiddlers\\n: While we certainly won't have only //one// tiddler per project (tiddlers are supposed to be small, after all), these will serve as the central gathering point for all the information about a project.\\n\\n; Knowledge tiddlers\\n: Any information not described above that needs a home in the wiki will be a knowledge tiddler. Because almost anything can be a knowledge tiddler, knowledge tiddlers will likely be the hardest to keep organized. That said, because they are so unstructured, it will be easy to move the information they contain between tiddlers and split and join tiddlers as our understanding of the information and the structure we want to use evolves.\\n\\nNow we have to decide how to implement these classifications within TiddlyWiki. Tags are an easy and popular method, so let's use them here. We'll tag journal tiddlers `Journal`, contact tiddlers `Contact`, project tiddlers `Project`, and meeting tiddlers `Meeting`. We won't bother giving knowledge tiddlers a classification tag, since there are usually few situations in which we want to treat only those tiddlers separately, but you could create a `Knowledge` tag too if you preferred.\\n\\nWe'll also have to decide how to associate the different types of tiddlers with each other. Since tiddlers are small and focus on only one idea, it's critical to associate them with each other in a coherent and understandable way, or they'll get lost. We'll discuss how this will work for each type of tiddler as we get to it.\\n\\nIf you're not sure how I came up with these divisions or why I made them, that's OK -- you can just play along for now. Once you have a bit more experience with TiddlyWiki, we'll be returning to the reasons for and methods of dividing content into different tiddlers and different types of tiddlers, in [[Slicing Up Content]].\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Stylesheets\":{\"title\":\"Stylesheets\",\"created\":\"20200822195432205\",\"description\":\"Every little bit of page formatting can be customized by adding CSS to your wiki.\",\"modified\":\"20210502163153128\",\"parent\":\"Getting Technical\",\"prerequisite\":\"Basic knowledge of CSS\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"TiddlyWiki has full support for ''CSS stylesheets'', both inline and as tiddlers. We saw this briefly in [[Creating a List of Links and Backlinks]]. Here are a few more details.\\n\\nThis section assumes you have basic knowledge of CSS. If you don't, and you would like to learn more about how to style your TiddlyWiki, a variety of good tutorials are available on the web.\\n\\n!! Inline stylesheets\\n\\nYou can use a `<style>` element to embed rules within the text of a tiddler. The style section can appear anywhere in the tiddler, but it's common practice to put it at the bottom.\\n\\nBe careful, however -- inline stylesheets are not scoped to the tiddler! If you place a broad rule such as `p { color: purple; }` in a tiddler, all paragraph text ''anywhere in the wiki'' will become purple whenever that tiddler is open, including in other tiddlers and in the sidebar. For this reason, you should normally use a class name on all rules that you define this way, and make sure your class name is unique so it doesn't accidentally conflict with something used elsewhere in the wiki.\\n\\nBecause of the lack of scoping, the rules in a given tiddler are guaranteed to apply to any tiddlers that transclude it; we took advantage of this in [[Creating a List of Links and Backlinks]].\\n\\n!! Styling and classes in wikitext\\n\\nYou can apply arbitrary styles or classes to regions of wikitext using the `@@` syntax, like this:\\n\\n{{Sn:AtAtStyle||MagicSnippet}}\\n\\n{{Sn:AtAtClass||MagicSnippet}}\\n\\nSee the [[documentation|https://tiddlywiki.com/#Styles%20and%20Classes%20in%20WikiText]] for more on this feature.\\n\\n\\n!! Stylesheets in tiddlers\\n\\nFor styles and stylesheets you want to use in more than a single template or tiddler, a more robust approach is to place them in ''tiddlers of their own''.\\n\\nTiddlers tagged `$:/tags/Stylesheet` will be incorporated in the global stylesheet and apply to all tiddlers in the wiki at all times. Any changes to such tiddlers take effect as soon as you save the tiddler.\\n\\nThere is a content type called `text/css`. This is convenient for stylesheets since it makes nice syntax highlighting when you view the tiddler, but be aware that choosing this content type takes away the ability you would otherwise have to use transclusions or macro calls in your stylesheet. For instance, this is valid if and only if you have the content type of the tiddler set to wikitext:\\n\\n```css\\n.my-alert-class {\\n  background-color: <<colour alert-background>>;\\n}\\n```\\n\\n!! Exercises\\n\\n{{Ex:FunnyClass||ExerciseTemplate}}\\n{{Ex:ConditionalStyle||ExerciseTemplate}}\\n{{Ex:FunnyTextCheckbox||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Summary of Macro and Transclusion Syntax\":{\"title\":\"Summary of Macro and Transclusion Syntax\",\"created\":\"20210320182859703\",\"description\":\"Review all the syntax used for reusing and relating content in TiddlyWiki.\",\"modified\":\"20210410143748530\",\"parent\":\"Variables, Macros, and Transclusions\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"We learned about a lot of different ways of reusing and relating content in TiddlyWiki in this chapter, and when you've just learned all of them, it's often difficult to keep them straight. Let's review all the options and the syntax for each.\\n\\nYou can find a condensed version of this section in the [[Wikitext Reference]], which also has some live examples you can play with.\\t\\n\\n!! Available in wikitext and filter expressions\\n\\nThe following types of references work both within [[wikitext|Wikitext]] and [[filter expressions|Filters and Transclusions]]. In filter expressions, you use only ''one of each type of bracket''. In wikitext, you use two.\\n\\n; `[[square brackets]]`\\n: To link or refer to the title of a tiddler.\\n\\n; `<<angle brackets>>`\\n: To get the value of a [[variable|Variables]] or call a [[macro|Macros]].\\n\\n; `{{curly braces}}`\\n: To [[transclude the value of|Transclusions]] a field of a tiddler.\\n* `{{tiddler}}` to transclude the `text` field of a tiddler\\n* `{{tiddler!!field}}` to transclude a different field of a tiddler\\n* `{{!!field}}` to transclude a field of the [[current tiddler|Templates and the Current Tiddler]]\\n* `{{tiddler##index}}` to transclude a property of a [[data tiddler|Data Tiddlers]] (we'll learn about data tiddlers in [[chapter 5|More Organizational Tools]])\\n* `{{tiddler||Template}}` to transclude a tiddler [[through a template|Templates and the Current Tiddler]]\\n* `{{||Template}}` to transclude the current tiddler through a template\\n\\n!! Available only within wikitext\\n\\n; `{{{ triple curly braces }}}`\\n: Select one or more tiddlers using a filter, [[then transclude them|Filters and Transclusions]]. You can think of this as the “super” or “extra powerful” version of normal double-brace transclusion, since it has one extra brace.\\n\\nAs you might have worked out from the heading “Available only within wikitext”, this form is not available inside another filter expression; if you need to nest filter expressions this way, store the results of the inner filter expression [[in a variable|Variables]] and then transclude the value of that variable into the outer filter expression.\\n\\n!! Available only within macros\\n\\nSome extra syntax for variables and parameters is available within [[macro|Macros]] definitions, whether you're within a filter expression inside the macro definition or not:\\n\\n* `<<angle brackets>>` refer to a variable without text substitution. (This is the same standard syntax available outside a macro and is included here for comparison with the following three items.)\\n* `$(parenthesized dollar signs)$` refer to a variable using [[text substitution|Text Substitution]].\\n* `<<__angle brackets with underscores__>>` refer to a parameter of the macro without text substitution. Inside a filter expression, use `<__single angle brackets but double underscores__>`.\\n* `$dollar signs$` refer to a parameter of the macro using text substitution.\\n\\nNeither the `<<variable>>` nor the `<<__parameter__>>` syntax works if the contents of your macro [[will not be wikified|Wikification]] where you intend to call it, for instance because you are providing it as an attribute of a [[widget|Widgets]] or [[HTML tag|HTML]]; the text-substitution-based forms must be used in that case.\"},\"Supplemental Exercises\":{\"title\":\"Supplemental Exercises\",\"created\":\"20201122225852336\",\"description\":\"In which are offered some optional challenges to improve your TiddlyWiki skills, should you choose to accept them.\",\"modified\":\"20210207045751387\",\"parent\":\"Outline\",\"tags\":\"Chapter\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"If you're looking for a challenge or some extra practice after finishing most or all of the book, here are some larger exercises you can try.\\n\\n{{Ex:TagColorGrouping||ExerciseTemplate}}\\n{{Ex:HostingOptions||ExerciseTemplate}}\\n{{Ex:MoreSidebarTabs||ExerciseTemplate}}\\n{{Ex:StylesheetExperiments||ExerciseTemplate}}\\n{{Ex:MailMerge||ExerciseTemplate}}\\n{{Ex:StretchText||ExerciseTemplate}}\\n{{Ex:NewWiki||ExerciseTemplate}}\"},\"Support Us\":{\"title\":\"Support Us\",\"created\":\"20210818143231603\",\"description\":\"If you've made it this far, please consider chipping in some money or time to help the open-source projects you're using.\",\"modified\":\"20210818144726320\",\"parent\":\"Appendices\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"If you've made it this far in //Grok TiddlyWiki// and expect to continue using and enjoying TiddlyWiki, please consider contributing financially to or helping out with the GTW and/or TiddlyWiki projects. Such open-source projects thrive when a wide variety of people get involved. Here are some options.\\n\\nFor GTW:\\n\\n* ''<a href={{$:/sib/DonationLink}}>Donate to the Grok TiddlyWiki project</a>'' to support me in keeping this book up to date.\\n* ''Provide feedback on the book''. In addition to using the //send feedback// link at the bottom of any section to provide targeted feedback on that section, you can send general thoughts on how well the book has worked for you to `contact@sorenbjornstad.com`.\\n\\nFor TiddlyWiki itself:\\n\\n* ''Become a contributor to the TiddlyWiki organization'' or fund an ongoing project [[on OpenCollective|https://opencollective.com/tiddlywikidotorg]]. Such contributions help keep the project running smoothly, and they also give you a small stake in the community (if you fund a feature, for instance, your take on that feature will be prioritized).\\n* ''Share your new expertise'' on the [[TiddlyWiki forums|https://groups.google.com/g/tiddlywiki]].\\n* ''Share TiddlyWiki tools you create as plugins'' (see [[Creating Plugins]]) or, if you know some JavaScript, [[help out with the core development of TiddlyWiki|https://github.com/Jermolene/TiddlyWiki5]].\\n* ''Share TiddlyWiki with your friends''. The more users we have, the stronger and healthier the community.\"},\"System Tiddlers\":{\"title\":\"System Tiddlers\",\"created\":\"20200717225935255\",\"description\":\"Almost everything in TiddlyWiki is controlled by tiddlers; system tiddlers are those hidden “meta-tiddlers” that control the wiki rather than containing your actual content.\",\"modified\":\"20210418132849099\",\"parent\":\"Looking Under the Hood\",\"tags\":\"Section Concept\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Back at the very beginning of the book, in [[Tiddlers]], we learned that everything is a tiddler. And in [[Transclusions]], we mentioned in passing that the entire interface of TiddlyWiki is created by transcluding special tiddlers.\\n\\nThis means that, essentially, we can change //anything// in TiddlyWiki just by modifying these tiddlers, using the same tools we already know. Completely changing the look and feel of TiddlyWiki and implementing custom JavaScript code are beyond the scope of this book, but in this chapter we will look at changing the sidebar, adding custom interface elements, and some more fun and useful things that will help you make any wiki you create with TiddlyWiki exactly fit your needs. Along the way, you'll also learn how you can poke around and discover how these tiddlers work, so you can make your own changes that we haven't talked about.\\n\\nIf everything is made up of these special tiddlers, you may be wondering why you don't see all of them in the list of tiddlers when you click the ''All'' section of the ''More'' tab in the sidebar of a new TiddlyWiki. The answer is that they're ''system tiddlers''. A system tiddler is a tiddler whose title begins with `$:/`. System tiddlers are hidden in search results and most tabs of the sidebar.\\n\\nAside from their names and the fact that tiddlers with those names are hidden from most views, there is nothing special or different about system tiddlers as compared to “normal” tiddlers.\\n\\nSystem tiddlers are ''organized into a hierarchy'' by giving them names with slashes separating each folder, much like a computer's file system. For instance, the default height of the text box presented when you edit a tiddler is stored in a tiddler called [[$:/config/TextEditor/EditorHeight/Height]].\\n\\nImportant top-level folders in this hierarchy include:\\n\\n* `config` -- {{Ltc:EverySetting||LieToChildrenTemplate}} (there are other settings here that aren't displayed in the control panel as well)\\n* `core` -- most of the ''code of TiddlyWiki'', in both JavaScript and wikitext, is kept in here\\n* `language` -- contains ''translations'' for TiddlyWiki elements into your local language\\n* `palettes` -- contains ''tables from names to colors'' used to draw the interface\\n* `plugins` -- any ''plugins you've installed'' go here\\n* `state` -- contains temporary tiddlers that describe ''what you currently have open and selected'' in the user interface\\n* `tags` -- for the parts of TiddlyWiki's interface and functionality people most frequently want to ''add parts to'', TiddlyWiki provides these special tags; by adding the tag to a new tiddler, that tiddler appears in TiddlyWiki's interface\\n* `temp` -- contains miscellaneous ''temporary tiddlers''\\n* `themes` -- contains [[CSS|Stylesheets]] and configuration tweaks describing ''how to draw the interface''\\n\\nMany people like to create a top-level folder titled with their name or initials (e.g., I use `$:/sib`), so that when they create their own custom system tiddlers, they can see them all in the same place and remember what they've added. You don't have to make your custom tiddlers system tiddlers -- you could just make them normal tiddlers with whatever names you like -- but if you make them system tiddlers, you won't struggle to find them in among your wiki's content.\\n\\nYou can see a list of all system tiddlers in the ''System'' section of the ''More'' tab. However, the ''Explorer'' tab is usually a better way to look -- this will show them in a tree view.\\n\\nAs noted earlier, system tiddlers are not shown in the results provided by the standard search box. If you want to find one, perhaps so you can edit it or inspect how it works, you can search in system tiddlers using the ''System'' tab of Advanced Search. On the other hand, system tiddlers are //not// hidden from filters. Often this isn't noticeable at all since filters typically look for things with a particular tag or field or link, and system tiddlers typically do not share tags, field values, or links with non-system tiddlers. However, some filters, both those built into TiddlyWiki and ones you compose yourself, will need to use the `!is[system]` filter step to remove system tiddlers from the list.\\n\\nNote that neither Advanced Search, nor filters you may write, nor the ''System'' section of the ''More'' tab includes system tiddlers that are also [[shadow tiddlers|Shadow Tiddlers]] (we'll discuss those in a moment). To find those, you'll need to use the ''Shadows'' tab of either interface.\\n\\n!! Exercises\\n\\n{{Ex:CreateSystemTiddler||ExerciseTemplate}}\\n{{Ex:ExploreSystemTiddlers||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Ta:20200822211244880\":{\"title\":\"Ta:20200822211244880\",\"answer\":\"The tiddler.\",\"created\":\"20201228232338980\",\"modified\":\"20210408175114783\",\"origin\":\"Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What is the basic unit of information in TiddlyWiki called?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20200822211313655\":{\"title\":\"Ta:20200822211313655\",\"created\":\"20201228235958360\",\"modified\":\"20210408175116252\",\"origin\":\"Tiddlers\",\"qtype\":\"remembercz\",\"question\":\"In TiddlyWiki, everything is {a tiddler}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20200822211503713\":{\"title\":\"Ta:20200822211503713\",\"created\":\"20201229010008510\",\"modified\":\"20210408175215221\",\"origin\":\"Fields\",\"qtype\":\"remembercz\",\"question\":\"A tiddler is made up of a number of {fields}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20200822211526055\":{\"title\":\"Ta:20200822211526055\",\"answer\":\"`title`\",\"created\":\"20201229025141722\",\"modified\":\"20210408175217518\",\"origin\":\"Fields\",\"qtype\":\"rememberq\",\"question\":\"What field of a tiddler do you use to reference it from elsewhere in the wiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20200822211552128\":{\"title\":\"Ta:20200822211552128\",\"answer\":\"`text`\",\"created\":\"20201229025209620\",\"modified\":\"20210408175219699\",\"origin\":\"Fields\",\"qtype\":\"rememberq\",\"question\":\"What is the name of the tiddler field that stores the tiddler's main content?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20200822211746148\":{\"title\":\"Ta:20200822211746148\",\"answer\":\"TiddlyWiki shows the link in //italics//.\",\"created\":\"20201229030154128\",\"modified\":\"20210408180628017\",\"origin\":\"Links\",\"qtype\":\"rememberq\",\"question\":\"How can you tell that a link points to a tiddler that does not yet exist?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20200822212240517\":{\"title\":\"Ta:20200822212240517\",\"answer\":\"`[[My Tiddler]]`\",\"created\":\"20201229030133218\",\"modified\":\"20210408180634486\",\"origin\":\"Links\",\"qtype\":\"rememberq\",\"question\":\"What is the wikitext syntax to link to a tiddler called `My Tiddler`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20200822212437920\":{\"title\":\"Ta:20200822212437920\",\"answer\":\"`MyTiddler` is in CamelCase.\",\"created\":\"20201229030107646\",\"modified\":\"20210408180643582\",\"origin\":\"Links\",\"qtype\":\"rememberq\",\"question\":\"Why will TiddlyWiki create a link to a tiddler called `MyTiddler` when `MyTiddler` is mentioned in wikitext, even though its name is not in double square brackets?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20200822212544970\":{\"title\":\"Ta:20200822212544970\",\"created\":\"20201229030032630\",\"modified\":\"20210408180645964\",\"origin\":\"Links\",\"qtype\":\"remembercz\",\"question\":\"A phrase is in camel case when there are no {spaces} between words and the beginning of each word is {capitalized}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229025230862\":{\"title\":\"Ta:20201229025230862\",\"answer\":\"Separate fields allow you to easily retrieve exactly that information or search and filter based on it later.\",\"created\":\"20201229025238374\",\"modified\":\"20210408175242832\",\"origin\":\"Fields\",\"qtype\":\"rememberq\",\"question\":\"Why might you choose to separate information in a tiddler into multiple fields, rather than placing it all in the `text` field?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229025804939\":{\"title\":\"Ta:20201229025804939\",\"answer\":\"e.g., the time of a meeting, a person's phone number, the year a book was published, the URL of source material\",\"created\":\"20201229025808136\",\"modified\":\"20210817221838586\",\"origin\":\"Fields\",\"qtype\":\"rememberq\",\"question\":\"Give an example of a piece of information you might put in a tiddler field (try to pick a new one).\",\"tags\":\"Takeaway\",\"tiddler\":\"$:/config/sobjornstad/TakeAway/ContextualHelp/seen/creative-question\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229030304572\":{\"title\":\"Ta:20201229030304572\",\"created\":\"20201229030307210\",\"modified\":\"20210408175542446\",\"origin\":\"Wikitext\",\"qtype\":\"remembercz\",\"question\":\"The content of tiddlers is written in a markup language called {wikitext}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229030422254\":{\"title\":\"Ta:20201229030422254\",\"created\":\"20201229030425627\",\"modified\":\"20210409020134457\",\"origin\":\"Tags\",\"qtype\":\"remembercz\",\"question\":\"In TiddlyWiki, tags are a special kind of {link} to another tiddler.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229030621143\":{\"title\":\"Ta:20201229030621143\",\"created\":\"20201229030636372\",\"modified\":\"20210408180647876\",\"origin\":\"Links\",\"qtype\":\"remembercz\",\"question\":\"The set of links to a specific tiddler from anywhere in the wiki are called that tiddler's {backlinks}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229030848490\":{\"title\":\"Ta:20201229030848490\",\"created\":\"20201229030857524\",\"modified\":\"20210409020136681\",\"origin\":\"Tags\",\"qtype\":\"remembercz\",\"question\":\"If the tiddler `Soren` has a tag `Person`, the tiddler `Person` is said to be {tagging} the tiddler `Soren`.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229030953451\":{\"title\":\"Ta:20201229030953451\",\"answer\":\"The tag.\",\"created\":\"20201229030955602\",\"modified\":\"20210409020140135\",\"origin\":\"Tags\",\"qtype\":\"rememberq\",\"question\":\"What basic TiddlyWiki concept is used to define hierarchies of tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229031256513\":{\"title\":\"Ta:20201229031256513\",\"answer\":\"TiddlyWiki implements hierarchies using tags, where a tiddler's tags represent its parent(s) in the hierarchy, and a tiddler can have more than one tag.\",\"created\":\"20201229031258882\",\"modified\":\"20210409020142429\",\"origin\":\"Tags\",\"qtype\":\"rememberq\",\"question\":\"Explain why tiddlers can be in multiple places within one hierarchy.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229031750518\":{\"title\":\"Ta:20201229031750518\",\"answer\":\"Click the //Recent// tab in the sidebar and select the appropriate tiddler.\",\"created\":\"20201229031755663\",\"modified\":\"20210409022716951\",\"origin\":\"Journal Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"How can you reopen tiddlers that you recently edited and then closed?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229031836905\":{\"title\":\"Ta:20201229031836905\",\"answer\":\"`!! Section`\",\"created\":\"20201229031840712\",\"modified\":\"20210409022719872\",\"origin\":\"Journal Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What is the wikitext syntax to create a second-level section heading called //Section//?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229033207375\":{\"title\":\"Ta:20201229033207375\",\"answer\":\"`''bold text''`\",\"created\":\"20201229033208604\",\"modified\":\"20210409022729549\",\"origin\":\"Journal Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What is the wikitext syntax for bold text?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229033224063\":{\"title\":\"Ta:20201229033224063\",\"answer\":\"`//italic text//`\",\"created\":\"20201229033225366\",\"modified\":\"20210409022731715\",\"origin\":\"Journal Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What is the wikitext syntax for italic text?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229033500358\":{\"title\":\"Ta:20201229033500358\",\"answer\":\"Alt+P\",\"created\":\"20201229033503534\",\"modified\":\"20210409022733962\",\"origin\":\"Journal Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What keyboard shortcut, while editing a tiddler, toggles the side-by-side preview function?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229033547873\":{\"title\":\"Ta:20201229033547873\",\"answer\":\"In a tiddler's main text field.\",\"created\":\"20201229033553908\",\"modified\":\"20210418131957334\",\"origin\":\"Journal Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"For editor keyboard shortcuts to work, such as those that insert italic markup, where must your cursor be positioned?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229033735626\":{\"title\":\"Ta:20201229033735626\",\"answer\":\"Turn on the side-by-side preview function.\",\"created\":\"20201229033737299\",\"modified\":\"20210409022751235\",\"origin\":\"Journal Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"If you're unsure whether your wikitext markup is correct, how can you quickly check it without saving the tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229034152108\":{\"title\":\"Ta:20201229034152108\",\"answer\":\"Control+Enter\",\"created\":\"20201229034153231\",\"modified\":\"20210502173957172\",\"origin\":\"Contact Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What editor keyboard shortcut saves the changes to a tiddler and exits edit mode?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229034446872\":{\"title\":\"Ta:20201229034446872\",\"answer\":\"The contact tiddler will accumulate a list of backlinks that lets you easily find all references to the person.\",\"created\":\"20201229034449199\",\"modified\":\"20210409024225953\",\"origin\":\"Contact Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"Why is it a good idea to link to a contact tiddler when mentioning that person in your work notes, even if you are unlikely to want to jump to that tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229034615019\":{\"title\":\"Ta:20201229034615019\",\"created\":\"20201229034616969\",\"modified\":\"20210409024230343\",\"origin\":\"Contact Tiddlers\",\"qtype\":\"remembercz\",\"question\":\"Linking is often a more effective way to build a list of references to a person, object, or concept than full-text search because search, unlike links, is subject to both {c1::false positive}s and {c1::false negative}s.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229034751031\":{\"title\":\"Ta:20201229034751031\",\"answer\":\"If you felt the mention was not relevant in any other context, and you explicitly did not want the notes to appear in connection with that person.\",\"created\":\"20201229034755780\",\"modified\":\"20210409024239085\",\"origin\":\"Contact Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"Why might you choose //not// to link to a person's contact tiddler in some notes, even if you were mentioning them?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229034858232\":{\"title\":\"Ta:20201229034858232\",\"answer\":\"When you find the phrase you searched for in a tiddler, but the tiddler is not relevant to what you were looking for (e.g., you searched for `Jane` and got a tiddler about another person //Janet//).\",\"created\":\"20201229034900398\",\"modified\":\"20210409024249243\",\"origin\":\"Contact Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"In the context of full-text search, what is a //false positive//?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229035036108\":{\"title\":\"Ta:20201229035036108\",\"answer\":\"When the phrase you search for fails to retrieve a relevant tiddler (e.g., you searched for `Robert`, but in the tiddler you called him //Bob//).\",\"created\":\"20201229035037606\",\"modified\":\"20210409024258215\",\"origin\":\"Contact Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"In the context of full-text search, what is a //false negative//?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229035422461\":{\"title\":\"Ta:20201229035422461\",\"answer\":\"e.g., searching for `Katherine` when you called her `Kate`, searching for `start here` when you wrote `begin here`\",\"created\":\"20201229035424934\",\"modified\":\"20210409024305263\",\"origin\":\"Contact Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"Give an example of a full-text search that yields a false negative, including both the phrase you search for and the reason it doesn't work (try to pick a new example).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229035537182\":{\"title\":\"Ta:20201229035537182\",\"created\":\"20201229035539375\",\"modified\":\"20210409024309050\",\"origin\":\"Contact Tiddlers\",\"qtype\":\"remembercz\",\"question\":\"TiddlyWiki's power is directly proportional to the amount of care you put into {linking together / relating} ideas.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229035950796\":{\"title\":\"Ta:20201229035950796\",\"created\":\"20201229035952129\",\"modified\":\"20210409024323043\",\"origin\":\"Contact Tiddlers\",\"qtype\":\"remembercz\",\"question\":\"A //tiddler list// field consists of a series of {tiddler titles} separated by spaces.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229040048702\":{\"title\":\"Ta:20201229040048702\",\"answer\":\"Surround it with double square brackets as if linking to it: `[[My Tiddler]]`.\",\"created\":\"20201229040049863\",\"modified\":\"20210409024425278\",\"origin\":\"Contact Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"How would you place a tiddler named `My Tiddler` in a list field, since it contains a space and tiddlers are separated by spaces in list fields?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229040227672\":{\"title\":\"Ta:20201229040227672\",\"answer\":\"Click the info button on the tiddler's edit toolbar, then the //Backlinks// tab.\",\"created\":\"20201229040228907\",\"modified\":\"20210409024437174\",\"origin\":\"Contact Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"When viewing a tiddler, where can you look to find a list of its backlinks in stock TiddlyWiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229040301820\":{\"title\":\"Ta:20201229040301820\",\"answer\":\"Click the info button on the tiddler's view toolbar, then the //Fields// tab.\",\"created\":\"20201229040303487\",\"modified\":\"20211129232258577\",\"origin\":\"Contact Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"When viewing a tiddler, where can you look to find a list of its fields in stock TiddlyWiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229041027133\":{\"title\":\"Ta:20201229041027133\",\"answer\":\"The //excise// button on the edit toolbar.\",\"created\":\"20201229041029939\",\"modified\":\"20210409024853859\",\"origin\":\"Meeting Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"When you are editing a tiddler and realize that a portion of its contents should be split into its own tiddler, what operation would you use?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229041348365\":{\"title\":\"Ta:20201229041348365\",\"answer\":\"December 9, 2018. (You have to subtract five hours from the `01` part, since the timestamp is at UTC+0, which moves the calendar back a day.)\",\"created\":\"20201229041355152\",\"modified\":\"20210409024931341\",\"origin\":\"Meeting Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"In the UTC-5 timezone, what date does the TiddlyWiki timestamp `20181210015823551` represent?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229041904213\":{\"title\":\"Ta:20201229041904213\",\"answer\":\"A link only records that the tiddlers are //related// in some unexplained way; because the field has a name, it can explain exactly how they are related.\",\"created\":\"20201229041909709\",\"modified\":\"20210409024937809\",\"origin\":\"Meeting Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"Why does listing related tiddlers in a field, such as `participants`, provide more information to TiddlyWiki than linking to them in a tiddler's text?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229042226193\":{\"title\":\"Ta:20201229042226193\",\"created\":\"20201229042227539\",\"modified\":\"20210409025820846\",\"origin\":\"Project Tiddlers\",\"qtype\":\"remembercz\",\"question\":\"It's better for tiddlers to indicate that they're {c1::a part of a whole}, rather than the whole listing {c1::all of its parts}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229042909540\":{\"title\":\"Ta:20201229042909540\",\"created\":\"20201229042921599\",\"modified\":\"20210409030944660\",\"origin\":\"Knowledge Tiddlers\",\"qtype\":\"remembercz\",\"question\":\"A tiddler that does not exist but has links pointing to it is said to be {missing}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229042945472\":{\"title\":\"Ta:20201229042945472\",\"answer\":\"On the ''Missing'' section of the ''More'' sidebar tab.\",\"created\":\"20201229042946651\",\"modified\":\"20210409030953058\",\"origin\":\"Knowledge Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"Where in TiddlyWiki's stock interface can you find a list of missing tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229132641099\":{\"title\":\"Ta:20201229132641099\",\"created\":\"20201229132643999\",\"modified\":\"20210409030956315\",\"origin\":\"Knowledge Tiddlers\",\"qtype\":\"remembercz\",\"question\":\"Lean towards relating two tiddlers with a tag if one is {part of} the other, and towards relating them with a link if one is merely {related to} the other.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229132721666\":{\"title\":\"Ta:20201229132721666\",\"answer\":\"The more tags you have, the longer it takes to determine what tags should be added to a tiddler.\",\"created\":\"20201229132742157\",\"modified\":\"20210409031002973\",\"origin\":\"Knowledge Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"Why is creating too many general-purpose tags problematic?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229132913263\":{\"title\":\"Ta:20201229132913263\",\"created\":\"20201229132918926\",\"modified\":\"20210409031009431\",\"origin\":\"Knowledge Tiddlers\",\"qtype\":\"remembercz\",\"question\":\"Before adding a tag, make sure you can identify a situation where you would {use the tag} to find something or make a decision about the tiddler.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229133430741\":{\"title\":\"Ta:20201229133430741\",\"answer\":\"Matches on the title appear at the top of search results, and there are many fewer of them than text matches.\",\"created\":\"20201229133432015\",\"modified\":\"20210409032154496\",\"origin\":\"Searching\",\"qtype\":\"rememberq\",\"question\":\"Why is it particularly helpful to include important keywords in the title of your tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229133511208\":{\"title\":\"Ta:20201229133511208\",\"answer\":\"Ctrl+Shift+F\",\"created\":\"20201229133512754\",\"modified\":\"20210502174021449\",\"origin\":\"Searching\",\"qtype\":\"rememberq\",\"question\":\"What keyboard shortcut puts the focus in the main search box?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229133609019\":{\"title\":\"Ta:20201229133609019\",\"answer\":\"`title` and `text` only.\",\"created\":\"20201229133610094\",\"modified\":\"20210409032158995\",\"origin\":\"Searching\",\"qtype\":\"rememberq\",\"question\":\"Which fields of a tiddler does the main search box look in?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229133709005\":{\"title\":\"Ta:20201229133709005\",\"answer\":\"TiddlyWiki's default full-text search only looks in the `title` and `text` fields.\",\"created\":\"20201229133710673\",\"modified\":\"20210409032203738\",\"origin\":\"Searching\",\"qtype\":\"rememberq\",\"question\":\"Why might a search for `lemons` not find a tiddler which has an `ingredients` field containing the word //lemons//?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229150107986\":{\"title\":\"Ta:20201229150107986\",\"answer\":\"It is ambiguous; it could refer to several companies, a fruit, a computer…\",\"created\":\"20201229150109886\",\"modified\":\"20210409130116657\",\"origin\":\"Tiddler Titles\",\"qtype\":\"rememberq\",\"question\":\"Why is //Apple// likely a problematic title for a tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229150153169\":{\"title\":\"Ta:20201229150153169\",\"created\":\"20201229150154649\",\"modified\":\"20210409130124011\",\"origin\":\"Tiddler Titles\",\"qtype\":\"remembercz\",\"question\":\"Tiddler titles are a form of {metacommentary}, a way of commenting on the claims or ideas in the tiddler and explaining what to think about them.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229150514130\":{\"title\":\"Ta:20201229150514130\",\"answer\":\"You may accidentally create duplicate tiddlers on the same idea, since tiddler titles are case-sensitive.\",\"created\":\"20201229150516613\",\"modified\":\"20210409131327107\",\"origin\":\"Naming Conventions\",\"qtype\":\"rememberq\",\"question\":\"What confusion may result if you don't have consistent rules for how to capitalize the titles of tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229150834732\":{\"title\":\"Ta:20201229150834732\",\"answer\":\"If you don't, you might use a plural when a singular already exists (or vice versa) and create a duplicate tiddler.\",\"created\":\"20201229150836340\",\"modified\":\"20210409131329396\",\"origin\":\"Naming Conventions\",\"qtype\":\"rememberq\",\"question\":\"Why is it valuable to make all tiddler names that represent nouns singular, or all of them plural?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229151002291\":{\"title\":\"Ta:20201229151002291\",\"created\":\"20201229151003687\",\"modified\":\"20210409125125233\",\"origin\":\"Browsing Your Tiddlers\",\"qtype\":\"remembercz\",\"question\":\"Tiddlers that are currently being edited are called {drafts}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229151054738\":{\"title\":\"Ta:20201229151054738\",\"created\":\"20201229151055958\",\"modified\":\"20210409125127348\",\"origin\":\"Browsing Your Tiddlers\",\"qtype\":\"remembercz\",\"question\":\"Tiddlers that have not been linked to in the text field of any other tiddler are called {orphans}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229151146289\":{\"title\":\"Ta:20201229151146289\",\"answer\":\"By dragging and dropping them on the //Open// tab of the sidebar.\",\"created\":\"20201229151149028\",\"modified\":\"20210409125129381\",\"origin\":\"Browsing Your Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"How can you reorder the tiddlers currently displayed in the story river?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229151337744\":{\"title\":\"Ta:20201229151337744\",\"answer\":\"`text`\",\"created\":\"20201229151339841\",\"modified\":\"20210409125131967\",\"origin\":\"Browsing Your Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"To remove a tiddler from the list of orphans, another tiddler must link to it within what field?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229151447515\":{\"title\":\"Ta:20201229151447515\",\"answer\":\"On the //More// tab of the sidebar.\",\"created\":\"20201229151450290\",\"modified\":\"20210418131733931\",\"origin\":\"Browsing Your Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"Most of the options for browsing lists of tiddlers in your wiki can be found where in TiddlyWiki's interface?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229151542420\":{\"title\":\"Ta:20201229151542420\",\"answer\":\"A draft tiddler, which will house your changes until you save them.\",\"created\":\"20201229151543639\",\"modified\":\"20210409125201551\",\"origin\":\"Browsing Your Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"When you begin editing a tiddler, what kind of new tiddler is created?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229151619186\":{\"title\":\"Ta:20201229151619186\",\"answer\":\"The draft tiddler containing the new version replaces the original tiddler (and the draft tiddler is deleted).\",\"created\":\"20201229151625095\",\"modified\":\"20210409125211638\",\"origin\":\"Browsing Your Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What manipulations to tiddlers are carried out when you save (or //confirm//) changes to a tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229151835493\":{\"title\":\"Ta:20201229151835493\",\"answer\":\"The tag.\",\"created\":\"20201229151838250\",\"modified\":\"20210409134645832\",\"origin\":\"Creating Hierarchies with a Table of Contents\",\"qtype\":\"rememberq\",\"question\":\"The built-in table-of-contents macros in TiddlyWiki find hierarchies based on what TiddlyWiki concept?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229152140871\":{\"title\":\"Ta:20201229152140871\",\"answer\":\"`<<toc \\\"TableOfContents\\\">>`\",\"created\":\"20201229152142692\",\"modified\":\"20210409134659559\",\"origin\":\"Creating Hierarchies with a Table of Contents\",\"qtype\":\"rememberq\",\"question\":\"What wikitext syntax displays a table of contents that shows all tiddlers in a non-expandable hierarchy, beginning at the tiddler `TableOfContents`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229152249751\":{\"title\":\"Ta:20201229152249751\",\"answer\":\"`<<toc-selective-expandable \\\"My Start Tiddler\\\">>`\",\"created\":\"20201229152256606\",\"modified\":\"20210409134710297\",\"origin\":\"Creating Hierarchies with a Table of Contents\",\"qtype\":\"rememberq\",\"question\":\"What wikitext syntax displays a table of contents that displays tiddlers in a collapsable and expandable hierarchy, beginning from the tiddler `My Start Tiddler`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229152529071\":{\"title\":\"Ta:20201229152529071\",\"answer\":\"e.g., steps in a project or procedure, an organization's management hierarchy\",\"created\":\"20201229152531292\",\"modified\":\"20210409134719817\",\"origin\":\"Creating Hierarchies with a Table of Contents\",\"qtype\":\"rememberq\",\"question\":\"Give an example of a time when you might want to use a table of contents to create a small hierarchy within a larger set of notes (try to pick a new one).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229152725707\":{\"title\":\"Ta:20201229152725707\",\"created\":\"20201229152726809\",\"modified\":\"20210409134729874\",\"origin\":\"Creating Hierarchies with a Table of Contents\",\"qtype\":\"remembercz\",\"question\":\"The TiddlyWiki table-of-contents macros display the value of the {`caption`} field instead of the tiddler's title, if such a field exists.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201229152806403\":{\"title\":\"Ta:20201229152806403\",\"answer\":\"The `caption` field of the tiddler is set to `A tiddler I don't like very much`.\",\"created\":\"20201229152809724\",\"modified\":\"20210418131758425\",\"origin\":\"Creating Hierarchies with a Table of Contents\",\"qtype\":\"rememberq\",\"question\":\"A tiddler titled `MyFavoriteTiddler` appears in a table of contents as `A tiddler I don't like very much`. Why does the title not match?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230162251323\":{\"title\":\"Ta:20201230162251323\",\"created\":\"20201230162255166\",\"modified\":\"20210409151510440\",\"origin\":\"Filters\",\"qtype\":\"remembercz\",\"question\":\"TiddlyWiki filters serve a similar function to {formulas} in Excel or other spreadsheet applications.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230162420639\":{\"title\":\"Ta:20201230162420639\",\"answer\":\"To select tiddlers that match certain criteria.\",\"created\":\"20201230162424699\",\"modified\":\"20210409151512101\",\"origin\":\"Filters\",\"qtype\":\"rememberq\",\"question\":\"What is the primary purpose of filters?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230162558911\":{\"title\":\"Ta:20201230162558911\",\"answer\":\"Nothing. TiddlyWiki is aware of when it needs to reprocess the filter, so any changes appear immediately.\",\"created\":\"20201230162600759\",\"modified\":\"20210409151516563\",\"origin\":\"Filters\",\"qtype\":\"rememberq\",\"question\":\"When you create a dynamic list that is populated by a filter, what must you do to update the list to match changes in the wiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230162726228\":{\"title\":\"Ta:20201230162726228\",\"created\":\"20201230162727415\",\"modified\":\"20210409152332592\",\"origin\":\"Using Filter Expressions\",\"qtype\":\"remembercz\",\"question\":\"A filter expression consists of one or more filter {run}s.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230162740192\":{\"title\":\"Ta:20201230162740192\",\"created\":\"20201230162741473\",\"modified\":\"20210418131919872\",\"origin\":\"Using Filter Expressions\",\"qtype\":\"remembercz\",\"question\":\"A filter run consists of one or more filter {step}s.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230162912482\":{\"title\":\"Ta:20201230162912482\",\"created\":\"20201230162914568\",\"modified\":\"20210409152338772\",\"origin\":\"Using Filter Expressions\",\"qtype\":\"remembercz\",\"question\":\"A filter run can be thought of as a {pipeline} (logistics/transportation metaphor), where each step processes its input and produces new output.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230163017337\":{\"title\":\"Ta:20201230163017337\",\"answer\":\"filter expression > filter run > filter step\",\"created\":\"20201230163018391\",\"modified\":\"20210418131923989\",\"origin\":\"Using Filter Expressions\",\"qtype\":\"rememberq\",\"question\":\"Put the following filter concepts in order from largest to smallest: filter step, filter expression, filter run.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230163141646\":{\"title\":\"Ta:20201230163141646\",\"answer\":\"`[[My Tiddler]]` (`[title[My Tiddler]]` would also work, among other options; but that's longer.)\",\"created\":\"20201230163144011\",\"modified\":\"20210409152351114\",\"origin\":\"Using Filter Expressions\",\"qtype\":\"rememberq\",\"question\":\"What is the shortest filter expression that selects the single tiddler `My Tiddler`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230163214398\":{\"title\":\"Ta:20201230163214398\",\"answer\":\"`[tag[Project]]`\",\"created\":\"20201230163217137\",\"modified\":\"20210409152357141\",\"origin\":\"Using Filter Expressions\",\"qtype\":\"rememberq\",\"question\":\"What filter expression selects all tiddlers that are tagged `Project`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230163300801\":{\"title\":\"Ta:20201230163300801\",\"answer\":\"`!is[system]`\",\"created\":\"20201230163302373\",\"modified\":\"20210418131943487\",\"origin\":\"Using Filter Expressions\",\"qtype\":\"rememberq\",\"question\":\"What filter step removes all system tiddlers from consideration?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230163348978\":{\"title\":\"Ta:20201230163348978\",\"answer\":\"It is a single filter step; to be a complete filter expression, it needs an outer set of square brackets, like `[tag[Contact]]`.\",\"created\":\"20201230163350480\",\"modified\":\"20210409152402448\",\"origin\":\"Using Filter Expressions\",\"qtype\":\"rememberq\",\"question\":\"Why does the filter expression `tag[Contact]` not work?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230163426864\":{\"title\":\"Ta:20201230163426864\",\"answer\":\"The //Filter// tab of Advanced Search.\",\"created\":\"20201230163428701\",\"modified\":\"20210409152405956\",\"origin\":\"Using Filter Expressions\",\"qtype\":\"rememberq\",\"question\":\"In what part of TiddlyWiki's interface can you quickly test a filter expression?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230163510268\":{\"title\":\"Ta:20201230163510268\",\"answer\":\"Ctrl+Shift+A\",\"created\":\"20201230163511287\",\"modified\":\"20210502174054995\",\"origin\":\"Using Filter Expressions\",\"qtype\":\"rememberq\",\"question\":\"What is the keyboard shortcut to open Advanced Search?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230163559681\":{\"title\":\"Ta:20201230163559681\",\"answer\":\"You forgot the outermost pair of square brackets in your filter expression.\",\"created\":\"20201230163601291\",\"modified\":\"20210409152446159\",\"origin\":\"Using Filter Expressions\",\"qtype\":\"rememberq\",\"question\":\"What is the most common cause of the error message //Filter error: Missing [ in filter expression//?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230205202610\":{\"title\":\"Ta:20201230205202610\",\"answer\":\"An operator, a suffix, and a parameter.\",\"created\":\"20201230205203754\",\"modified\":\"20210409161704704\",\"origin\":\"Anatomy of Filter Steps\",\"qtype\":\"rememberq\",\"question\":\"What three components make up a filter step?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230205236409\":{\"title\":\"Ta:20201230205236409\",\"answer\":\"`field`\",\"created\":\"20201230205238685\",\"modified\":\"20210409161710002\",\"origin\":\"Anatomy of Filter Steps\",\"qtype\":\"rememberq\",\"question\":\"In the filter step `field:participants[Jane]`, what is the //operator//?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230205247649\":{\"title\":\"Ta:20201230205247649\",\"answer\":\"`participants`\",\"created\":\"20201230205249605\",\"modified\":\"20210409161712058\",\"origin\":\"Anatomy of Filter Steps\",\"qtype\":\"rememberq\",\"question\":\"In the filter step `field:participants[Jane]`, what is the //suffix//?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230205258398\":{\"title\":\"Ta:20201230205258398\",\"answer\":\"`Jane`\",\"created\":\"20201230205259591\",\"modified\":\"20210409161713518\",\"origin\":\"Anatomy of Filter Steps\",\"qtype\":\"rememberq\",\"question\":\"In the filter step `field:participants[Jane]`, what is the //parameter//?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230205710487\":{\"title\":\"Ta:20201230205710487\",\"answer\":\"All (non-shadow) tiddlers in the wiki.\",\"created\":\"20201230205717399\",\"modified\":\"20210409161718488\",\"origin\":\"Anatomy of Filter Steps\",\"qtype\":\"rememberq\",\"question\":\"What are the input tiddlers to the filter step `tag[Person]` in the filter run `[tag[Person]]`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230210715030\":{\"title\":\"Ta:20201230210715030\",\"created\":\"20201230210717023\",\"modified\":\"20210409161720462\",\"origin\":\"Anatomy of Filter Steps\",\"qtype\":\"remembercz\",\"question\":\"A filter operator that ignores its input is called a {constructor}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230213137879\":{\"title\":\"Ta:20201230213137879\",\"answer\":\"`!`\",\"created\":\"20201230213139759\",\"modified\":\"20210418131744606\",\"origin\":\"Anatomy of Filter Steps\",\"qtype\":\"rememberq\",\"question\":\"What character can you place before a filter operator to negate its meaning?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230213236939\":{\"title\":\"Ta:20201230213236939\",\"answer\":\"The first run returns all tiddlers that //are// system tiddlers; the second run returns all tiddlers that are //not// system tiddlers.\",\"created\":\"20201230213240799\",\"modified\":\"20210409161727539\",\"origin\":\"Anatomy of Filter Steps\",\"qtype\":\"rememberq\",\"question\":\"How do the results of the filter runs `[is[system]]` and `[!is[system]]` differ?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230213542739\":{\"title\":\"Ta:20201230213542739\",\"answer\":\"All of the (non-shadow) tiddlers in the wiki.\",\"created\":\"20201230213543900\",\"modified\":\"20210409161733822\",\"origin\":\"Anatomy of Filter Steps\",\"qtype\":\"rememberq\",\"question\":\"If a filter run does not begin with a constructor, what are the input tiddlers of the first step in the run?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230213928787\":{\"title\":\"Ta:20201230213928787\",\"answer\":\"The suffix is silently ignored.\",\"created\":\"20201230213930371\",\"modified\":\"20210409161738792\",\"origin\":\"Anatomy of Filter Steps\",\"qtype\":\"rememberq\",\"question\":\"What happens if you add a suffix to a filter operator that doesn't support suffixes?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230234621972\":{\"title\":\"Ta:20201230234621972\",\"answer\":\"All tiddlers in the wiki that are tagged with both `NeedsUpdate` and `Person`.\",\"created\":\"20201230234625127\",\"modified\":\"20210409161746568\",\"origin\":\"Anatomy of Filter Steps\",\"qtype\":\"rememberq\",\"question\":\"What are the output tiddlers to the filter step `tag[Person]` in the filter run `[tag[NeedsUpdate]tag[Person]]`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230234833903\":{\"title\":\"Ta:20201230234833903\",\"answer\":\"`backlinks[]`\",\"created\":\"20201230234834948\",\"modified\":\"20210409165356187\",\"origin\":\"Common Filter Operators\",\"qtype\":\"rememberq\",\"question\":\"What filter operator outputs all the tiddlers that link to its input tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230234852880\":{\"title\":\"Ta:20201230234852880\",\"answer\":\"`links[]`\",\"created\":\"20201230234854277\",\"modified\":\"20210409165359148\",\"origin\":\"Common Filter Operators\",\"qtype\":\"rememberq\",\"question\":\"What filter operator outputs all the tiddlers that are linked within the `text` field of its input tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230234929251\":{\"title\":\"Ta:20201230234929251\",\"answer\":\"`tagging[]`\",\"created\":\"20201230234930237\",\"modified\":\"20210418131718689\",\"origin\":\"Common Filter Operators\",\"qtype\":\"rememberq\",\"question\":\"What filter operator outputs all tiddlers in the wiki that are //tagged by// one of its input tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230235140455\":{\"title\":\"Ta:20201230235140455\",\"answer\":\"`firstname[Margaret]`, or `field:firstname[Margaret]`\",\"created\":\"20201230235146110\",\"modified\":\"20210409165407469\",\"origin\":\"Common Filter Operators\",\"qtype\":\"rememberq\",\"question\":\"Write a filter step that finds all tiddlers which have a field `firstname` set to the exact value `Margaret`.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230235250718\":{\"title\":\"Ta:20201230235250718\",\"answer\":\"`field:has[money]` (The short form `has[money]` doesn't work, because `has` is a built-in filter operator; this keeps only tiddlers that have a non-empty field called `money`.)\",\"created\":\"20201230235255697\",\"modified\":\"20210409165425911\",\"origin\":\"Common Filter Operators\",\"qtype\":\"rememberq\",\"question\":\"Write a filter step that finds all tiddlers which have a field `has` set to the exact value `money`.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230235432908\":{\"title\":\"Ta:20201230235432908\",\"answer\":\"`contains:family[Tom Swift]`\",\"created\":\"20201230235434408\",\"modified\":\"20210409165434142\",\"origin\":\"Common Filter Operators\",\"qtype\":\"rememberq\",\"question\":\"Write a filter step that finds all tiddlers which have a list field `family` containing the tiddler `Tom Swift` (and possibly other tiddlers).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230235622890\":{\"title\":\"Ta:20201230235622890\",\"answer\":\"`[!has[caption]count[]]`\",\"created\":\"20201230235624237\",\"modified\":\"20210606024942222\",\"origin\":\"Common Filter Operators\",\"qtype\":\"rememberq\",\"question\":\"Write a filter expression that finds the number of tiddlers in the wiki which do //not// have a field called `caption`, or have no text in it.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230235717132\":{\"title\":\"Ta:20201230235717132\",\"answer\":\"`[tag[Contact]sort[email]]`\",\"created\":\"20201230235719487\",\"modified\":\"20210409165449594\",\"origin\":\"Common Filter Operators\",\"qtype\":\"rememberq\",\"question\":\"Write a filter expression that outputs all tiddlers with the `Contact` tag, sorted alphabetically by their `email` field.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201230235837017\":{\"title\":\"Ta:20201230235837017\",\"answer\":\"`[[Awesome Tiddler]get[description]]` (or the long form, `[title[Awesome Tiddler]get[description]]`)\",\"created\":\"20201230235838368\",\"modified\":\"20210409165544862\",\"origin\":\"Common Filter Operators\",\"qtype\":\"rememberq\",\"question\":\"Write a filter expression with two steps that outputs the value of the `description` field on the tiddler named `Awesome Tiddler`.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231000114392\":{\"title\":\"Ta:20201231000114392\",\"created\":\"20201231000116390\",\"modified\":\"20210409171618308\",\"origin\":\"HTML\",\"qtype\":\"remembercz\",\"question\":\"{HTML} is a formatting language that underlies all web pages and a substantial number of desktop and mobile applications.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231000140638\":{\"title\":\"Ta:20201231000140638\",\"created\":\"20201231000143583\",\"modified\":\"20210409171619838\",\"origin\":\"HTML\",\"qtype\":\"remembercz\",\"question\":\"Wikitext is almost a perfect {superset} of HTML (mathematics term).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231000237015\":{\"title\":\"Ta:20201231000237015\",\"answer\":\"Wikitext is much less verbose, so it is faster to type and easier to work with.\",\"created\":\"20201231000238971\",\"modified\":\"20210409171622300\",\"origin\":\"HTML\",\"qtype\":\"rememberq\",\"question\":\"Why do we usually use wikitext instead of HTML to write tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231000307047\":{\"title\":\"Ta:20201231000307047\",\"created\":\"20201231000308534\",\"modified\":\"20210409171624612\",\"origin\":\"HTML\",\"qtype\":\"remembercz\",\"question\":\"The strings of text `<ul>` and `</li>` are examples of HTML {tag}s.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231000355989\":{\"title\":\"Ta:20201231000355989\",\"answer\":\"A closing tag has a forward slash (`/`) before the tag name.\",\"created\":\"20201231000402212\",\"modified\":\"20210409171628866\",\"origin\":\"HTML\",\"qtype\":\"rememberq\",\"question\":\"In HTML, what differentiates the syntax of an opening tag from that of a closing tag?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231000425840\":{\"title\":\"Ta:20201231000425840\",\"answer\":\"The first is a forward slash. The second is a backslash.\",\"created\":\"20201231000426933\",\"modified\":\"20210409171632225\",\"origin\":\"HTML\",\"qtype\":\"rememberq\",\"question\":\"Which of the following characters is a backslash, and which is a forward slash? `/` `\\\\`\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231000459394\":{\"title\":\"Ta:20201231000459394\",\"answer\":\"Angle brackets.\",\"created\":\"20201231000500589\",\"modified\":\"20210409171634161\",\"origin\":\"HTML\",\"qtype\":\"rememberq\",\"question\":\"In the context of HTML tags, what are the characters `<` and `>` collectively called?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231000531994\":{\"title\":\"Ta:20201231000531994\",\"created\":\"20201231000533307\",\"modified\":\"20210409171637271\",\"origin\":\"HTML\",\"qtype\":\"remembercz\",\"question\":\"The part of an HTML document between an opening tag and its matching closing tag, including the tags themselves, is called a/n {element}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231000601245\":{\"title\":\"Ta:20201231000601245\",\"created\":\"20201231000603398\",\"modified\":\"20210409171639967\",\"origin\":\"HTML\",\"qtype\":\"remembercz\",\"question\":\"The part of an HTML document between an opening tag and its matching closing tag, //not// including the tags, is called the element's {content} (starts with C).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231000723998\":{\"title\":\"Ta:20201231000723998\",\"answer\":\"E.g., `<li>`, `</ul>`, `<br>`, `<img>`, `</p>`\",\"created\":\"20201231000725371\",\"modified\":\"20210817221842301\",\"origin\":\"HTML\",\"qtype\":\"rememberq\",\"question\":\"Give an example of an HTML tag (try to pick a new one).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231000803648\":{\"title\":\"Ta:20201231000803648\",\"answer\":\"An attribute.\",\"created\":\"20201231000805490\",\"modified\":\"20210409171653277\",\"origin\":\"HTML\",\"qtype\":\"rememberq\",\"question\":\"In the HTML element `<div style=\\\"text-align: center;\\\">Centered text!</div>`, what is the `style=\\\"text-align: center;\\\"` part called?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231000856730\":{\"title\":\"Ta:20201231000856730\",\"answer\":\"A space.\",\"created\":\"20201231000900234\",\"modified\":\"20210409171700461\",\"origin\":\"HTML\",\"qtype\":\"rememberq\",\"question\":\"Multiple HTML attributes on a single element are separated by what character of punctuation?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231000938714\":{\"title\":\"Ta:20201231000938714\",\"answer\":\"The value contains spaces or special characters.\",\"created\":\"20201231000939852\",\"modified\":\"20210409171704151\",\"origin\":\"HTML\",\"qtype\":\"rememberq\",\"question\":\"The values of HTML attributes must be placed within quotation marks when what is true?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231001012979\":{\"title\":\"Ta:20201231001012979\",\"answer\":\"Its opening tag.\",\"created\":\"20201231001014237\",\"modified\":\"20210409171706177\",\"origin\":\"HTML\",\"qtype\":\"rememberq\",\"question\":\"An attribute of an HTML element is found within what part of the element?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231001054308\":{\"title\":\"Ta:20201231001054308\",\"answer\":\"`<li></li>`\",\"created\":\"20201231001057693\",\"modified\":\"20210409171708623\",\"origin\":\"HTML\",\"qtype\":\"rememberq\",\"question\":\"The self-closing tag `<li />` is shorthand for what HTML?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231001143084\":{\"title\":\"Ta:20201231001143084\",\"answer\":\"There is a forward slash at the end of the opening tag, and no closing tag at all: `<tag />`\",\"created\":\"20201231001144780\",\"modified\":\"20210409171711532\",\"origin\":\"HTML\",\"qtype\":\"rememberq\",\"question\":\"In HTML, what syntax distinguishes a //self-closing tag// from a normal one?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231001229646\":{\"title\":\"Ta:20201231001229646\",\"created\":\"20201231001236890\",\"modified\":\"20210409171715214\",\"origin\":\"HTML\",\"qtype\":\"remembercz\",\"question\":\"In HTML, a //void element// is one that has only a/n {c1::opening tag} and no {c1::closing tag}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231001318622\":{\"title\":\"Ta:20201231001318622\",\"answer\":\"The closing tag literally appears in the rendered output of the tiddler, like `</br>`.\",\"created\":\"20201231001320771\",\"modified\":\"20210409171720705\",\"origin\":\"HTML\",\"qtype\":\"rememberq\",\"question\":\"What happens if you use a closing tag for an HTML void element within a tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231001355790\":{\"title\":\"Ta:20201231001355790\",\"created\":\"20201231001356852\",\"modified\":\"20210409171723147\",\"origin\":\"HTML\",\"qtype\":\"remembercz\",\"question\":\"An HTML element placed inside another HTML element is said to be {nested} within the outer HTML element.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231001601903\":{\"title\":\"Ta:20201231001601903\",\"answer\":\"They are treated the same as a single space.\",\"created\":\"20201231001603282\",\"modified\":\"20210409171726531\",\"origin\":\"HTML\",\"qtype\":\"rememberq\",\"question\":\"In HTML, what special thing happens if you put multiple spaces or newlines in a row?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231001628667\":{\"title\":\"Ta:20201231001628667\",\"answer\":\"More than one newline in a row starts a new paragraph.\",\"created\":\"20201231001633860\",\"modified\":\"20210409171729533\",\"origin\":\"HTML\",\"qtype\":\"rememberq\",\"question\":\"What exception does TiddlyWiki add to the standard rules of HTML whitespace?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231001731208\":{\"title\":\"Ta:20201231001731208\",\"created\":\"20201231001732871\",\"modified\":\"20210409171734883\",\"origin\":\"HTML\",\"qtype\":\"remembercz\",\"question\":\"Tools that read HTML try to be {generous} in what they accept (philosophy for handling mistakes).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231002107146\":{\"title\":\"Ta:20201231002107146\",\"answer\":\"The names of widget elements begin with a dollar sign (`$`), like `<$list>` or `<$link>`.\",\"created\":\"20201231002109497\",\"modified\":\"20210521202545528\",\"origin\":\"Widgets\",\"qtype\":\"rememberq\",\"question\":\"How can widgets be distinguished from HTML tags in wikitext?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231002126678\":{\"title\":\"Ta:20201231002126678\",\"answer\":\"HTML\",\"created\":\"20201231002128224\",\"modified\":\"20210409171831089\",\"origin\":\"Widgets\",\"qtype\":\"rememberq\",\"question\":\"Widgets are a TiddlyWiki extension to what language?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231002329965\":{\"title\":\"Ta:20201231002329965\",\"created\":\"20201231002331187\",\"modified\":\"20210409173100473\",\"origin\":\"Your First Dynamic List\",\"qtype\":\"remembercz\",\"question\":\"Dynamic lists use a {filter} (TiddlyWiki concept) to decide what items to include in the list.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231002445816\":{\"title\":\"Ta:20201231002445816\",\"answer\":\"The `$list` widget.\",\"created\":\"20201231002447038\",\"modified\":\"20210409173104856\",\"origin\":\"Your First Dynamic List\",\"qtype\":\"rememberq\",\"question\":\"What widget would you use to sequentially display each of the outputs of a filter?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231002544545\":{\"title\":\"Ta:20201231002544545\",\"answer\":\"`<<currentTiddler>>`\",\"created\":\"20201231002546410\",\"modified\":\"20210409173106630\",\"origin\":\"Your First Dynamic List\",\"qtype\":\"rememberq\",\"question\":\"Within the content of a `$list` widget, what placeholder represents the output of the filter that is currently being processed (by default)?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231002722578\":{\"title\":\"Ta:20201231002722578\",\"answer\":\"`<br>` (Note that `<br>` is a void tag, so it does not have a matching closing tag.)\",\"created\":\"20201231002723798\",\"modified\":\"20210409173110342\",\"origin\":\"Your First Dynamic List\",\"qtype\":\"rememberq\",\"question\":\"In HTML, what tag can you use to create an explicit line break?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231002959090\":{\"title\":\"Ta:20201231002959090\",\"answer\":\"E.g., listing all tiddlers with a specific tag, displaying the sections in the //More// tab of the sidebar, showing all to-do items whose start date is after today\",\"created\":\"20201231003001255\",\"modified\":\"20210418132016314\",\"origin\":\"Your First Dynamic List\",\"qtype\":\"rememberq\",\"question\":\"Give an example of a situation in which you might want to create a dynamic list of tiddlers (try to pick a new one).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231003941730\":{\"title\":\"Ta:20201231003941730\",\"created\":\"20201231003942795\",\"modified\":\"20210409192650074\",\"origin\":\"Variables\",\"qtype\":\"remembercz\",\"question\":\"Both macros and variables are ways to define some wikitext in {c1::one} place and use it in {c1::many places}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231004010457\":{\"title\":\"Ta:20201231004010457\",\"answer\":\"A name and a value.\",\"created\":\"20201231004011806\",\"modified\":\"20210409192652145\",\"origin\":\"Variables\",\"qtype\":\"rememberq\",\"question\":\"A variable has what two parts?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231004046232\":{\"title\":\"Ta:20201231004046232\",\"answer\":\"The `$set` widget.\",\"created\":\"20201231004049739\",\"modified\":\"20210409192654547\",\"origin\":\"Variables\",\"qtype\":\"rememberq\",\"question\":\"What widget do you use to set a single variable to an arbitrary value?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231004133545\":{\"title\":\"Ta:20201231004133545\",\"answer\":\"After the closing `</$set>` tag.\",\"created\":\"20201231004134568\",\"modified\":\"20210418131858182\",\"origin\":\"Variables\",\"qtype\":\"rememberq\",\"question\":\"When you define a variable using the `$set` widget, the variable's value ceases to be accessible at what point in your wikitext?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231004216217\":{\"title\":\"Ta:20201231004216217\",\"created\":\"20201231004217204\",\"modified\":\"20210409192705016\",\"origin\":\"Variables\",\"qtype\":\"remembercz\",\"question\":\"When a variable ceases to be accessible at a closing `</$set>` tag, the variable is said to have gone {out of scope}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231004539860\":{\"title\":\"Ta:20201231004539860\",\"answer\":\"`<<myvar>>`\",\"created\":\"20201231004541137\",\"modified\":\"20210409192722422\",\"origin\":\"Variables\",\"qtype\":\"rememberq\",\"question\":\"What is the wikitext syntax to refer to the value of a variable named `myvar`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231004651266\":{\"title\":\"Ta:20201231004651266\",\"answer\":\"If you have to change the value, you only have to change it in one place.\",\"created\":\"20201231004654224\",\"modified\":\"20210418131901487\",\"origin\":\"Variables\",\"qtype\":\"rememberq\",\"question\":\"What is the primary benefit of shortening repetitive wikitext using variables or macros, compared to copying and pasting the wikitext?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231004826336\":{\"title\":\"Ta:20201231004826336\",\"answer\":\"The space.\",\"created\":\"20201231004828322\",\"modified\":\"20210409192729159\",\"origin\":\"Variables\",\"qtype\":\"rememberq\",\"question\":\"Variable names cannot contain what common character of text?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231004933477\":{\"title\":\"Ta:20201231004933477\",\"answer\":\"The variable reference evaluates to nothing (nothing at all is displayed where you place the reference).\",\"created\":\"20201231004934903\",\"modified\":\"20210418131844230\",\"origin\":\"Variables\",\"qtype\":\"rememberq\",\"question\":\"What happens if you refer to a variable that does not exist with wikitext like `<<nonexistentVariable>>`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231005144733\":{\"title\":\"Ta:20201231005144733\",\"created\":\"20201231005147234\",\"modified\":\"20210418131841285\",\"origin\":\"Macros\",\"qtype\":\"remembercz\",\"question\":\"Macros, unlike variables, allow you to eliminate repetitive text where each occurrence of the repetitive text has some elements that {are different}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231005245149\":{\"title\":\"Ta:20201231005245149\",\"created\":\"20201231005246431\",\"modified\":\"20210409193534342\",\"origin\":\"Macros\",\"qtype\":\"remembercz\",\"question\":\"The parts of a macro's output that change depending on how the macro is called are known as {c1::parameters} or {c1::arguments}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231005359085\":{\"title\":\"Ta:20201231005359085\",\"answer\":\"A backslash, as in `\\\\define`.\",\"created\":\"20201231005400138\",\"modified\":\"20210409193536590\",\"origin\":\"Macros\",\"qtype\":\"rememberq\",\"question\":\"A macro definition begins with what character of punctuation?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231005417476\":{\"title\":\"Ta:20201231005417476\",\"created\":\"20201231005419435\",\"modified\":\"20210409193538135\",\"origin\":\"Macros\",\"qtype\":\"remembercz\",\"question\":\"Using a macro is referred to as {calling} or {invoking} it.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231005510236\":{\"title\":\"Ta:20201231005510236\",\"created\":\"20201231005511252\",\"modified\":\"20210409193539828\",\"origin\":\"Macros\",\"qtype\":\"remembercz\",\"question\":\"The process of TiddlyWiki handling a call to a macro is called macro {expansion}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231005612226\":{\"title\":\"Ta:20201231005612226\",\"answer\":\"`<<wikipediaLink Aardvark>>` (quotation marks around the value `Aardvark` are optional, since it contains no spaces)\",\"created\":\"20201231005613768\",\"modified\":\"20210418131939440\",\"origin\":\"Macros\",\"qtype\":\"rememberq\",\"question\":\"What is the wikitext syntax to call the macro `wikipediaLink` with the single parameter `Aardvark`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231005732263\":{\"title\":\"Ta:20201231005732263\",\"created\":\"20201231005733763\",\"modified\":\"20210418131936414\",\"origin\":\"Macros\",\"qtype\":\"remembercz\",\"question\":\"In TiddlyWiki, a declaration beginning with a backslash at the beginning of a tiddler that explains how TiddlyWiki should read the rest of the tiddler is called a {pragma}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231005812772\":{\"title\":\"Ta:20201231005812772\",\"created\":\"20201231005815791\",\"modified\":\"20210409193610654\",\"origin\":\"Macros\",\"qtype\":\"remembercz\",\"question\":\"In `\\\\define wikipediaLink(articleName)`, the part `(articleName)` is called the {parameter list} of the macro.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231010010889\":{\"title\":\"Ta:20201231010010889\",\"answer\":\"With the text `\\\\end` on a separate line.\",\"created\":\"20201231010012028\",\"modified\":\"20210409193613036\",\"origin\":\"Macros\",\"qtype\":\"rememberq\",\"question\":\"A macro definition that is more than one line long must be ended how?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231010504984\":{\"title\":\"Ta:20201231010504984\",\"answer\":\"As with a variable, nothing is present in the output where the wikitext referring to the macro was.\",\"created\":\"20201231010507567\",\"modified\":\"20210418131916132\",\"origin\":\"Macros\",\"qtype\":\"rememberq\",\"question\":\"What happens if you call a macro that doesn't exist?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231010546414\":{\"title\":\"Ta:20201231010546414\",\"answer\":\"All pragmas must come at the top of a tiddler, before anything that is not a pragma.\",\"created\":\"20201231010548664\",\"modified\":\"20210409193832146\",\"origin\":\"Macros\",\"qtype\":\"rememberq\",\"question\":\"What restriction is placed on the location of pragmas, such as `\\\\define`, within a tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231010627310\":{\"title\":\"Ta:20201231010627310\",\"answer\":\"That macro definitions must come before all other text in the tiddler.\",\"created\":\"20201231010628288\",\"modified\":\"20210409193851689\",\"origin\":\"Macros\",\"qtype\":\"rememberq\",\"question\":\"If you write a macro definition and the definition literally appears in the output (i.e., you see `\\\\define something` in the rendered tiddler), what did you probably forget?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231012245335\":{\"title\":\"Ta:20201231012245335\",\"created\":\"20201231012246842\",\"modified\":\"20210409192738162\",\"origin\":\"Variables\",\"qtype\":\"remembercz\",\"question\":\"The two attributes used in the most basic form of the `$set` widget are {c1::`name`} and {c1::`value`}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231035841287\":{\"title\":\"Ta:20201231035841287\",\"answer\":\"At the end of that tiddler.\",\"created\":\"20201231035843620\",\"modified\":\"20210409195450696\",\"origin\":\"The Finer Points of Macros\",\"qtype\":\"rememberq\",\"question\":\"When does a macro defined at the top of a tiddler go out of scope?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231035927292\":{\"title\":\"Ta:20201231035927292\",\"answer\":\"`\\\\define myMacro()`\",\"created\":\"20201231035928615\",\"modified\":\"20210409195456151\",\"origin\":\"The Finer Points of Macros\",\"qtype\":\"rememberq\",\"question\":\"What is the wikitext syntax to define a macro `myMacro` with no parameters?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231040040541\":{\"title\":\"Ta:20201231040040541\",\"answer\":\"`\\\\define myMacro(a, b, c)`\",\"created\":\"20201231040041862\",\"modified\":\"20210409195459234\",\"origin\":\"The Finer Points of Macros\",\"qtype\":\"rememberq\",\"question\":\"What is the wikitext syntax to define a macro `myMacro` with three parameters, `a`, `b`, and `c`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231040154144\":{\"title\":\"Ta:20201231040154144\",\"answer\":\"`<<myMacro Aardvark \\\"Blue Baboon\\\">>`\",\"created\":\"20201231040155621\",\"modified\":\"20210409195503013\",\"origin\":\"The Finer Points of Macros\",\"qtype\":\"rememberq\",\"question\":\"What is the wikitext syntax to call a macro `myMacro` with two parameters, `Aardvark` and `Blue Baboon`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231040243184\":{\"title\":\"Ta:20201231040243184\",\"answer\":\"Place the parameter in triple double-quotes: `<<macroname \\\"\\\"\\\"the parameter \\\"containing\\\" quotes\\\"\\\"\\\">>`\",\"created\":\"20201231040248490\",\"modified\":\"20210606030905555\",\"origin\":\"The Finer Points of Macros\",\"qtype\":\"rememberq\",\"question\":\"What is the simplest way to pass a parameter whose value contains double quotes to a macro?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231040441260\":{\"title\":\"Ta:20201231040441260\",\"answer\":\"`<<myMacro y:\\\"2\\\" x:\\\"1\\\">>`\",\"created\":\"20201231040442487\",\"modified\":\"20210409195516276\",\"origin\":\"The Finer Points of Macros\",\"qtype\":\"rememberq\",\"question\":\"Given a macro defined with `\\\\define myMacro(x, y)`, how can you use a double-angle-bracket macro call `<<myMacro>>` with x=\\\"1\\\" and y=\\\"2\\\", placing the parameter `y` //first// in the macro call?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231040546593\":{\"title\":\"Ta:20201231040546593\",\"answer\":\"`\\\\define coloredText(text, color:\\\"red\\\")`\",\"created\":\"20201231040554973\",\"modified\":\"20210409195527271\",\"origin\":\"The Finer Points of Macros\",\"qtype\":\"rememberq\",\"question\":\"How would you change the following macro definition to supply a default value `red` for the parameter `color`?: `\\\\define coloredText(text, color)`\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231040746846\":{\"title\":\"Ta:20201231040746846\",\"answer\":\"The `$macrocall` widget.\",\"created\":\"20201231040747801\",\"modified\":\"20210409195537283\",\"origin\":\"The Finer Points of Macros\",\"qtype\":\"rememberq\",\"question\":\"What widget can be used to call a macro?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231040803697\":{\"title\":\"Ta:20201231040803697\",\"answer\":\"`$name` (note the dollar sign)\",\"created\":\"20201231040804979\",\"modified\":\"20210409195539985\",\"origin\":\"The Finer Points of Macros\",\"qtype\":\"rememberq\",\"question\":\"What attribute of the `$macrocall` widget is used to supply the name of the macro to call?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231040925049\":{\"title\":\"Ta:20201231040925049\",\"answer\":\"`<$macrocall $name=\\\"wikipediaLink\\\" name=\\\"Aardvark\\\" />`\",\"created\":\"20201231040927890\",\"modified\":\"20210409195600416\",\"origin\":\"The Finer Points of Macros\",\"qtype\":\"rememberq\",\"question\":\"Use a `$macrocall` widget to achieve the same effect as the following wikitext: `<<wikipediaLink name:\\\"Aardvark\\\">>`\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231041222739\":{\"title\":\"Ta:20201231041222739\",\"answer\":\"The `name` attribute needs a dollar sign, `$name`, to distinguish it from a macro parameter called `name`.\",\"created\":\"20201231041224734\",\"modified\":\"20210409195608566\",\"origin\":\"The Finer Points of Macros\",\"qtype\":\"rememberq\",\"question\":\"What is wrong with this macro call?: `<$macrocall name=wikipediaLink articleTitle=\\\"Philosophy\\\"/>`\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231041935247\":{\"title\":\"Ta:20201231041935247\",\"answer\":\"There is no `/` before the `>`, so the remainder of the tiddler [[will be gobbled up|Ex:UnclosedMacroCall]].\",\"created\":\"20201231041937385\",\"modified\":\"20210409195614887\",\"origin\":\"The Finer Points of Macros\",\"qtype\":\"rememberq\",\"question\":\"What is wrong with this macro call?: `<$macrocall $name=wikipediaLink articleTitle=\\\"Philosophy\\\">`\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231042152289\":{\"title\":\"Ta:20201231042152289\",\"answer\":\"If you need to pass other variables, macro calls, or transclusions as the value of some of the parameters.\",\"created\":\"20201231042153726\",\"modified\":\"20210418131703645\",\"origin\":\"The Finer Points of Macros\",\"qtype\":\"rememberq\",\"question\":\"When would you need to use a `$macrocall` widget rather than the `<<double-angle-bracket>>` wikitext syntax?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231183319773\":{\"title\":\"Ta:20201231183319773\",\"created\":\"20201231183321606\",\"modified\":\"20210409201535886\",\"origin\":\"Transclusions\",\"qtype\":\"remembercz\",\"question\":\"The value of a transclusion comes from a specified {field} of a tiddler.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231183458802\":{\"title\":\"Ta:20201231183458802\",\"answer\":\"`{{Book 2!!author}}`\",\"created\":\"20201231183501395\",\"modified\":\"20210409201550297\",\"origin\":\"Transclusions\",\"qtype\":\"rememberq\",\"question\":\"What wikitext syntax would you use to transclude the contents of the `author` field of the `Book 2` tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231183519255\":{\"title\":\"Ta:20201231183519255\",\"answer\":\"`{{!!description}}`\",\"created\":\"20201231183520841\",\"modified\":\"20210409201552593\",\"origin\":\"Transclusions\",\"qtype\":\"rememberq\",\"question\":\"What wikitext syntax would you use to transclude the `description` field of the current tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231183659048\":{\"title\":\"Ta:20201231183659048\",\"answer\":\"`text`\",\"created\":\"20201231183700864\",\"modified\":\"20210409201554247\",\"origin\":\"Transclusions\",\"qtype\":\"rememberq\",\"question\":\"When you transclude a tiddler without supplying a field name, like `{{IncludedTiddler}}`, what field is transcluded?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231183815120\":{\"title\":\"Ta:20201231183815120\",\"answer\":\"`<$macrocall $name=\\\"showRedText\\\" text={{!!warning}}/>`\",\"created\":\"20201231183816473\",\"modified\":\"20210409201602515\",\"origin\":\"Transclusions\",\"qtype\":\"rememberq\",\"question\":\"What wikitext syntax would you use to call a macro named `showRedText` with a parameter `text` set to the value of the `warning` field of the current tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231184349915\":{\"title\":\"Ta:20201231184349915\",\"answer\":\"Search looks at a tiddler's wikitext, and a transcluded tiddler is not part of the wikitext of the tiddler transcluding it.\",\"created\":\"20201231184351104\",\"modified\":\"20210409201607979\",\"origin\":\"Transclusions\",\"qtype\":\"rememberq\",\"question\":\"Why is any text behind transclusions not considered when searching the contents of tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231184452406\":{\"title\":\"Ta:20201231184452406\",\"created\":\"20201231184453729\",\"modified\":\"20210409201610635\",\"origin\":\"Transclusions\",\"qtype\":\"remembercz\",\"question\":\"A //hard link// is one that can be detected by {a superficial examination} of wikitext.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231184535007\":{\"title\":\"Ta:20201231184535007\",\"answer\":\"A hard link appears in the wikitext of a tiddler, while a soft link only appears in the tiddler when it's rendered (e.g., because it was transcluded into that tiddler).\",\"created\":\"20201231184536280\",\"modified\":\"20210409201629413\",\"origin\":\"Transclusions\",\"qtype\":\"rememberq\",\"question\":\"Explain the difference between a hard link and a soft link.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231184759654\":{\"title\":\"Ta:20201231184759654\",\"answer\":\"Using filters that inspect the relationships between tiddlers, such as `links[]`.\",\"created\":\"20201231184801879\",\"modified\":\"20210409201637414\",\"origin\":\"Transclusions\",\"qtype\":\"rememberq\",\"question\":\"A soft link does not appear when looking for links in what way?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231184943853\":{\"title\":\"Ta:20201231184943853\",\"answer\":\"Sometimes; this works fine as long as none of the tiddlers transclude one of the previous tiddlers in the stack of transcluded tiddlers, as this would form an infinite loop and TiddlyWiki would never be able to finish transcluding.\",\"created\":\"20201231184947599\",\"modified\":\"20210418132001310\",\"origin\":\"Transclusions\",\"qtype\":\"rememberq\",\"question\":\"Always/Sometimes/Never: It is OK to transclude a tiddler that itself transcludes other tiddlers.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231185141418\":{\"title\":\"Ta:20201231185141418\",\"answer\":\"You accidentally transcluded a tiddler into itself, either directly or by creating a loop (e.g., tiddler A transcludes tiddler B, while tiddler B transcludes tiddler A).\",\"created\":\"20201231185144000\",\"modified\":\"20210409201716264\",\"origin\":\"Transclusions\",\"qtype\":\"rememberq\",\"question\":\"What does the error //Recursive transclusion error in transclude widget// suggest is wrong?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231185608799\":{\"title\":\"Ta:20201231185608799\",\"answer\":\"The current tiddler is changed to `JaneDoe`, the JaneDoe tiddler is rendered, and then the current tiddler returns to its previous value (most likely `ContactList`).\",\"created\":\"20201231185612842\",\"modified\":\"20210418131909396\",\"origin\":\"Templates and the Current Tiddler\",\"qtype\":\"rememberq\",\"question\":\"What happens to the current tiddler while TiddlyWiki reads the transclusion `{{JaneDoe}}` within the tiddler `ContactList`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231185712575\":{\"title\":\"Ta:20201231185712575\",\"answer\":\"Nothing. The `||` causes TiddlyWiki to keep the current tiddler as `ContactList` while processing the transclusion.\",\"created\":\"20201231185715775\",\"modified\":\"20210418131906206\",\"origin\":\"Templates and the Current Tiddler\",\"qtype\":\"rememberq\",\"question\":\"What happens to the current tiddler while TiddlyWiki reads the transclusion `{{||JaneDoe}}` within the tiddler `ContactList`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231185753892\":{\"title\":\"Ta:20201231185753892\",\"answer\":\"The current tiddler changes to `EmilyDoe`, the `JaneDoe` tiddler is rendered, and then the current tiddler returns to `ContactList`.\",\"created\":\"20201231185755191\",\"modified\":\"20210409212720052\",\"origin\":\"Templates and the Current Tiddler\",\"qtype\":\"rememberq\",\"question\":\"What happens to the current tiddler while TiddlyWiki reads the transclusion `{{EmilyDoe||JaneDoe}}` within the tiddler `ContactList`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231185924193\":{\"title\":\"Ta:20201231185924193\",\"answer\":\"Transclude it, setting the current tiddler to a tiddler other than the template tiddler.\",\"created\":\"20201231185926952\",\"modified\":\"20210409212731076\",\"origin\":\"Templates and the Current Tiddler\",\"qtype\":\"rememberq\",\"question\":\"A tiddler is being used as a //template// when you do what with it?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231190051880\":{\"title\":\"Ta:20201231190051880\",\"answer\":\"`ContactInformationTemplate` (with `JaneDoe` as the current tiddler)\",\"created\":\"20201231190053870\",\"modified\":\"20210409212751159\",\"origin\":\"Templates and the Current Tiddler\",\"qtype\":\"rememberq\",\"question\":\"In the wikitext syntax `{{JaneDoe||ContactInformationTemplate}}`, which tiddler is being transcluded?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231190219699\":{\"title\":\"Ta:20201231190219699\",\"answer\":\"Some fields on the current tiddler.\",\"created\":\"20201231190222568\",\"modified\":\"20210409212753779\",\"origin\":\"Templates and the Current Tiddler\",\"qtype\":\"rememberq\",\"question\":\"For a template to be useful, it should transclude or refer to what?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231190320069\":{\"title\":\"Ta:20201231190320069\",\"answer\":\"Because the current tiddler is set to the template tiddler, but a template tiddler is designed to be rendered with a different current tiddler. The template tiddler likely does not have any of the fields the template was designed to refer to.\",\"created\":\"20201231190323429\",\"modified\":\"20210409212805762\",\"origin\":\"Templates and the Current Tiddler\",\"qtype\":\"rememberq\",\"question\":\"Why might a template tiddler display errors when you look at it in the story river?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231190848161\":{\"title\":\"Ta:20201231190848161\",\"answer\":\"The contents of the `$list` widget are rendered once for each output tiddler in the filter, with the current tiddler set to each output tiddler in turn.\",\"created\":\"20201231190849927\",\"modified\":\"20210409212823534\",\"origin\":\"Templates and the Current Tiddler\",\"qtype\":\"rememberq\",\"question\":\"How is the current tiddler affected by a `$list` widget?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231190945177\":{\"title\":\"Ta:20201231190945177\",\"answer\":\"`{{!!title}}`\",\"created\":\"20201231190946737\",\"modified\":\"20210409212847839\",\"origin\":\"Templates and the Current Tiddler\",\"qtype\":\"rememberq\",\"question\":\"What field transclusion is equivalent to the variable reference `<<currentTiddler>>`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231191005319\":{\"title\":\"Ta:20201231191005319\",\"answer\":\"`<<currentTiddler>>`\",\"created\":\"20201231191006419\",\"modified\":\"20210409212850132\",\"origin\":\"Templates and the Current Tiddler\",\"qtype\":\"rememberq\",\"question\":\"What variable reference is equivalent to the transclusion `{{!!title}}`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231191056981\":{\"title\":\"Ta:20201231191056981\",\"answer\":\"`variable`\",\"created\":\"20201231191058879\",\"modified\":\"20210409212926985\",\"origin\":\"Templates and the Current Tiddler\",\"qtype\":\"rememberq\",\"question\":\"What attribute of the `$list` widget causes it to place the title of the output tiddler being processed in a variable other than `currentTiddler`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231200916212\":{\"title\":\"Ta:20201231200916212\",\"answer\":\"`{{{ [tag[Contact]count[]] }}}`\",\"created\":\"20201231200917522\",\"modified\":\"20210409220054251\",\"origin\":\"Filters and Transclusions\",\"qtype\":\"rememberq\",\"question\":\"What is the wikitext syntax to transclude the result of the filter `[tag[Contact]count[]]`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231201207111\":{\"title\":\"Ta:20201231201207111\",\"answer\":\"`{{{ [[LinkBonanza]links[]count[]] }}}`\",\"created\":\"20201231201209935\",\"modified\":\"20210409220100956\",\"origin\":\"Filters and Transclusions\",\"qtype\":\"rememberq\",\"question\":\"Write a filter transclusion to display the number of links to unique tiddlers contained in the tiddler `LinkBonanza`.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231201250343\":{\"title\":\"Ta:20201231201250343\",\"answer\":\"The `$text` widget.\",\"created\":\"20201231201251467\",\"modified\":\"20210409220104772\",\"origin\":\"Filters and Transclusions\",\"qtype\":\"rememberq\",\"question\":\"What widget can be used to prevent the result of a filter transclusion from becoming a link?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231201436093\":{\"title\":\"Ta:20201231201436093\",\"answer\":\"`There are <$text text={{{ [count[]] }}}/> non-shadow tiddlers in this wiki.`\",\"created\":\"20201231201437800\",\"modified\":\"20210409220111795\",\"origin\":\"Filters and Transclusions\",\"qtype\":\"rememberq\",\"question\":\"Add a `$text` widget to the following line so the result of the filter isn't a link: `There are {{{ [count[]] }}} non-shadow tiddlers in this wiki.`\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231201716263\":{\"title\":\"Ta:20201231201716263\",\"answer\":\"`[parent{!!title}]`\",\"created\":\"20201231201718070\",\"modified\":\"20210409220119359\",\"origin\":\"Filters and Transclusions\",\"qtype\":\"rememberq\",\"question\":\"Write a filter to find all tiddlers whose `parent` field is set to the title of the current tiddler. Use a field transclusion.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231201742553\":{\"title\":\"Ta:20201231201742553\",\"answer\":\"`[parent<currentTiddler>]`\",\"created\":\"20201231201743734\",\"modified\":\"20210409220121472\",\"origin\":\"Filters and Transclusions\",\"qtype\":\"rememberq\",\"question\":\"Write a filter to find all tiddlers whose `parent` field is set to the title of the current tiddler. Use a variable reference.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231201927944\":{\"title\":\"Ta:20201231201927944\",\"answer\":\"`<<list-links \\\"myfilter\\\">>`\",\"created\":\"20201231201929127\",\"modified\":\"20210409220125376\",\"origin\":\"Filters and Transclusions\",\"qtype\":\"rememberq\",\"question\":\"What built-in macro creates a bulleted list of links to tiddlers that match a filter?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231202241809\":{\"title\":\"Ta:20201231202241809\",\"answer\":\"`addsuffix`\",\"created\":\"20201231202243008\",\"modified\":\"20210409220129105\",\"origin\":\"Filters and Transclusions\",\"qtype\":\"rememberq\",\"question\":\"What filter operator adds a string of text to the end of each of its inputs?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231202332834\":{\"title\":\"Ta:20201231202332834\",\"answer\":\"`class=\\\"tc-tiddlylink-external\\\"`\",\"created\":\"20201231202335322\",\"modified\":\"20210409220138014\",\"origin\":\"Filters and Transclusions\",\"qtype\":\"rememberq\",\"question\":\"To make an external link created with an `<a>` HTML tag look the same as one created in wikitext, what attribute must you add to the tag?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20201231202738960\":{\"title\":\"Ta:20201231202738960\",\"answer\":\"You cannot call macros with parameters within a filter.\",\"created\":\"20201231202740403\",\"modified\":\"20210409220141322\",\"origin\":\"Filters and Transclusions\",\"qtype\":\"rememberq\",\"question\":\"What is wrong with the filter `[tag[Meeting]addprefix<getPrefixForTagType \\\"Meeting\\\">]`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210101171825776\":{\"title\":\"Ta:20210101171825776\",\"created\":\"20210101171826919\",\"modified\":\"20210410141901213\",\"origin\":\"Wikification\",\"qtype\":\"remembercz\",\"question\":\"Wikification is the process of taking wikitext and turning it into {HTML} for display.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210101171953478\":{\"title\":\"Ta:20210101171953478\",\"answer\":\"Sometimes. If the `{{transclusion}}` is directly within the body of the tiddler, it will be. But if it's used as an attribute of an HTML element or widget, like `<img src={{transclusion}}>`, it won't be.\",\"created\":\"20210101171954389\",\"modified\":\"20210410141921335\",\"origin\":\"Wikification\",\"qtype\":\"rememberq\",\"question\":\"Always/Sometimes/Never: When you put a `{{transclusion}}` somewhere within the body of a tiddler, the wikitext at the other end of the transclusion will be wikified.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210101172047033\":{\"title\":\"Ta:20210101172047033\",\"answer\":\"`<img src=\\\"https://example.com/image.png\\\">` (`img` is a void element, so the tag is not closed)\",\"created\":\"20210101172048478\",\"modified\":\"20210418131657915\",\"origin\":\"Wikification\",\"qtype\":\"rememberq\",\"question\":\"In HTML, how do you display an image that's stored at the URL `https://example.com/image.png`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210101172924122\":{\"title\":\"Ta:20210101172924122\",\"answer\":\"As many times as is required to wikify all wikitext resulting from each wikification step.\",\"created\":\"20210101172925655\",\"modified\":\"20210410141938157\",\"origin\":\"Wikification\",\"qtype\":\"rememberq\",\"question\":\"When a transclusion or macro call is included directly in the body of a tiddler, how many times does TiddlyWiki try to wikify it?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210101172937494\":{\"title\":\"Ta:20210101172937494\",\"answer\":\"Exactly once.\",\"created\":\"20210101172939240\",\"modified\":\"20210410141940004\",\"origin\":\"Wikification\",\"qtype\":\"rememberq\",\"question\":\"When a transclusion or macro call is used as an HTML attribute, how many times does TiddlyWiki try to wikify it?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210101173259951\":{\"title\":\"Ta:20210101173259951\",\"answer\":\"The `$wikify` widget.\",\"created\":\"20210101173304101\",\"modified\":\"20210418131933827\",\"origin\":\"Wikification\",\"qtype\":\"rememberq\",\"question\":\"What widget can be used to wikify text and store the result in a variable, rather than waiting until it appears directly within the body of a tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210101173413520\":{\"title\":\"Ta:20210101173413520\",\"answer\":\"`<$wikify name=\\\"w\\\" text={{LotsOfWikitext}}> ...use variable here... </$wikify>`<br>(You could also put `{{LotsOfWikitext}}` in quotes. In this case, it has the same effect!)\",\"created\":\"20210101173414869\",\"modified\":\"20210410141956221\",\"origin\":\"Wikification\",\"qtype\":\"rememberq\",\"question\":\"Write a `$wikify` widget call that wikifies the `LotsOfWikitext` tiddler and places the result in a variable called `w`.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210101174948555\":{\"title\":\"Ta:20210101174948555\",\"answer\":\"`[[LinkTarget]backlinks[]]`\",\"created\":\"20210101174953282\",\"modified\":\"20210409165601636\",\"origin\":\"Common Filter Operators\",\"qtype\":\"rememberq\",\"question\":\"Write a filter expression that finds all tiddlers that link to the tiddler `LinkTarget`.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210101175137457\":{\"title\":\"Ta:20210101175137457\",\"answer\":\"Inside of a macro definition.\",\"created\":\"20210101175138769\",\"modified\":\"20210410140531903\",\"origin\":\"Using Variables in Macros\",\"qtype\":\"rememberq\",\"question\":\"You can do text substitution with `$moneyPlaceholders$` only within what context?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210101175651214\":{\"title\":\"Ta:20210101175651214\",\"answer\":\"`$(myVariable)​$`\",\"created\":\"20210101175652476\",\"modified\":\"20210410140537406\",\"origin\":\"Using Variables in Macros\",\"qtype\":\"rememberq\",\"question\":\"What is the syntax to text-substitute a variable (not a parameter) called `myVariable` in the definition of a macro?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<!--\\n\\nNote: there is a zero-width space between the ) and the `$`, because otherwise it triggers a real variable substitution somewhere in the bowels of the TiddlyRemember rendering!\\n\\n-->\\n\"},\"Ta:20210101180536591\":{\"title\":\"Ta:20210101180536591\",\"answer\":\"When using parameters, it is more obvious at the point where the macro is called what the macro is doing and what inputs it takes.\",\"created\":\"20210101180538367\",\"modified\":\"20210410140610451\",\"origin\":\"Using Variables in Macros\",\"qtype\":\"rememberq\",\"question\":\"Why is it usually preferable to pass information to macros using parameters rather than defining variables and referring to them within the macro?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210102183959975\":{\"title\":\"Ta:20210102183959975\",\"answer\":\"The tag manager.\",\"created\":\"20210102184001422\",\"modified\":\"20210410175959587\",\"origin\":\"Classifying Tags\",\"qtype\":\"rememberq\",\"question\":\"What TiddlyWiki tool allows you to customize the colors and icons of tags?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210102184138118\":{\"title\":\"Ta:20210102184138118\",\"answer\":\"`[icon[$:/core/images/tag-button]tagging[]]`\",\"created\":\"20210102184139892\",\"modified\":\"20210410180003927\",\"origin\":\"Classifying Tags\",\"qtype\":\"rememberq\",\"question\":\"Write a filter to find all tiddlers tagged with a tag that uses the icon `$:/core/images/tag-button`.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103163347118\":{\"title\":\"Ta:20210103163347118\",\"answer\":\"`list`\",\"created\":\"20210103163348597\",\"modified\":\"20210409135643224\",\"origin\":\"Ordering Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What field on each tiddler contains a special tiddler list used to order any tiddlers tagged by that tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103163502135\":{\"title\":\"Ta:20210103163502135\",\"answer\":\"When looking at a tag pill or table of contents for the tiddler T, `B` and `A` will be listed beneath it in that order.\",\"created\":\"20210103163503663\",\"modified\":\"20210409135651143\",\"origin\":\"Ordering Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"If you have a tag tiddler `T` and two tiddlers with that tag `A` and `B`, what is the effect of populating the `list` field of `T` with `B A`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103163854080\":{\"title\":\"Ta:20210103163854080\",\"answer\":\"`list-before` and `list-after`.\",\"created\":\"20210103163855379\",\"modified\":\"20210409135656550\",\"origin\":\"Ordering Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What two fields can you populate on a //tagged// tiddler `A` (rather than a //tagging// tiddler `T`) to influence where `A` comes in the list of `T`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103163935114\":{\"title\":\"Ta:20210103163935114\",\"answer\":\"If you don't want to edit the tiddler containing the list, perhaps because it is a shadow tiddler or belongs to someone else.\",\"created\":\"20210103163936808\",\"modified\":\"20210409135705174\",\"origin\":\"Ordering Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What is the primary reason you would want to use `list-before` and `list-after` rather than directly editing the `list` field of a tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103164048401\":{\"title\":\"Ta:20210103164048401\",\"answer\":\"`A D B C`\",\"created\":\"20210103164050397\",\"modified\":\"20210409135717900\",\"origin\":\"Ordering Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"Given a tag tiddler `T` with list `A B C`, and a tiddler `D` also tagged `T` with a `list-before` field set to `B`, what order do the tiddlers tagged by `T` appear in?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103164354611\":{\"title\":\"Ta:20210103164354611\",\"answer\":\"`list-links-draggable`\",\"created\":\"20210103164356273\",\"modified\":\"20210409135720041\",\"origin\":\"Ordering Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What built-in macro allows you to drag and drop tiddlers that appear in a list field of a tiddler to reorder them?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103164623372\":{\"title\":\"Ta:20210103164623372\",\"answer\":\"`<<list-links-draggable \\\"My Tiddler\\\">>`\",\"created\":\"20210103164625111\",\"modified\":\"20210409135818125\",\"origin\":\"Ordering Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"Use `list-links-draggable` (a built-in macro) to allow the `list` field on the `My Tiddler` tiddler to be reordered.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103170007475\":{\"title\":\"Ta:20210103170007475\",\"answer\":\"The value in T's `list` field is ignored and the one in A's `list-before` field is used.\",\"created\":\"20210103170008818\",\"modified\":\"20210409135829116\",\"origin\":\"Ordering Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"How does TiddlyWiki order a tagged tiddler `A` if it is listed in the tag tiddler `T`'s `list` field, but `A` also has a `list-before` field?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103170224509\":{\"title\":\"Ta:20210103170224509\",\"answer\":\"After all tiddlers that have ordering information, in alphabetical order.\",\"created\":\"20210103170225838\",\"modified\":\"20210409135834297\",\"origin\":\"Ordering Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"How does TiddlyWiki order the tagged tiddlers `A` and `B` if they are missing from the `list` field of the tag tiddler `T`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103173543224\":{\"title\":\"Ta:20210103173543224\",\"answer\":\"`tabs`\",\"created\":\"20210103173544313\",\"modified\":\"20210410192054782\",\"origin\":\"Tabs\",\"qtype\":\"rememberq\",\"question\":\"What built-in macro allows you to create a set of tabs, like those in the sidebar?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103173645450\":{\"title\":\"Ta:20210103173645450\",\"answer\":\"`tabsList`, a filter describing the tiddlers to be used as tabs, and `default`, the title of the tab that is selected by default.\",\"created\":\"20210103173646735\",\"modified\":\"20210418131811922\",\"origin\":\"Tabs\",\"qtype\":\"rememberq\",\"question\":\"What are the names and functions of the first two parameters to the `tabs` macro?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103173804424\":{\"title\":\"Ta:20210103173804424\",\"answer\":\"`class:\\\"tc-vertical\\\"`\",\"created\":\"20210103173805655\",\"modified\":\"20210410192104364\",\"origin\":\"Tabs\",\"qtype\":\"rememberq\",\"question\":\"What parameter do you add to the `tabs` macro to show tabs vertically instead of horizontally?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103173848047\":{\"title\":\"Ta:20210103173848047\",\"answer\":\"A tiddler.\",\"created\":\"20210103173849080\",\"modified\":\"20210410192113404\",\"origin\":\"Tabs\",\"qtype\":\"rememberq\",\"question\":\"What TiddlyWiki object populates each tab produced by the `tabs` macro?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103174222286\":{\"title\":\"Ta:20210103174222286\",\"answer\":\"`now`\",\"created\":\"20210103174223555\",\"modified\":\"20210418131806469\",\"origin\":\"Tabs\",\"qtype\":\"rememberq\",\"question\":\"What built-in macro allows you to get today's date?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103174256315\":{\"title\":\"Ta:20210103174256315\",\"answer\":\"Change the current tiddler to the tiddler being rendered as a tab.\",\"created\":\"20210103174257618\",\"modified\":\"20210410192120338\",\"origin\":\"Tabs\",\"qtype\":\"rememberq\",\"question\":\"When rendering each tab in a `tabs` macro call, what does TiddlyWiki unexpectedly //not// do?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103174333268\":{\"title\":\"Ta:20210103174333268\",\"answer\":\"`currentTab`\",\"created\":\"20210103174335087\",\"modified\":\"20210410192122649\",\"origin\":\"Tabs\",\"qtype\":\"rememberq\",\"question\":\"When rendering each tab in a `tabs` macro call, what variable contains the title of the tiddler being rendered?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103174719170\":{\"title\":\"Ta:20210103174719170\",\"answer\":\"Drag and drop it onto the browser window.\",\"created\":\"20210103174720050\",\"modified\":\"20210410185212068\",\"origin\":\"Images and Attachments\",\"qtype\":\"rememberq\",\"question\":\"What is the fastest way to import an image into your TiddlyWiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103174822368\":{\"title\":\"Ta:20210103174822368\",\"answer\":\"Transclude the image tiddler, like `{{image.png}}`.\",\"created\":\"20210103174824402\",\"modified\":\"20210410185214582\",\"origin\":\"Images and Attachments\",\"qtype\":\"rememberq\",\"question\":\"How can you quickly display an image that is part of your wiki within another tiddler if you don't need to adjust its size or other parameters?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103174916873\":{\"title\":\"Ta:20210103174916873\",\"answer\":\"`[img width=350 [image.png]]`\",\"created\":\"20210103174918105\",\"modified\":\"20210410185218452\",\"origin\":\"Images and Attachments\",\"qtype\":\"rememberq\",\"question\":\"What wikitext syntax would you use to display an image stored in the tiddler `image.png`, with a maximum width of 350 pixels?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103175005436\":{\"title\":\"Ta:20210103175005436\",\"answer\":\"Import the PDF into its own tiddler, then transclude that tiddler.\",\"created\":\"20210103175007009\",\"modified\":\"20210410185220397\",\"origin\":\"Images and Attachments\",\"qtype\":\"rememberq\",\"question\":\"How can you display a PDF within another tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103175033563\":{\"title\":\"Ta:20210103175033563\",\"answer\":\"It inflates the size of the file, causing backups to waste space and performance to slow down.\",\"created\":\"20210103175036531\",\"modified\":\"20210418131746732\",\"origin\":\"Images and Attachments\",\"qtype\":\"rememberq\",\"question\":\"Why is including too many images or other attachments in a single-file TiddlyWiki problematic?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103175124781\":{\"title\":\"Ta:20210103175124781\",\"answer\":\"Any that uses a folder wiki (one hosted on a Node.js webserver, where each tiddler is in a separate file).\",\"created\":\"20210103175125766\",\"modified\":\"20210410185240071\",\"origin\":\"Images and Attachments\",\"qtype\":\"rememberq\",\"question\":\"What method of hosting a TiddlyWiki does not suffer issues when many images are added to the wiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103175243272\":{\"title\":\"Ta:20210103175243272\",\"answer\":\"`[img [https://example.com/image.png]]`\",\"created\":\"20210103175244683\",\"modified\":\"20210410185254067\",\"origin\":\"Images and Attachments\",\"qtype\":\"rememberq\",\"question\":\"What wikitext syntax would you use to display an image hosted on the web at `https://example.com/image.png` within a tiddler in your wiki? (Do not make the image itself a tiddler in your wiki.)\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103175352198\":{\"title\":\"Ta:20210103175352198\",\"answer\":\"`[img [attachments/image.png]]`\",\"created\":\"20210103175354872\",\"modified\":\"20210410185300133\",\"origin\":\"Images and Attachments\",\"qtype\":\"rememberq\",\"question\":\"If you have a folder on your computer called `attachments` located in the same folder as your TiddlyWiki file, what wikitext syntax do you use to display the `image.png` image in that folder in a tiddler? (Do not make the image a tiddler in your wiki.)\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103175527476\":{\"title\":\"Ta:20210103175527476\",\"created\":\"20210103175528640\",\"modified\":\"20210410185302453\",\"origin\":\"Images and Attachments\",\"qtype\":\"remembercz\",\"question\":\"You can store a tiddler's content (such as an image) in a file outside your TiddlyWiki by setting the tiddler's {`_canonical_uri`} field to the path to that file.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103175644610\":{\"title\":\"Ta:20210103175644610\",\"answer\":\"The MIME type (//Type// dropdown) on the tiddler must be set to the correct file type.\",\"created\":\"20210103175645373\",\"modified\":\"20210410185304991\",\"origin\":\"Images and Attachments\",\"qtype\":\"rememberq\",\"question\":\"If you create a new tiddler using the `_canonical_uri` field and the content doesn't appear when you save the tiddler, but you're sure the path to the file is correct, what did you likely forget?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103175938846\":{\"title\":\"Ta:20210103175938846\",\"answer\":\"Store the images/files in a folder outside of the wiki and reference them from within the wiki.\",\"created\":\"20210103175940169\",\"modified\":\"20210418131836696\",\"origin\":\"Images and Attachments\",\"qtype\":\"rememberq\",\"question\":\"If you need to attach many images or other files to your single-file wiki, what approach should you take to avoid your wiki becoming too large?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103183826775\":{\"title\":\"Ta:20210103183826775\",\"answer\":\"\",\"created\":\"20210103183828819\",\"modified\":\"20210410193143312\",\"origin\":\"Data Tiddlers\",\"qtype\":\"remembercz\",\"question\":\"A {data} tiddler is one that stores a number of key-value pairs.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103183848688\":{\"title\":\"Ta:20210103183848688\",\"answer\":\"TiddlyWiki's built-in “dictionary” format, or JSON.\",\"created\":\"20210103183849899\",\"modified\":\"20210410193145663\",\"origin\":\"Data Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"Data tiddlers can be in what two formats?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103184048411\":{\"title\":\"Ta:20210103184048411\",\"answer\":\"E.g., the dates and names of events, the mappings for a letter substitution cipher, metadata about a wiki that needs to be editable by an external process\",\"created\":\"20210103184050547\",\"modified\":\"20210410193151247\",\"origin\":\"Data Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"Give an example of something you might choose to store in a data tiddler (try to pick a new one).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103184206621\":{\"title\":\"Ta:20210103184206621\",\"created\":\"20210103184207725\",\"modified\":\"20210410193200172\",\"origin\":\"Data Tiddlers\",\"qtype\":\"remembercz\",\"question\":\"A data tiddler's text field contains one or more {properties} (term for each item).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103184214736\":{\"title\":\"Ta:20210103184214736\",\"created\":\"20210103184215515\",\"modified\":\"20210410193202350\",\"origin\":\"Data Tiddlers\",\"qtype\":\"remembercz\",\"question\":\"In a data tiddler, the key by which the value of a property is retrieved is called a/n {index}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103184314406\":{\"title\":\"Ta:20210103184314406\",\"answer\":\"`k: v` (on a separate line)\",\"created\":\"20210103184316716\",\"modified\":\"20210410193204887\",\"origin\":\"Data Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"In a data tiddler formatted as a dictionary, how would you write the key-value pair where `k` was the key and `v` was the value?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103184418750\":{\"title\":\"Ta:20210103184418750\",\"answer\":\"They can only contain a single level of key-value pairs – no nested arrays or objects.\",\"created\":\"20210103184419927\",\"modified\":\"20210418131926511\",\"origin\":\"Data Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What limitation is placed on JSON documents being used as data tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103184459909\":{\"title\":\"Ta:20210103184459909\",\"answer\":\"Set its //Type// to `application/x-tiddler-dictionary`.\",\"created\":\"20210103184501081\",\"leechignores\":\"1\",\"modified\":\"20210410193216662\",\"origin\":\"Data Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"How do you mark a tiddler as a data tiddler of the TiddlyWiki dictionary type?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103184557434\":{\"title\":\"Ta:20210103184557434\",\"answer\":\"`{{DataStore##X}}`\",\"created\":\"20210103184600258\",\"modified\":\"20210410193222028\",\"origin\":\"Data Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What is the wikitext syntax to transclude the value at index `X` from a data tiddler `DataStore`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103184640882\":{\"title\":\"Ta:20210103184640882\",\"answer\":\"`getindex`\",\"created\":\"20210103184642288\",\"modified\":\"20210418132009270\",\"origin\":\"Data Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What filter operator retrieves the value at a given index from its input data tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103184741717\":{\"title\":\"Ta:20210103184741717\",\"answer\":\"You probably want to store multiple pieces of information about each contact, and a data tiddler can only store one value per index.\",\"created\":\"20210103184743122\",\"modified\":\"20210410193229772\",\"origin\":\"Data Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"Why are data tiddlers likely a poor choice for storing the email addresses of contacts?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103190602884\":{\"title\":\"Ta:20210103190602884\",\"created\":\"20210103190604113\",\"modified\":\"20210418132946846\",\"origin\":\"System Tiddlers\",\"qtype\":\"remembercz\",\"question\":\"The entire interface of TiddlyWiki is built by {transcluding} a series of special tiddlers.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103190641443\":{\"title\":\"Ta:20210103190641443\",\"answer\":\"Its name begins with `$:/`.\",\"created\":\"20210103190642844\",\"modified\":\"20210418132949926\",\"origin\":\"System Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"A tiddler is said to be a //system tiddler// if what is true about it?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103190907688\":{\"title\":\"Ta:20210103190907688\",\"answer\":\"The ''Explorer'' section of the ''More'' tab.\",\"created\":\"20210103190910950\",\"modified\":\"20210418132951811\",\"origin\":\"System Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What section of the sidebar is usually the best way to browse for system tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103191403629\":{\"title\":\"Ta:20210103191403629\",\"answer\":\"The search bar and the “All” section.\",\"created\":\"20210103191405268\",\"modified\":\"20210418133008144\",\"origin\":\"System Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"From which of the following places are system tiddlers hidden by default? Select all that apply.<br>The ''Explorer'' section of the ''More'' sidebar tab; the standard search bar; filters; the ''All'' section of the ''More'' sidebar tab\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103191646606\":{\"title\":\"Ta:20210103191646606\",\"created\":\"20210103191648125\",\"modified\":\"20210418133412385\",\"origin\":\"Plugins\",\"qtype\":\"remembercz\",\"question\":\"A plugin is a single tiddler that contains multiple {shadow} tiddlers (TiddlyWiki term for a type of tiddler).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103191737048\":{\"title\":\"Ta:20210103191737048\",\"answer\":\"Drag and drop a link to the plugin tiddler from the plugin's demo/documentation wiki into your wiki.\",\"created\":\"20210103191740220\",\"modified\":\"20210418133417746\",\"origin\":\"Plugins\",\"qtype\":\"rememberq\",\"question\":\"What is the most common way to install a plugin in TiddlyWiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103191824456\":{\"title\":\"Ta:20210103191824456\",\"created\":\"20210103191825626\",\"modified\":\"20210418133424068\",\"origin\":\"Plugins\",\"qtype\":\"remembercz\",\"question\":\"Plugins, since they are typically used to add functionality to TiddlyWiki, usually contain primarily {system} tiddlers (TiddlyWiki term for a type of tiddler).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103191957794\":{\"title\":\"Ta:20210103191957794\",\"answer\":\"In the ''Plugins'' section of the ''More'' sidebar tab.\",\"created\":\"20210103191959273\",\"modified\":\"20210418133429142\",\"origin\":\"Plugins\",\"qtype\":\"rememberq\",\"question\":\"Where can you find a list of all plugins in your wiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210103192035897\":{\"title\":\"Ta:20210103192035897\",\"answer\":\"A plugin tiddler (`$:/core`, specifically).\",\"created\":\"20210103192037268\",\"modified\":\"20210418133432647\",\"origin\":\"Plugins\",\"qtype\":\"rememberq\",\"question\":\"TiddlyWiki's core code is contained in what type of single tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107013945419\":{\"title\":\"Ta:20210107013945419\",\"answer\":\"Shadow tiddlers are parts of their plugin tiddler, rather than truly separate tiddlers.\",\"created\":\"20210107013949322\",\"modified\":\"20210418134031544\",\"origin\":\"Shadow Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"How does TiddlyWiki's method of storing shadow tiddlers differ from its method of storing normal tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107014030925\":{\"title\":\"Ta:20210107014030925\",\"answer\":\"If another, normal, tiddler has the same name as the shadow tiddler.\",\"created\":\"20210107014032565\",\"modified\":\"20210418134034916\",\"origin\":\"Shadow Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"In what circumstances will a shadow tiddler provided by a plugin be ignored?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107014105988\":{\"title\":\"Ta:20210107014105988\",\"created\":\"20210107014106947\",\"modified\":\"20210418134037448\",\"origin\":\"Shadow Tiddlers\",\"qtype\":\"remembercz\",\"question\":\"When a shadow tiddler is ignored because a normal tiddler by the same name also exists in the wiki, the shadow tiddler is said to be {overridden}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107014146889\":{\"title\":\"Ta:20210107014146889\",\"answer\":\"TiddlyWiki will go back to using the shadow tiddler when a tiddler by that name is referenced.\",\"created\":\"20210107014148939\",\"modified\":\"20210418134041794\",\"origin\":\"Shadow Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What happens if you delete a tiddler that is overriding a shadow tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107014315547\":{\"title\":\"Ta:20210107014315547\",\"answer\":\"In the preview dropdown on the editor toolbar, you can select \\\"differences from shadow.\\\"\",\"created\":\"20210107014316562\",\"modified\":\"20210418134051585\",\"origin\":\"Shadow Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"Where in a tiddler's interface can you look to see what differences it has to its corresponding shadow tiddler (if it has one)?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107014412226\":{\"title\":\"Ta:20210107014412226\",\"answer\":\"Taking upgrades to TiddlyWiki or your plugins.\",\"created\":\"20210107014413768\",\"modified\":\"20210418134059363\",\"origin\":\"Shadow Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What kind of wiki maintenance becomes more challenging when you have many overridden shadow tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107014504752\":{\"title\":\"Ta:20210107014504752\",\"answer\":\"Changing one of the settings overrides a shadow tiddler that contains the default value.\",\"created\":\"20210107014509330\",\"modified\":\"20210418134103200\",\"origin\":\"Shadow Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What mechanism does TiddlyWiki use to back most of the settings in the Control Panel, making it easy to restore the original settings if needed?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107014637538\":{\"title\":\"Ta:20210107014637538\",\"answer\":\"If the plugin updated the tiddler you overrode, it may be relying on changes to that tiddler -- but the updates won't be visible in your wiki, since your version is unchanged and blocks the shadow tiddler from being referenced.\",\"created\":\"20210107014642356\",\"modified\":\"20210418134204077\",\"origin\":\"Shadow Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"Why can upgrading a plugin that contains a shadow tiddler you have overridden cause problems with your wiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107014737658\":{\"title\":\"Ta:20210107014737658\",\"answer\":\"They are displayed in bold font.\",\"created\":\"20210107014738844\",\"modified\":\"20210418134211048\",\"origin\":\"Shadow Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"In many TiddlyWiki views, such as the ''Explorer'' section of the ''More'' tab of the sidebar, how can you distinguish shadow tiddlers that have not been overridden from normal tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107014811997\":{\"title\":\"Ta:20210107014811997\",\"answer\":\"`[is[shadow]]`\",\"created\":\"20210107014813588\",\"modified\":\"20210418134219356\",\"origin\":\"Shadow Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What filter expression will display only shadow tiddlers that you have overridden?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107014848744\":{\"title\":\"Ta:20210107014848744\",\"answer\":\"`all[tiddlers+shadows]`\",\"created\":\"20210107014850336\",\"modified\":\"20210418134225094\",\"origin\":\"Shadow Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What filter constructor retrieves all shadow and non-shadow tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107014935575\":{\"title\":\"Ta:20210107014935575\",\"answer\":\"`is[shadow]` selects //overridden// shadow tiddlers; `all[shadows]` selects all shadow tiddlers, whether overridden or not.\",\"created\":\"20210107015005532\",\"modified\":\"20210418134234513\",\"origin\":\"Shadow Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"Explain the difference between the definition of a \\\"shadow tiddler\\\" used by the `is[shadow]` and `all[shadows]` filter steps.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107015136701\":{\"title\":\"Ta:20210107015136701\",\"answer\":\"The `$:/tags/Macro` tag.\",\"created\":\"20210107015140343\",\"modified\":\"20210418134622278\",\"origin\":\"Global Macros\",\"qtype\":\"rememberq\",\"question\":\"A //global// macro is one that is in a tiddler with what property?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107015159769\":{\"title\":\"Ta:20210107015159769\",\"answer\":\"`$:/tags/Macro`\",\"created\":\"20210107015201728\",\"modified\":\"20210418134626823\",\"origin\":\"Global Macros\",\"qtype\":\"rememberq\",\"question\":\"What tag should you add to a tiddler to make any macros it contains available in any tiddler in the wiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107015331021\":{\"title\":\"Ta:20210107015331021\",\"answer\":\"`\\\\import`\",\"created\":\"20210107015332179\",\"modified\":\"20210418134629745\",\"origin\":\"Global Macros\",\"qtype\":\"rememberq\",\"question\":\"What pragma loads macros that are defined in another tiddler but are not global, so that they can be called from within the current tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107015423886\":{\"title\":\"Ta:20210107015423886\",\"answer\":\"Use a pragma `\\\\import [prefix[W]]`.\",\"created\":\"20210107015425774\",\"modified\":\"20210418134733750\",\"origin\":\"Global Macros\",\"qtype\":\"rememberq\",\"question\":\"How would you load macros found in all tiddlers that begin with the letter `W` into the context of the current tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107015521319\":{\"title\":\"Ta:20210107015521319\",\"answer\":\"E.g., automatically generate URLs matching a pattern, display some boilerplate text, perform a series of actions using action widgets\",\"created\":\"20210107015530781\",\"modified\":\"20210418134741794\",\"origin\":\"Global Macros\",\"qtype\":\"rememberq\",\"question\":\"Give an example of something you might define a global macro to do (try to pick a new one).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107015740839\":{\"title\":\"Ta:20210107015740839\",\"created\":\"20210107015742014\",\"modified\":\"20210418140240400\",\"origin\":\"The View Template\",\"qtype\":\"remembercz\",\"question\":\"Every time TiddlyWiki displays a tiddler in the story river, it uses a {template} (TiddlyWiki concept) to determine what the tiddler should look like.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107015900784\":{\"title\":\"Ta:20210107015900784\",\"answer\":\"Anytime it is displaying a tiddler in the story river (and that tiddler isn't being edited).\",\"created\":\"20210107015902944\",\"modified\":\"20210418140242543\",\"origin\":\"The View Template\",\"qtype\":\"rememberq\",\"question\":\"Explain when TiddlyWiki uses the //view template//.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107020034725\":{\"title\":\"Ta:20210107020034725\",\"answer\":\"It transcludes all tiddlers that have the `$:/tags/ViewTemplate` tag in order, so that users only have to tag a template tiddler with this tag to include it in the view template.\",\"created\":\"20210107020036261\",\"modified\":\"20210418140305483\",\"origin\":\"The View Template\",\"qtype\":\"rememberq\",\"question\":\"What mechanism does TiddlyWiki's view template use to enable users to easily add additional components?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107020452964\":{\"title\":\"Ta:20210107020452964\",\"answer\":\"Add a transclusion of that template to the ViewTemplate.\",\"created\":\"20210107020454241\",\"modified\":\"20210418140308452\",\"origin\":\"The View Template\",\"qtype\":\"rememberq\",\"question\":\"What mechanism would you likely use to display some template on all tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107020640926\":{\"title\":\"Ta:20210107020640926\",\"answer\":\"Use the HTML equivalent, `<h2>Section Name</h2>`. (Change the `2` to match the number of exclamation points.)\",\"created\":\"20210107020642128\",\"modified\":\"20210418140314732\",\"origin\":\"The View Template\",\"qtype\":\"rememberq\",\"question\":\"When creating a template, how can you change the markup `!! Section Name` to ensure that `Section Name` will never merge into a paragraph rather than creating a section heading?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107020846577\":{\"title\":\"Ta:20210107020846577\",\"answer\":\"The EditTemplate (`$:/core/ui/EditTemplate`)\",\"created\":\"20210107020851974\",\"modified\":\"20210418140322398\",\"origin\":\"The View Template\",\"qtype\":\"rememberq\",\"question\":\"What built-in TiddlyWiki template controls what appears when you edit a tiddler in the story river?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107184432126\":{\"title\":\"Ta:20210107184432126\",\"answer\":\"Tag it with `$:/tags/SideBar`.\",\"created\":\"20210107184434037\",\"modified\":\"20210418141623346\",\"origin\":\"Adding to the Sidebar\",\"qtype\":\"rememberq\",\"question\":\"How do you get a tiddler to appear as a tab in the sidebar?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107184506733\":{\"title\":\"Ta:20210107184506733\",\"answer\":\"When the tiddler is being rendered as part of the sidebar.\",\"created\":\"20210107184507891\",\"modified\":\"20210418141629203\",\"origin\":\"Adding to the Sidebar\",\"qtype\":\"rememberq\",\"question\":\"In what common context is the `currentTiddler` variable not defined at all?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107184538769\":{\"title\":\"Ta:20210107184538769\",\"answer\":\"`caption`\",\"created\":\"20210107184540021\",\"modified\":\"20210418141631978\",\"origin\":\"Adding to the Sidebar\",\"qtype\":\"rememberq\",\"question\":\"What field of a tiddler do you set to change the wording displayed on a tab rendered with the `tabs` macro?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107184624314\":{\"title\":\"Ta:20210107184624314\",\"answer\":\"`$:/tags/TextEditor/Snippet`\",\"created\":\"20210107184625332\",\"modified\":\"20210418141928034\",\"origin\":\"Stamps\",\"qtype\":\"rememberq\",\"question\":\"What tag do you add to a tiddler to make it available for insertion as a stamp?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107184722320\":{\"title\":\"Ta:20210107184722320\",\"answer\":\"To insert some predefined text into a tiddler that can't be effectively implemented as a macro or template.\",\"created\":\"20210107184727378\",\"modified\":\"20210418141930151\",\"origin\":\"Stamps\",\"qtype\":\"rememberq\",\"question\":\"What is the purpose of a //stamp//?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107184853444\":{\"title\":\"Ta:20210107184853444\",\"answer\":\"`[all[current]backlinks[]]`\",\"created\":\"20210107184854784\",\"modified\":\"20210418152102090\",\"origin\":\"Creating a List of Links and Backlinks\",\"qtype\":\"rememberq\",\"question\":\"Write a filter expression that displays the backlinks of the current tiddler. Do not use any field or variable transclusions.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107185221794\":{\"title\":\"Ta:20210107185221794\",\"answer\":\"`[{!!description}split[]first[100]join[]]`\",\"created\":\"20210107185224741\",\"modified\":\"20210418152118028\",\"origin\":\"Creating a List of Links and Backlinks\",\"qtype\":\"rememberq\",\"question\":\"Write a filter expression that outputs the first 100 characters of the wikitext in the `description` field of the current tiddler as a single output tiddler.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107185257971\":{\"title\":\"Ta:20210107185257971\",\"answer\":\"The `<div>` element.\",\"created\":\"20210107185259131\",\"modified\":\"20210418152207986\",\"origin\":\"Creating a List of Links and Backlinks\",\"qtype\":\"rememberq\",\"question\":\"What HTML element is used for a generic grouping of elements?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107185358615\":{\"title\":\"Ta:20210107185358615\",\"answer\":\"Cascading Style Sheets.\",\"created\":\"20210107185359638\",\"modified\":\"20210418152139033\",\"origin\":\"Creating a List of Links and Backlinks\",\"qtype\":\"rememberq\",\"question\":\"What does //CSS// stand for?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107185422937\":{\"title\":\"Ta:20210107185422937\",\"answer\":\"Its layout and formatting.\",\"created\":\"20210107185425728\",\"modified\":\"20210418152212094\",\"origin\":\"Creating a List of Links and Backlinks\",\"qtype\":\"rememberq\",\"question\":\"What aspect of a website is CSS responsible for controlling?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107185522336\":{\"title\":\"Ta:20210107185522336\",\"answer\":\"This ensures that you don't accidentally choose the same generic-sounding name (e.g., `item`) as some other plugin or TiddlyWiki's core.\",\"created\":\"20210107185524925\",\"modified\":\"20210418152214234\",\"origin\":\"Creating a List of Links and Backlinks\",\"qtype\":\"rememberq\",\"question\":\"In TiddlyWiki, why is it a good idea to prefix your CSS class names with your initials or some similar prefix?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107185757110\":{\"title\":\"Ta:20210107185757110\",\"answer\":\"Place the fallback text/widgets within the body of a `$transclude` widget that attempts the transclusion.\",\"created\":\"20210107185759185\",\"modified\":\"20210418152222745\",\"origin\":\"Creating a List of Links and Backlinks\",\"qtype\":\"rememberq\",\"question\":\"How can you easily display some text or widgets only if a specific tiddler cannot be transcluded (e.g., because it does not exist)?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107190031549\":{\"title\":\"Ta:20210107190031549\",\"answer\":\"A text reference.\",\"created\":\"20210107190032961\",\"modified\":\"20210418160639493\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"In the transclusion `{{MyTiddler!!myfield}}`, the part `MyTiddler!!myfield` is called what?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107190124407\":{\"title\":\"Ta:20210107190124407\",\"answer\":\"\",\"created\":\"20210107190128053\",\"modified\":\"20210418160732533\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"remembercz\",\"question\":\"A text reference uses the same syntax as a {field transclusion}, but without the outer curly braces.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107231203818\":{\"title\":\"Ta:20210107231203818\",\"answer\":\"The `$button` widget.\",\"created\":\"20210107231205603\",\"modified\":\"20210418160742538\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"What widget is used to create a button?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107231453085\":{\"title\":\"Ta:20210107231453085\",\"answer\":\"`set` and `setTo`.\",\"created\":\"20210107231454259\",\"modified\":\"20210418160744788\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"What two attributes of the `$button` widget do you use to make the button set a tiddler field to a value?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107231706966\":{\"title\":\"Ta:20210107231706966\",\"answer\":\"Their names begin with `$:/temp/`.\",\"created\":\"20210107231708431\",\"modified\":\"20210418160748684\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"Temporary tiddlers typically use what naming convention?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107231758177\":{\"title\":\"Ta:20210107231758177\",\"answer\":\"They are not saved, so they disappear when the wiki is closed and reopened.\",\"created\":\"20210107231759222\",\"modified\":\"20210418160755302\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"What special behavior do tiddlers whose names begin with `$:/temp` have?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107231830085\":{\"title\":\"Ta:20210107231830085\",\"answer\":\"In a temporary tiddler.\",\"created\":\"20210107231831133\",\"modified\":\"20210418160758539\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"Even core UI elements like the search box store their contents where?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107231904601\":{\"title\":\"Ta:20210107231904601\",\"answer\":\"The `$edit-text` widget.\",\"created\":\"20210107231905951\",\"modified\":\"20210418160804854\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"What widget is used to create a text box?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107231924180\":{\"title\":\"Ta:20210107231924180\",\"answer\":\"`tag=\\\"input\\\"`\",\"created\":\"20210107231925433\",\"modified\":\"20210418160807449\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"What attribute and value passed to the `$edit-text` widget causes it to accept only a single line of text?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107231955280\":{\"title\":\"Ta:20210107231955280\",\"answer\":\"`tiddler`\",\"created\":\"20210107231956593\",\"modified\":\"20210418160813581\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"What attribute of the `$edit-text` widget allows you to choose what tiddler the text box edits?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107232026427\":{\"title\":\"Ta:20210107232026427\",\"answer\":\"`class=\\\"tc-btn-invisible tc-tiddlylink\\\"`\",\"created\":\"20210107232027815\",\"modified\":\"20210418160822026\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"What attribute can you add to the `$button` widget to make the button appear like a link?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107232300907\":{\"title\":\"Ta:20210107232300907\",\"answer\":\"`field`\",\"created\":\"20210107232302200\",\"modified\":\"20210418160845345\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"What attribute of the `$edit-text` widget allows you to choose what tiddler field the text box edits?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107232346817\":{\"title\":\"Ta:20210107232346817\",\"answer\":\"All widgets displayed on the screen are told what tiddler has changed and invited to refresh themselves if they believe they are affected by that change.\",\"created\":\"20210107232350696\",\"modified\":\"20210418160853830\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"Explain the process TiddlyWiki uses to ensure the screen is up to date after a tiddler is changed.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107232428492\":{\"title\":\"Ta:20210107232428492\",\"answer\":\"`to`\",\"created\":\"20210107232429635\",\"modified\":\"20210418160900395\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"What attribute of the `$button` widget allows you to make the button open and navigate to a specific tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107232510188\":{\"title\":\"Ta:20210107232510188\",\"answer\":\"`<table>`\",\"created\":\"20210107232511082\",\"modified\":\"20210418160902671\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"What HTML element creates a table?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107232532110\":{\"title\":\"Ta:20210107232532110\",\"answer\":\"`<tr>` (//table row//)\",\"created\":\"20210107232533466\",\"modified\":\"20210418160904076\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"What HTML element creates a row when used within a `<table>` element?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107232556365\":{\"title\":\"Ta:20210107232556365\",\"answer\":\"`<td>` (//table data//)\",\"created\":\"20210107232600707\",\"modified\":\"20210418160905902\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"What HTML element creates a table cell when used within a `<tr>` element?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107232635219\":{\"title\":\"Ta:20210107232635219\",\"answer\":\"`<th>` (//table header//)\",\"created\":\"20210107232636637\",\"modified\":\"20210418160908411\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"What HTML element creates a table header cell when used within a `<tr>` element?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107232708814\":{\"title\":\"Ta:20210107232708814\",\"answer\":\"`<table>`, `<tr>`, `<td>`, and `<th>`.\",\"created\":\"20210107232710161\",\"modified\":\"20210418160910734\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"What four basic HTML elements are used to construct tables?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107232923263\":{\"title\":\"Ta:20210107232923263\",\"answer\":\"`<$button to={{Linky!!target}}>Linky Target</$button>`\",\"created\":\"20210107232926736\",\"modified\":\"20210418160921521\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"Write wikitext to display a button that takes the user to the tiddler referenced in the `target` field of the `Linky` tiddler when clicked. The button text should be “Linky Target”.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107233329839\":{\"title\":\"Ta:20210107233329839\",\"answer\":\"`<$button set=\\\"!!target\\\" setTo={{$:/temp/NewTarget}}>Reset Target</$button>`\",\"created\":\"20210107233332947\",\"modified\":\"20210418160948496\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"Write wikitext to display a button that sets the `target` field of the current tiddler to the value currently stored in the `text` field of the `$:/temp/NewTarget` tiddler. The button text should be \\\"Reset Target\\\".\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107233516001\":{\"title\":\"Ta:20210107233516001\",\"answer\":\"`<$edit-text tag=\\\"input\\\" tiddler=<<describedTiddler>> field=\\\"description\\\"/>`\",\"created\":\"20210107233530534\",\"modified\":\"20210418161002485\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"rememberq\",\"question\":\"Write wikitext to display a single-line textbox which is bound to the `description` field of the tiddler whose name is stored in the `describedTiddler` variable.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210107233831498\":{\"title\":\"Ta:20210107233831498\",\"answer\":\"\",\"created\":\"20210107233835374\",\"modified\":\"20210418161005303\",\"origin\":\"Buttons and Input Widgets\",\"qtype\":\"remembercz\",\"question\":\"When a text box is allowing the user to edit the value of a specific tiddler field, we say that the text box is {bound} to the field.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109213545035\":{\"title\":\"Ta:20210109213545035\",\"answer\":\"\",\"created\":\"20210109213546170\",\"modified\":\"20210418161909038\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"qtype\":\"remembercz\",\"question\":\"When you trigger a message, any widgets that are {higher up the widget tree} from the action are given the opportunity to respond to the message.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109213621592\":{\"title\":\"Ta:20210109213621592\",\"answer\":\"`tm-new-tiddler`\",\"created\":\"20210109213622593\",\"modified\":\"20210418161914310\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"qtype\":\"rememberq\",\"question\":\"What message creates a new tiddler and opens it for editing in the story river?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109214205308\":{\"title\":\"Ta:20210109214205308\",\"answer\":\"An action widget.\",\"created\":\"20210109214206247\",\"modified\":\"20210418161916054\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"qtype\":\"rememberq\",\"question\":\"What kind of widget makes something happen in the wiki, rather than displaying something?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109214221733\":{\"title\":\"Ta:20210109214221733\",\"answer\":\"Its name begins with `$action-`.\",\"created\":\"20210109214223269\",\"modified\":\"20210418161917835\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"qtype\":\"rememberq\",\"question\":\"How can you tell that a particular widget is an action widget?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109214237296\":{\"title\":\"Ta:20210109214237296\",\"answer\":\"`$action-sendmessage`\",\"created\":\"20210109214238419\",\"modified\":\"20210418161921567\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"qtype\":\"rememberq\",\"question\":\"What action widget creates a message?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109214259585\":{\"title\":\"Ta:20210109214259585\",\"answer\":\"The `$button` widget.\",\"created\":\"20210109214300417\",\"modified\":\"20210418162307353\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"qtype\":\"rememberq\",\"question\":\"Action widgets are most commonly triggered by what other widget?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109214406987\":{\"title\":\"Ta:20210109214406987\",\"answer\":\"The widget will never do anything at all.\",\"created\":\"20210109214410344\",\"modified\":\"20210418162309444\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"qtype\":\"rememberq\",\"question\":\"What happens if you put an action widget in a tiddler by itself, rather than within a triggering widget?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109214506860\":{\"title\":\"Ta:20210109214506860\",\"answer\":\"`actions`\",\"created\":\"20210109214508545\",\"modified\":\"20210418162313498\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"qtype\":\"rememberq\",\"question\":\"What attribute of a `$button` widget do you use to specify action widgets that it can trigger?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109214553628\":{\"title\":\"Ta:20210109214553628\",\"answer\":\"`<$button actions=<<myactions>>>Act</$button>`\",\"created\":\"20210109214554641\",\"modified\":\"20210418162322397\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"qtype\":\"rememberq\",\"question\":\"Given a macro called `myactions` with no parameters that generates some action widgets, write wikitext for a button labeled //Act// that triggers those action widgets.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109214712041\":{\"title\":\"Ta:20210109214712041\",\"answer\":\"It performs each action in the order it is shown in the wikitext.\",\"created\":\"20210109214714279\",\"modified\":\"20210418162324515\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"qtype\":\"rememberq\",\"question\":\"How does TiddlyWiki deal with multiple action widgets associated with the same button?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109214837731\":{\"title\":\"Ta:20210109214837731\",\"answer\":\"`<$action-sendmessage $message=\\\"tm-new-tiddler\\\" title=NewT tags={{!!tags}}/>`\",\"created\":\"20210109214850266\",\"modified\":\"20210418162338220\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"qtype\":\"rememberq\",\"question\":\"Write wikitext for an `$action-sendmessage` widget that creates a new tiddler called `NewT` tagged with the same tags as the current tiddler and opens it for editing.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109214942680\":{\"title\":\"Ta:20210109214942680\",\"answer\":\"A series of arbitrary fields and values (so an attribute `foo=bar` would set the field `foo` to `bar` in the new tiddler).\",\"created\":\"20210109214944092\",\"modified\":\"20210418162345424\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"qtype\":\"rememberq\",\"question\":\"What parameters does the `tm-new-tiddler` message accept?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109215136556\":{\"title\":\"Ta:20210109215136556\",\"answer\":\"`$:/tags/PageControls`\",\"created\":\"20210109215137894\",\"modified\":\"20210418162352950\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"qtype\":\"rememberq\",\"question\":\"What tag causes a button to appear in the page toolbar?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109221827610\":{\"title\":\"Ta:20210109221827610\",\"answer\":\"`$:/config/PageControlButtons/Visibility/MyButton`\",\"created\":\"20210109221829400\",\"modified\":\"20210418162728540\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"qtype\":\"rememberq\",\"question\":\"If a tiddler called `MyButton` is part of the page controls, what tiddler controls whether it is visible above the search box?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109221946679\":{\"title\":\"Ta:20210109221946679\",\"answer\":\"Add a `tooltip` attribute to the `$button` widget.\",\"created\":\"20210109221947919\",\"modified\":\"20210418162732371\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"qtype\":\"rememberq\",\"question\":\"How do you add a tooltip to a button?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109222018175\":{\"title\":\"Ta:20210109222018175\",\"answer\":\"In the tag manager (pretend to select an icon for a tag).\",\"created\":\"20210109222019965\",\"modified\":\"20210418162735227\",\"origin\":\"Creating Tiddlers With Predefined Fields\",\"qtype\":\"rememberq\",\"question\":\"Where in TiddlyWiki can you quickly find a list of the default icons?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109225040407\":{\"title\":\"Ta:20210109225040407\",\"created\":\"20210109225041456\",\"modified\":\"20210502163005576\",\"origin\":\"JavaScript Macros\",\"qtype\":\"remembercz\",\"question\":\"A JavaScript macro should not have any {side effect}s when run.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109225118013\":{\"title\":\"Ta:20210109225118013\",\"answer\":\"TiddlyWiki may decide to rerun the macro at any time if the tiddler or element containing it needs to be refreshed.\",\"created\":\"20210109225119121\",\"modified\":\"20210502163007403\",\"origin\":\"JavaScript Macros\",\"qtype\":\"rememberq\",\"question\":\"Why are side effects in JavaScript macros dangerous?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109225153106\":{\"title\":\"Ta:20210109225153106\",\"answer\":\"Those making up the browser DOM.\",\"created\":\"20210109225223042\",\"modified\":\"20210502163011016\",\"origin\":\"JavaScript Macros\",\"qtype\":\"rememberq\",\"question\":\"JavaScript macros are unable to access what objects?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109225316323\":{\"title\":\"Ta:20210109225316323\",\"answer\":\"The type (set to `application/javascript`) and the `module-type` field (set to `macro`).\",\"created\":\"20210109225318236\",\"modified\":\"20210502163014502\",\"origin\":\"JavaScript Macros\",\"qtype\":\"rememberq\",\"question\":\"What two fields must you set on a tiddler containing a JavaScript macro to make it visible to TiddlyWiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109225359535\":{\"title\":\"Ta:20210109225359535\",\"answer\":\"You must save and reload the wiki for JavaScript changes to take effect.\",\"created\":\"20210109225400637\",\"modified\":\"20210502163016382\",\"origin\":\"JavaScript Macros\",\"qtype\":\"rememberq\",\"question\":\"If you change a JavaScript macro and the changes do not seem to be applying, what did you most likely forget?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109225449170\":{\"title\":\"Ta:20210109225449170\",\"answer\":\"Save and reload the wiki.\",\"created\":\"20210109225450191\",\"modified\":\"20210502163018214\",\"origin\":\"JavaScript Macros\",\"qtype\":\"rememberq\",\"question\":\"What must you do after adding or editing a JavaScript macro for the changes to take effect?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109225556485\":{\"title\":\"Ta:20210109225556485\",\"created\":\"20210109225557968\",\"modified\":\"20210502163242181\",\"origin\":\"Stylesheets\",\"qtype\":\"remembercz\",\"question\":\"Inline stylesheets are not {scoped to} the tiddler containing them.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109225643059\":{\"title\":\"Ta:20210109225643059\",\"answer\":\"Inline stylesheets within a tiddler are not scoped to that tiddler, so custom classes prevent the styles from accidentally applying to other tiddlers.\",\"created\":\"20210109225644650\",\"modified\":\"20210502163245714\",\"origin\":\"Stylesheets\",\"qtype\":\"rememberq\",\"question\":\"Why should you (almost) always use a class name with any CSS that you intend to apply only to a single tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109225754963\":{\"title\":\"Ta:20210109225754963\",\"answer\":\"`@@.my-favorite-class` at the start of the block, and `@@` at the end.\",\"created\":\"20210109225756671\",\"modified\":\"20210502163250430\",\"origin\":\"Stylesheets\",\"qtype\":\"rememberq\",\"question\":\"What wikitext syntax can you use to apply the class `my-favorite-class` to a block of wikitext?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109225841609\":{\"title\":\"Ta:20210109225841609\",\"answer\":\"`@@text-align: center;` at the start of the block, and `@@` at the end.\",\"created\":\"20210109225843207\",\"modified\":\"20210502163255271\",\"origin\":\"Stylesheets\",\"qtype\":\"rememberq\",\"question\":\"What wikitext syntax can you use to apply the style attribute `text-align: center` to a block of wikitext?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109225940595\":{\"title\":\"Ta:20210109225940595\",\"answer\":\"`$:/tags/Stylesheet`\",\"created\":\"20210109225941808\",\"modified\":\"20210502163259030\",\"origin\":\"Stylesheets\",\"qtype\":\"rememberq\",\"question\":\"What tag is used to make a tiddler part of the global stylesheet in a wiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109230027259\":{\"title\":\"Ta:20210109230027259\",\"answer\":\"If you use the wikitext content type, you can use transclusions of macros or fields as part of the stylesheet.\",\"created\":\"20210109230029770\",\"modified\":\"20210502163301208\",\"origin\":\"Stylesheets\",\"qtype\":\"rememberq\",\"question\":\"Why might you choose not to use the `text/css` content type for a tiddler containing CSS?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109230758790\":{\"title\":\"Ta:20210109230758790\",\"answer\":\"Node.js.\",\"created\":\"20210109230759914\",\"modified\":\"20210502163533577\",\"origin\":\"Creating Plugins\",\"qtype\":\"rememberq\",\"question\":\"TiddlyWiki plugins are usually developed using what external helper software?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109230844101\":{\"title\":\"Ta:20210109230844101\",\"answer\":\"A TiddlyWiki, which in addition to the plugin tiddler contains its documentation.\",\"created\":\"20210109230846035\",\"modified\":\"20210502163546781\",\"origin\":\"Creating Plugins\",\"qtype\":\"rememberq\",\"question\":\"Plugins are typically distributed in what kind of container?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109230943374\":{\"title\":\"Ta:20210109230943374\",\"answer\":\"`/home/alice/myplugin-wiki/plugins/MyPlugin`\",\"created\":\"20210109230944603\",\"modified\":\"20210502163553026\",\"origin\":\"Creating Plugins\",\"qtype\":\"rememberq\",\"question\":\"If you are creating a plugin called `MyPlugin`, and your `tiddlywiki.info` file is in the folder `/home/alice/myplugin-wiki`, in what folder should you place the tiddlers that make up your plugin?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109231032557\":{\"title\":\"Ta:20210109231032557\",\"answer\":\"It is a tiddler list where each element is automatically prefixed with the title of your plugin (e.g., `$:/plugins/alice/myplugin/`).\",\"created\":\"20210109231033412\",\"modified\":\"20210502163557713\",\"origin\":\"Creating Plugins\",\"qtype\":\"rememberq\",\"question\":\"What is unusual about the `list` field in a `plugin.info` file?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109231513717\":{\"title\":\"Ta:20210109231513717\",\"answer\":\"`plugin.info`\",\"created\":\"20210109231516123\",\"modified\":\"20210502163606302\",\"origin\":\"Creating Plugins\",\"qtype\":\"rememberq\",\"question\":\"What file at the root of a plugin's folder contains metadata about the plugin?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109231640740\":{\"title\":\"Ta:20210109231640740\",\"answer\":\"`tiddlywiki --build index`\",\"created\":\"20210109231641995\",\"modified\":\"20210502163613775\",\"origin\":\"Creating Plugins\",\"qtype\":\"rememberq\",\"question\":\"What TiddlyWiki Node.js command will create a single-file wiki from a folder wiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109231700230\":{\"title\":\"Ta:20210109231700230\",\"answer\":\"`tiddlywiki --listen`\",\"created\":\"20210109231701258\",\"modified\":\"20210502163616490\",\"origin\":\"Creating Plugins\",\"qtype\":\"rememberq\",\"question\":\"What TiddlyWiki Node.js command will start a local web server so you can edit the wiki in the current folder?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109232307261\":{\"title\":\"Ta:20210109232307261\",\"answer\":\"Each in a separate file containing their fields.\",\"created\":\"20210109232308241\",\"modified\":\"20210502164041560\",\"origin\":\"Writing Shell Scripts Against a TiddlyWiki\",\"qtype\":\"rememberq\",\"question\":\"How are tiddlers stored in a folder wiki (the format used by the Node.js version of TiddlyWiki)?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109232335937\":{\"title\":\"Ta:20210109232335937\",\"answer\":\"On separate lines at the top of the tiddler file, with a colon separating the field name and its value.\",\"created\":\"20210109232337191\",\"modified\":\"20210502164045301\",\"origin\":\"Writing Shell Scripts Against a TiddlyWiki\",\"qtype\":\"rememberq\",\"question\":\"How are fields other than `text` stored within tiddler files in a folder wiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109232419178\":{\"title\":\"Ta:20210109232419178\",\"answer\":\"After all of the other fields, separated from them by a blank line.\",\"created\":\"20210109232421364\",\"modified\":\"20210502164048174\",\"origin\":\"Writing Shell Scripts Against a TiddlyWiki\",\"qtype\":\"rememberq\",\"question\":\"How is the `text` field stored within a tiddler file in a folder wiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109232511957\":{\"title\":\"Ta:20210109232511957\",\"answer\":\"The `text` (content) field is stored in a separate file, alongside a `.meta` file containing the other fields.\",\"created\":\"20210109232512868\",\"modified\":\"20210502164049691\",\"origin\":\"Writing Shell Scripts Against a TiddlyWiki\",\"qtype\":\"rememberq\",\"question\":\"How are tiddlers containing binary data (e.g., images) stored in a folder wiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109232618910\":{\"title\":\"Ta:20210109232618910\",\"answer\":\"The subcommands/operations are introduced by double-dashes, like `--render`, while the options are positional.\",\"created\":\"20210109232620274\",\"modified\":\"20210502164054250\",\"origin\":\"Writing Shell Scripts Against a TiddlyWiki\",\"qtype\":\"rememberq\",\"question\":\"What unusual syntax does the `tiddlywiki` CLI have?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210109232706049\":{\"title\":\"Ta:20210109232706049\",\"answer\":\"The CLI is stateless, so no record of a different wiki being loaded is preserved to the next call. A second `--operation` needs to be added to the end of the command line to get a useful effect.\",\"created\":\"20210109232707605\",\"modified\":\"20210502164057041\",\"origin\":\"Writing Shell Scripts Against a TiddlyWiki\",\"qtype\":\"rememberq\",\"question\":\"Why is the TiddlyWiki CLI command `tiddlywiki --load SOURCE_WIKI` a no-op?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210110165551205\":{\"title\":\"Ta:20210110165551205\",\"created\":\"20210110165553461\",\"modified\":\"20210408174542944\",\"origin\":\"The TiddlyWiki Interface\",\"qtype\":\"remembercz\",\"question\":\"The TiddlyWiki interface is divided into two sections: the {story river} on the left, and the {sidebar} on the right.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210110165730167\":{\"title\":\"Ta:20210110165730167\",\"answer\":\"The double right arrow in the far upper-right corner.\",\"created\":\"20210110165731674\",\"modified\":\"20210408174545974\",\"origin\":\"The TiddlyWiki Interface\",\"qtype\":\"rememberq\",\"question\":\"Where in TiddlyWiki would you click to hide the sidebar if you wanted more horizontal space?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210110165752901\":{\"title\":\"Ta:20210110165752901\",\"created\":\"20210110165755586\",\"modified\":\"20210408174549367\",\"origin\":\"The TiddlyWiki Interface\",\"qtype\":\"remembercz\",\"question\":\"The story river shows the {tiddlers} in your wiki which are currently open.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210110165831811\":{\"title\":\"Ta:20210110165831811\",\"answer\":\"The //view toolbar//.\",\"created\":\"20210110165833421\",\"modified\":\"20210418131950521\",\"origin\":\"The TiddlyWiki Interface\",\"qtype\":\"rememberq\",\"question\":\"What is the toolbar in the upper-right corner of each tiddler when viewing it called?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210110165850766\":{\"title\":\"Ta:20210110165850766\",\"answer\":\"The //page toolbar//.\",\"created\":\"20210110165851940\",\"modified\":\"20210408174556144\",\"origin\":\"The TiddlyWiki Interface\",\"qtype\":\"rememberq\",\"question\":\"What is the toolbar at the top of the sidebar called?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210110165916732\":{\"title\":\"Ta:20210110165916732\",\"created\":\"20210110165918510\",\"modified\":\"20210408174558302\",\"origin\":\"The TiddlyWiki Interface\",\"qtype\":\"remembercz\",\"question\":\"The //Recent// tab of the sidebar shows those tiddlers that have been {changed} recently.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210110165952850\":{\"title\":\"Ta:20210110165952850\",\"answer\":\"The //Tools// tab (check or uncheck items to control their placement on the toolbar).\",\"created\":\"20210110165954329\",\"modified\":\"20210408174605138\",\"origin\":\"The TiddlyWiki Interface\",\"qtype\":\"rememberq\",\"question\":\"Where in the sidebar can you choose which tools appear on the page toolbar?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210110170043269\":{\"title\":\"Ta:20210110170043269\",\"created\":\"20210110170044390\",\"modified\":\"20210408174608962\",\"origin\":\"The TiddlyWiki Interface\",\"qtype\":\"remembercz\",\"question\":\"The left side of TiddlyWiki's interface, showing the tiddlers that are currently open, is called the {story river}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210110172653534\":{\"title\":\"Ta:20210110172653534\",\"created\":\"20210110172655081\",\"modified\":\"20210409021847680\",\"origin\":\"Structuring Our Wiki\",\"qtype\":\"remembercz\",\"question\":\"It's helpful to be {consistent} when structuring a TiddlyWiki so that we don't struggle to find things that don't match conventions later.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210110172813200\":{\"title\":\"Ta:20210110172813200\",\"answer\":\"We applied a tag representing the type of content to each tiddler.\",\"created\":\"20210110172814395\",\"modified\":\"20210409021849832\",\"origin\":\"Structuring Our Wiki\",\"qtype\":\"rememberq\",\"question\":\"In our sample TiddlyWiki, how did we classify tiddlers based on the type of content in them (e.g., journal, contact, project)?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210110172919136\":{\"title\":\"Ta:20210110172919136\",\"answer\":\"Since tiddlers are small and focus on a single idea, if they aren't connected to adjacent ideas it will be particularly difficult to find them.\",\"created\":\"20210110172920901\",\"modified\":\"20210409021853583\",\"origin\":\"Structuring Our Wiki\",\"qtype\":\"rememberq\",\"question\":\"Explain why associating tiddlers with each other is particularly critical in TiddlyWiki compared to other notes systems.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210110173202946\":{\"title\":\"Ta:20210110173202946\",\"answer\":\"E.g., Ingredient, Recipe, Store, Cookbook, Tip\",\"created\":\"20210110173204331\",\"modified\":\"20210409021900183\",\"origin\":\"Structuring Our Wiki\",\"qtype\":\"rememberq\",\"question\":\"Give an example of a type (classification) of tiddler you might invent in a TiddlyWiki that stores recipes and other cooking notes (try to pick a new one).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210110173316061\":{\"title\":\"Ta:20210110173316061\",\"answer\":\"When you are looking for this information later, it is unlikely you will remember that the information came up during that specific meeting.\",\"created\":\"20210110173324319\",\"modified\":\"20210409021904060\",\"origin\":\"Structuring Our Wiki\",\"qtype\":\"rememberq\",\"question\":\"Why should you consider moving information that is of long-term importance out of your meeting notes into some other location after a meeting?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210110174256345\":{\"title\":\"Ta:20210110174256345\",\"answer\":\"<code>&#96;monospace text&#96;</code>\",\"created\":\"20210110174257685\",\"modified\":\"20210409022755636\",\"origin\":\"Journal Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What is the wikitext syntax for monospace text applied to a few individual words?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210110182159208\":{\"title\":\"Ta:20210110182159208\",\"answer\":\"UTC (otherwise known as GMT)\",\"created\":\"20210110182200524\",\"modified\":\"20210409024941234\",\"origin\":\"Meeting Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What time zone are TiddlyWiki timestamps stored in?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210115212301253\":{\"title\":\"Ta:20210115212301253\",\"answer\":\"WYSIWYM editors involve the use of markup syntax (extra phrases and symbols) to explain what a page should look like when viewed, while WYSIWYG editors make the editor look like the page will look when it's viewed.\",\"created\":\"20210115212302541\",\"modified\":\"20210408175554092\",\"origin\":\"Wikitext\",\"qtype\":\"rememberq\",\"question\":\"Explain how a WYSIWYM editor differs from a WYSIWYG editor.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210115212635781\":{\"title\":\"Ta:20210115212635781\",\"answer\":\"An editor toolbar presenting a number of buttons that insert common snippets used to create formatting like bold, italics, and links.\",\"created\":\"20210115212637089\",\"modified\":\"20210408175600964\",\"origin\":\"Wikitext\",\"qtype\":\"rememberq\",\"question\":\"What tool does TiddlyWiki's editor provide to help you remember wikitext syntax?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210115212752286\":{\"title\":\"Ta:20210115212752286\",\"created\":\"20210115212753295\",\"modified\":\"20210408175605341\",\"origin\":\"Wikitext\",\"qtype\":\"remembercz\",\"question\":\"Text written in a raw markup language may be referred to as {source} text.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210115212808753\":{\"title\":\"Ta:20210115212808753\",\"created\":\"20210115212809740\",\"modified\":\"20210408175606717\",\"origin\":\"Wikitext\",\"qtype\":\"remembercz\",\"question\":\"The process of turning the source of a markup language into output is called {rendering}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210115212940187\":{\"title\":\"Ta:20210115212940187\",\"answer\":\"A WYSIWYM editor (using a markup language).\",\"created\":\"20210115212941377\",\"modified\":\"20210408175610078\",\"origin\":\"Wikitext\",\"qtype\":\"rememberq\",\"question\":\"What type of editor shows a description of how the text should be formatted, rather than a visual representation of that formatting?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210115213922401\":{\"title\":\"Ta:20210115213922401\",\"answer\":\"One (`[[my text|my target]]`).\",\"created\":\"20210115213923680\",\"modified\":\"20210409212938415\",\"origin\":\"Templates and the Current Tiddler\",\"qtype\":\"rememberq\",\"question\":\"How many pipe characters are used when specifying a link with different displayed text and target?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210115213943747\":{\"title\":\"Ta:20210115213943747\",\"answer\":\"Two (`{{My Tiddler||My Template}}`).\",\"created\":\"20210115213946406\",\"modified\":\"20210409212939998\",\"origin\":\"Templates and the Current Tiddler\",\"qtype\":\"rememberq\",\"question\":\"How many pipe characters are used when specifying a template transclusion?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210116004748514\":{\"title\":\"Ta:20210116004748514\",\"answer\":\"`[[my text|MyTiddler]]`\",\"created\":\"20210116004751472\",\"modified\":\"20210418131753420\",\"origin\":\"Links\",\"qtype\":\"rememberq\",\"question\":\"What is the wikitext syntax to link to a tiddler called `MyTiddler`, with the link text `my text`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210116010959834\":{\"title\":\"Ta:20210116010959834\",\"created\":\"20210116011003179\",\"modified\":\"20210408175611881\",\"origin\":\"Wikitext\",\"qtype\":\"remembercz\",\"question\":\"{Syntax} comprises the rules for producing correctly formed sentences or expressions in a natural or computer language.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210116171504180\":{\"title\":\"Ta:20210116171504180\",\"answer\":\"It contains a space between filter steps, which TiddlyWiki interprets as part of the operator name, thus asking it to select tiddlers that have an empty field called <code>&nbsp;backlinks</code> (namely, all of them).\",\"created\":\"20210116171505337\",\"modified\":\"20210409152451829\",\"origin\":\"Using Filter Expressions\",\"qtype\":\"rememberq\",\"question\":\"Why does the filter expression `[!is[system] backlinks[]]` not retrieve a list of tiddlers that link to other non-system tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210116234613487\":{\"title\":\"Ta:20210116234613487\",\"answer\":\"`[[a search engine|https://www.google.com]]`\",\"created\":\"20210116234614891\",\"modified\":\"20210408180654771\",\"origin\":\"Links\",\"qtype\":\"rememberq\",\"question\":\"What is the wikitext syntax to create a link to Google (`https://www.google.com`) with the link text `a search engine`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210116234645661\":{\"title\":\"Ta:20210116234645661\",\"answer\":\"An internal link links to another tiddler in your wiki. An external link links to a website or other URL outside your wiki.\",\"created\":\"20210116234647021\",\"modified\":\"20210408180657514\",\"origin\":\"Links\",\"qtype\":\"rememberq\",\"question\":\"Explain the difference between an //internal link// and an //external link//.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210116234706260\":{\"title\":\"Ta:20210116234706260\",\"answer\":\"An external link.\",\"created\":\"20210116234707458\",\"modified\":\"20210408180703664\",\"origin\":\"Links\",\"qtype\":\"rememberq\",\"question\":\"What kind of link does not define a relationship between two tiddlers when placed in a tiddler's `text` field?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210116235201834\":{\"title\":\"Ta:20210116235201834\",\"created\":\"20210116235203718\",\"modified\":\"20210418131738649\",\"origin\":\"Block Mode and Inline Mode\",\"qtype\":\"remembercz\",\"question\":\"The two //modes// TiddlyWiki uses when reading wikitext are {block} mode and {inline} mode.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210116235225037\":{\"title\":\"Ta:20210116235225037\",\"created\":\"20210116235227184\",\"modified\":\"20210418131736503\",\"origin\":\"Block Mode and Inline Mode\",\"qtype\":\"remembercz\",\"question\":\"In block mode, elements are stacked {vertically} (vertical/horizontal).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210116235249040\":{\"title\":\"Ta:20210116235249040\",\"created\":\"20210116235250122\",\"modified\":\"20210410142823829\",\"origin\":\"Block Mode and Inline Mode\",\"qtype\":\"remembercz\",\"question\":\"In inline mode, elements are stacked {horizontally} (vertical/horizontal).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210116235314838\":{\"title\":\"Ta:20210116235314838\",\"answer\":\"\",\"created\":\"20210116235316108\",\"modified\":\"20210410142829246\",\"origin\":\"Block Mode and Inline Mode\",\"qtype\":\"remembercz\",\"question\":\"You cannot start a new paragraph or insert vertical space within {inline} mode.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210116235422856\":{\"title\":\"Ta:20210116235422856\",\"answer\":\"By leaving a blank line in your wikitext.\",\"created\":\"20210116235424609\",\"modified\":\"20210418131947884\",\"origin\":\"Block Mode and Inline Mode\",\"qtype\":\"rememberq\",\"question\":\"If you are in inline mode within some wikitext, how do you re-enter block mode prior to a block-mode element such as a list?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210116235525673\":{\"title\":\"Ta:20210116235525673\",\"answer\":\"If you don't leave a blank line, TiddlyWiki will still be in inline mode from rendering the paragraph, but a list is a block-mode element and can't start in inline mode.\",\"created\":\"20210116235528737\",\"modified\":\"20210418131730658\",\"origin\":\"Block Mode and Inline Mode\",\"qtype\":\"rememberq\",\"question\":\"Using the concept of rendering modes, explain why you must leave a blank line between a paragraph and a bulleted list in TiddlyWiki.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210116235640904\":{\"title\":\"Ta:20210116235640904\",\"answer\":\"e.g., including a field containing a piece of data like a phone number, email address, or link to another tiddler in a paragraph, bulleted list, or table\",\"created\":\"20210116235642580\",\"modified\":\"20210410142922745\",\"origin\":\"Block Mode and Inline Mode\",\"qtype\":\"rememberq\",\"question\":\"Give an example of when you might want to transclude a field in inline mode (try to pick a new one).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210116235725120\":{\"title\":\"Ta:20210116235725120\",\"answer\":\"E.g., when transcluding an entire tiddler containing multiple paragraphs, when transcluding a complex template\",\"created\":\"20210116235726982\",\"modified\":\"20210410142927530\",\"origin\":\"Block Mode and Inline Mode\",\"qtype\":\"rememberq\",\"question\":\"Give an example of when you might want to transclude a field in block mode (try to pick a new one).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210116235841638\":{\"title\":\"Ta:20210116235841638\",\"answer\":\"Italic text (the `em` HTML element) is an inline-mode element. When TiddlyWiki is inside an inline-mode element, it will not look for block-mode elements like new paragraphs.\",\"created\":\"20210116235910756\",\"modified\":\"20210410142936982\",\"origin\":\"Block Mode and Inline Mode\",\"qtype\":\"rememberq\",\"question\":\"Using the concept of inline mode, explain why opening italics with `//` and never closing them results in the remainder of the tiddler turning into a single paragraph.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210117001839027\":{\"title\":\"Ta:20210117001839027\",\"answer\":\"Continue periodically reviewing the takeaways by opening the book and clicking on the review banner.\",\"created\":\"20210117001840527\",\"modified\":\"20210504013630914\",\"origin\":\"How to Use This Book\",\"qtype\":\"rememberq\",\"question\":\"If you need to take a break from learning TiddlyWiki, what should you do to avoid forgetting what you've learned in //Grok TiddlyWiki//?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210117012531956\":{\"title\":\"Ta:20210117012531956\",\"answer\":\"The comment ends after the first `-->`, so `comment. -->` appears in the output.\",\"created\":\"20210117012534804\",\"modified\":\"20210409173357510\",\"origin\":\"Comments\",\"qtype\":\"rememberq\",\"question\":\"What is wrong with this comment?: `<!-- here is an <!-- especially commenty --> comment. -->`\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210117012550524\":{\"title\":\"Ta:20210117012550524\",\"created\":\"20210117012551481\",\"modified\":\"20210409173400551\",\"origin\":\"Comments\",\"qtype\":\"remembercz\",\"question\":\"Turning what would otherwise be functional wikitext into a comment temporarily, preventing it from appearing in the output, is called {commenting out} that wikitext.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210117013403056\":{\"title\":\"Ta:20210117013403056\",\"answer\":\"`The password is \\\"purple<!-- elephant-->\\\".`\",\"created\":\"20210117013406348\",\"modified\":\"20210409173415228\",\"origin\":\"Comments\",\"qtype\":\"rememberq\",\"question\":\"Make the following wikitext appear to say that the password is \\\"purple\\\" when it's rendered, by inserting a comment: `The password is \\\"purple elephant\\\".`\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210117013433768\":{\"title\":\"Ta:20210117013433768\",\"answer\":\"`<!--`\",\"created\":\"20210117013435287\",\"modified\":\"20210409173426018\",\"origin\":\"Comments\",\"qtype\":\"rememberq\",\"question\":\"What string of characters begins a comment in HTML or wikitext?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210117013445546\":{\"title\":\"Ta:20210117013445546\",\"answer\":\"`-->`\",\"created\":\"20210117013447362\",\"modified\":\"20210409173427726\",\"origin\":\"Comments\",\"qtype\":\"rememberq\",\"question\":\"What string of characters ends a comment in HTML or wikitext?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210120022054991\":{\"title\":\"Ta:20210120022054991\",\"created\":\"20210120022056041\",\"modified\":\"20210409174725932\",\"origin\":\"When Things Go Wrong\",\"qtype\":\"remembercz\",\"question\":\"If you ever find yourself unsure how something works, try creating a/n {experiment} that will answer your question.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210120022211371\":{\"title\":\"Ta:20210120022211371\",\"answer\":\"If your first attempt at one of the chunks doesn't work right, you have a better idea of where the problem could be.\",\"created\":\"20210120022212709\",\"modified\":\"20210409174729267\",\"origin\":\"When Things Go Wrong\",\"qtype\":\"rememberq\",\"question\":\"Why should you split complicated problems into multiple chunks and solve each chunk by itself?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210120232130346\":{\"title\":\"Ta:20210120232130346\",\"answer\":\"Explain in detail to the duck what you are trying to do, in the hopes that this will call attention to your mistake.\",\"created\":\"20210120232131457\",\"modified\":\"20210409174734273\",\"origin\":\"When Things Go Wrong\",\"qtype\":\"rememberq\",\"question\":\"How can you use a rubber duck to help solve your TiddlyWiki problems?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210120232349960\":{\"title\":\"Ta:20210120232349960\",\"answer\":\"The element inspector (a part of the browser's developer tools).\",\"created\":\"20210120232350802\",\"modified\":\"20210409174739152\",\"origin\":\"When Things Go Wrong\",\"qtype\":\"rememberq\",\"question\":\"What web browser feature can you use to inspect the HTML of a specific element within TiddlyWiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210120232418473\":{\"title\":\"Ta:20210120232418473\",\"answer\":\"On the menu when you right-click anywhere on the page.\",\"created\":\"20210120232419282\",\"modified\":\"20210409174744170\",\"origin\":\"When Things Go Wrong\",\"qtype\":\"rememberq\",\"question\":\"Where do you find the option to open your web browser's HTML inspector?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210120232620760\":{\"title\":\"Ta:20210120232620760\",\"answer\":\"Display the values of the intermediate variables or fields by themselves to check whether they contain what you expect.\",\"created\":\"20210120232623385\",\"modified\":\"20210409174751819\",\"origin\":\"When Things Go Wrong\",\"qtype\":\"rememberq\",\"question\":\"What technique can you use to trace which part of some complicated wikitext is having a problem, without having to break the wikitext apart into smaller pieces?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210120232711407\":{\"title\":\"Ta:20210120232711407\",\"answer\":\"Step away from the computer for a few minutes.\",\"created\":\"20210120232712727\",\"modified\":\"20210409174804924\",\"origin\":\"When Things Go Wrong\",\"qtype\":\"rememberq\",\"question\":\"If you become frustrated at a TiddlyWiki problem, what is the fastest way to get back on track?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210120233224812\":{\"title\":\"Ta:20210120233224812\",\"answer\":\"Explaining the problem to a rubber duck (or a person).\",\"created\":\"20210120233231796\",\"modified\":\"20210409174807110\",\"origin\":\"When Things Go Wrong\",\"qtype\":\"rememberq\",\"question\":\"What troubleshooting technique helps you to identify places where you believe your wikitext does one thing, but it actually does something else?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210123231355355\":{\"title\":\"Ta:20210123231355355\",\"answer\":\"`all[current]`\",\"created\":\"20210123231400916\",\"modified\":\"20210409212949013\",\"origin\":\"Templates and the Current Tiddler\",\"qtype\":\"rememberq\",\"question\":\"What filter step constructs one output tiddler, the title of the current tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210124162823766\":{\"title\":\"Ta:20210124162823766\",\"answer\":\"Membership.\",\"created\":\"20210124162824443\",\"modified\":\"20210409020145969\",\"origin\":\"Tags\",\"qtype\":\"rememberq\",\"question\":\"What type of relationship is expressed by a TiddlyWiki tag?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210124183029121\":{\"title\":\"Ta:20210124183029121\",\"answer\":\"Place `<<<` above and below the section of text you want to quote.\",\"created\":\"20210124183030116\",\"modified\":\"20210409022758252\",\"origin\":\"Journal Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What is the wikitext syntax to create a block quote that spans multiple lines?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210124183102272\":{\"title\":\"Ta:20210124183102272\",\"answer\":\"Place <code>&#96;&#96;&#96;</code> above and below the section of text you want to include in the code block.\",\"created\":\"20210124183103500\",\"modified\":\"20210409022802316\",\"origin\":\"Journal Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What is the wikitext syntax to create a code (monospaced) block with multiple lines?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210124183159608\":{\"title\":\"Ta:20210124183159608\",\"answer\":\"Begin each list item on a new line with the character `*`.\",\"created\":\"20210124183201434\",\"modified\":\"20210409022808630\",\"origin\":\"Journal Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What is the wikitext syntax to create a bulleted list?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210124183212683\":{\"title\":\"Ta:20210124183212683\",\"answer\":\"Begin each list item on a new line with the character `#`.\",\"created\":\"20210124183214276\",\"modified\":\"20210409022810241\",\"origin\":\"Journal Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"What is the wikitext syntax to create a numbered list?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210130004746710\":{\"title\":\"Ta:20210130004746710\",\"answer\":\"A macro.\",\"created\":\"20210130004749140\",\"modified\":\"20210410143310001\",\"origin\":\"Templates vs. Macros\",\"qtype\":\"rememberq\",\"question\":\"If you intend to reuse the same snippet multiple times within a tiddler with different parameters each time, would you likely choose a macro or a template?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210130004804392\":{\"title\":\"Ta:20210130004804392\",\"answer\":\"A template.\",\"created\":\"20210130004805420\",\"modified\":\"20210410143311667\",\"origin\":\"Templates vs. Macros\",\"qtype\":\"rememberq\",\"question\":\"If you intend to transclude many tiddlers using the same formatting, would you likely choose a macro or a template?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210130004950978\":{\"title\":\"Ta:20210130004950978\",\"answer\":\"Include a macro within the template.\",\"created\":\"20210130004952424\",\"modified\":\"20210410143318583\",\"origin\":\"Templates vs. Macros\",\"qtype\":\"rememberq\",\"question\":\"How can you use text substitution with a template?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210130212746305\":{\"title\":\"Ta:20210130212746305\",\"created\":\"20210130212747987\",\"modified\":\"20210418131804163\",\"origin\":\"Tiddler Titles\",\"qtype\":\"remembercz\",\"question\":\"A knowledge tiddler should be focused on a single {idea}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210130212814069\":{\"title\":\"Ta:20210130212814069\",\"created\":\"20210130212815216\",\"modified\":\"20210409130127397\",\"origin\":\"Tiddler Titles\",\"qtype\":\"remembercz\",\"question\":\"If a noun phrase seems insufficiently precise for titling a tiddler, try using a {claim} (type of statement) instead.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210130212836866\":{\"title\":\"Ta:20210130212836866\",\"answer\":\"//Not//.\",\"created\":\"20210130212837495\",\"modified\":\"20210409130133180\",\"origin\":\"Tiddler Titles\",\"qtype\":\"rememberq\",\"question\":\"What word should be avoided to make your tiddler titles sharper?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210130213337117\":{\"title\":\"Ta:20210130213337117\",\"answer\":\"Namespacing (starting all their names with a constant prefix, perhaps followed by a slash or colon).\",\"created\":\"20210130213338912\",\"modified\":\"20210409131331825\",\"origin\":\"Naming Conventions\",\"qtype\":\"rememberq\",\"question\":\"What naming technique may help organize a large number of tiddlers of the same type or on the same topic?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210130213501953\":{\"title\":\"Ta:20210130213501953\",\"answer\":\"It can make you bring hierarchical thinking to places where it doesn't belong, discouraging you from reusing the tiddlers in different contexts.\",\"created\":\"20210130213503269\",\"modified\":\"20210418132025561\",\"origin\":\"Naming Conventions\",\"qtype\":\"rememberq\",\"question\":\"How can namespacing your tiddlers limit your thinking if the technique is used inappropriately?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210130214416899\":{\"title\":\"Ta:20210130214416899\",\"answer\":\"A tag pill.\",\"created\":\"20210130214417669\",\"modified\":\"20210409020147458\",\"origin\":\"Tags\",\"qtype\":\"rememberq\",\"question\":\"What is the colored ellipse around a tag's name in TiddlyWiki called?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210130214444181\":{\"title\":\"Ta:20210130214444181\",\"answer\":\"Click on the tag pill; the drop-down menu that appears will show the tagged tiddlers.\",\"created\":\"20210130214445363\",\"modified\":\"20210418131851643\",\"origin\":\"Tags\",\"qtype\":\"rememberq\",\"question\":\"If you are looking at a tag in TiddlyWiki's interface, how can you obtain a list of all tiddlers with that tag?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210130223813261\":{\"title\":\"Ta:20210130223813261\",\"answer\":\"Integration, reference, and serendipity.\",\"created\":\"20210130223814292\",\"modified\":\"20210409141341567\",\"origin\":\"Creating Evergreen Notes\",\"qtype\":\"rememberq\",\"question\":\"What three functions does //Grok TiddlyWiki// say notes have? (in alphabetical order)\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210130223903147\":{\"title\":\"Ta:20210130223903147\",\"answer\":\"Writing the notes prompts you to think about the information more deeply, so you are more likely to remember it without needing the notes in the future.\",\"created\":\"20210130223904258\",\"modified\":\"20210409141407324\",\"origin\":\"Creating Evergreen Notes\",\"qtype\":\"rememberq\",\"question\":\"Explain how notes help you //integrate// information (one of their three functions).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210130223931544\":{\"title\":\"Ta:20210130223931544\",\"answer\":\"You remember that you took relevant notes on some topic you're thinking about, and you go find those notes.\",\"created\":\"20210130223932856\",\"modified\":\"20210409141415396\",\"origin\":\"Creating Evergreen Notes\",\"qtype\":\"rememberq\",\"question\":\"Explain how notes are used for //reference// (one of their three functions).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210130224008308\":{\"title\":\"Ta:20210130224008308\",\"answer\":\"You run across the notes at a time they are useful, having completely forgotten you took them.\",\"created\":\"20210130224009549\",\"modified\":\"20210409141418099\",\"origin\":\"Creating Evergreen Notes\",\"qtype\":\"rememberq\",\"question\":\"Explain how notes can create //serendipity// (one of their three functions).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210130224110199\":{\"title\":\"Ta:20210130224110199\",\"answer\":\"Once you have a lot of notes, the keywords you search for are likely found in so many places it will be difficult to find the notes.\",\"created\":\"20210130224111387\",\"modified\":\"20210409141426858\",\"origin\":\"Creating Evergreen Notes\",\"qtype\":\"rememberq\",\"question\":\"Why is full-text search insufficient to find notes that are not stored in a relevant retrieval context? (reason relating to scale)\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210130224154129\":{\"title\":\"Ta:20210130224154129\",\"answer\":\"Reference (knowing some relevant notes exist and looking for them).\",\"created\":\"20210130224157118\",\"modified\":\"20210409141431428\",\"origin\":\"Creating Evergreen Notes\",\"qtype\":\"rememberq\",\"question\":\"Full-text search can only help you use notes in which one of //Grok TiddlyWiki//'s functions of notes?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210130224237554\":{\"title\":\"Ta:20210130224237554\",\"answer\":\"A context in which you are likely to want to find the information in the notes.\",\"created\":\"20210130224238806\",\"modified\":\"20210409141448578\",\"origin\":\"Creating Evergreen Notes\",\"qtype\":\"rememberq\",\"question\":\"In the context of evergreen notes, what is a //retrieval context//?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131035147675\":{\"title\":\"Ta:20210131035147675\",\"answer\":\"At the time you create the note, you do not know what context you may need the note in later, so the more relevant contexts you place it in, the more likely you pick a useful one.\",\"created\":\"20210131035149131\",\"modified\":\"20210409141457218\",\"origin\":\"Creating Evergreen Notes\",\"qtype\":\"rememberq\",\"question\":\"Why is it valuable to relate a new note to as many relevant things as possible? Use the concept of a //retrieval context//.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131035234849\":{\"title\":\"Ta:20210131035234849\",\"created\":\"20210131035236136\",\"modified\":\"20210409141543558\",\"origin\":\"Creating Evergreen Notes\",\"qtype\":\"remembercz\",\"question\":\"Notes that are placed in a retrieval context, are related to many other ideas, and are continually updated as more information comes available can be called {evergreen} notes.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131035326236\":{\"title\":\"Ta:20210131035326236\",\"created\":\"20210131035327968\",\"modified\":\"20210409141546766\",\"origin\":\"Creating Evergreen Notes\",\"qtype\":\"remembercz\",\"question\":\"Notes should be placed only in contexts in which they may actually be {useful} in the future.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131035518635\":{\"title\":\"Ta:20210131035518635\",\"created\":\"20210131035521797\",\"modified\":\"20210409141548429\",\"origin\":\"Creating Evergreen Notes\",\"qtype\":\"remembercz\",\"question\":\"The {broken windows} theory (sociology term) of notes: when your notes are wrong or out of date, you are discouraged from using or updating the notes, producing a spiral of decay.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131035624182\":{\"title\":\"Ta:20210131035624182\",\"answer\":\"Filling your notes with ideas that have no long-term importance draws your attention away from the parts that matter, making your notes harder to use.\",\"created\":\"20210131035625205\",\"modified\":\"20210409141551184\",\"origin\":\"Creating Evergreen Notes\",\"qtype\":\"rememberq\",\"question\":\"Why should you avoid making all your notes into evergreen notes?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131035704014\":{\"title\":\"Ta:20210131035704014\",\"created\":\"20210131035705764\",\"modified\":\"20210409141554057\",\"origin\":\"Creating Evergreen Notes\",\"qtype\":\"remembercz\",\"question\":\"To decide whether a note should be turned into an evergreen note, ask yourself whether you want the note to {outlive the day}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131162834222\":{\"title\":\"Ta:20210131162834222\",\"answer\":\"Click the gear icon in the page toolbar, under the wiki's title in the sidebar.\",\"created\":\"20210131162835586\",\"modified\":\"20210818141636826\",\"origin\":\"Tweaking Your Settings\",\"qtype\":\"rememberq\",\"question\":\"How do you open the //control panel// in a stock TiddlyWiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131162854519\":{\"title\":\"Ta:20210131162854519\",\"created\":\"20210131162855974\",\"modified\":\"20210408175058224\",\"origin\":\"Tweaking Your Settings\",\"qtype\":\"remembercz\",\"question\":\"The color scheme used by a TiddlyWiki is called its {palette}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131205501655\":{\"title\":\"Ta:20210131205501655\",\"answer\":\"Macro definitions.\",\"created\":\"20210131205502716\",\"modified\":\"20210409222155366\",\"origin\":\"Text Substitution\",\"qtype\":\"rememberq\",\"question\":\"Text substitution occurs only within what context? (TiddlyWiki concept)\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131205538119\":{\"title\":\"Ta:20210131205538119\",\"created\":\"20210131205539128\",\"modified\":\"20210409222156963\",\"origin\":\"Text Substitution\",\"qtype\":\"remembercz\",\"question\":\"While TiddlyWiki is doing text substitution, it stops processing {wikitext markup}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131205851625\":{\"title\":\"Ta:20210131205851625\",\"answer\":\"A single chunk of valid wikitext.\",\"created\":\"20210131205852639\",\"modified\":\"20210409222207781\",\"origin\":\"Text Substitution\",\"qtype\":\"rememberq\",\"question\":\"A macro using text substitution is able to accomplish the equivalent of `{{ {{!!manager}}!!phone }}` because it results in what?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131205933326\":{\"title\":\"Ta:20210131205933326\",\"answer\":\"`<<__myparameter__>>`\",\"created\":\"20210131205934532\",\"modified\":\"20210409222217865\",\"origin\":\"Text Substitution\",\"qtype\":\"rememberq\",\"question\":\"What wikitext syntax can you use to refer to the value of a parameter `myparameter` of a macro without doing text substitution?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131210204783\":{\"title\":\"Ta:20210131210204783\",\"answer\":\"The former syntax doesn't result in text substitution, so there is no possibility of errors if special characters like `]]` or `\\\"` are used to surround <code>&#36;myparameter&#36;</code> but also appear in its value.\",\"created\":\"20210131210208174\",\"modified\":\"20210409222244576\",\"origin\":\"Text Substitution\",\"qtype\":\"rememberq\",\"question\":\"Why is it usually better to write `<<__myparameter__>>` rather than <code>&#36;myparameter&#36;</code> if it would have the same effect?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131211152969\":{\"title\":\"Ta:20210131211152969\",\"answer\":\"It does not begin with a capital letter.\",\"created\":\"20210131211154457\",\"modified\":\"20210321231640425\",\"origin\":\"CamelCase\",\"qtype\":\"rememberq\",\"question\":\"Why is `camelCaseWord` not in CamelCase?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131211210978\":{\"title\":\"Ta:20210131211210978\",\"answer\":\"It does not contain a capital letter immediately following a lowercase letter.\",\"created\":\"20210131211212504\",\"modified\":\"20210320135849194\",\"origin\":\"CamelCase\",\"qtype\":\"rememberq\",\"question\":\"Why is `Camel2Camel` not in CamelCase?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131211235165\":{\"title\":\"Ta:20210131211235165\",\"answer\":\"`\\\\rules except wikilink`\",\"created\":\"20210131211236448\",\"modified\":\"20210311183357631\",\"origin\":\"CamelCase\",\"qtype\":\"rememberq\",\"question\":\"CamelCase linking can be turned off for a specific tiddler using what pragma?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131211319408\":{\"title\":\"Ta:20210131211319408\",\"answer\":\"Precede it with a tilde, `~CamelCase`.\",\"created\":\"20210131211320419\",\"modified\":\"20210311183354737\",\"origin\":\"CamelCase\",\"qtype\":\"rememberq\",\"question\":\"How do you escape the word `CamelCase`, so that it does not turn into a link when camel-case linking is on?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131212436299\":{\"title\":\"Ta:20210131212436299\",\"answer\":\"E.g., link from the meeting to the project, link from the project to the meeting, put a `meetings` list field on the project, tag the meeting with the project tiddler, create a giant table mapping meetings to projects\",\"created\":\"20210131212437525\",\"modified\":\"20210409025824923\",\"origin\":\"Project Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"Suggest a way to relate a meeting to a project (try to pick a new one).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210131212528420\":{\"title\":\"Ta:20210131212528420\",\"answer\":\"Effectively using custom fields this way usually requires creating a small amount of ''custom logic'' so you can easily see and edit the fields.\",\"created\":\"20210131212529677\",\"modified\":\"20210409025830100\",\"origin\":\"Project Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"Why are fields a higher-effort method of relating tiddlers than tags?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206151704888\":{\"title\":\"Ta:20210206151704888\",\"created\":\"20210206151706663\",\"modified\":\"20210418131749070\",\"origin\":\"Multi-Run Filters\",\"qtype\":\"remembercz\",\"question\":\"With a single filter run, you can only find tiddlers that match {all of} a set of conditions.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206151741395\":{\"title\":\"Ta:20210206151741395\",\"answer\":\"By placing the conditions for each branch of the OR in a separate filter run.\",\"created\":\"20210206151742797\",\"modified\":\"20210410181916526\",\"origin\":\"Multi-Run Filters\",\"qtype\":\"rememberq\",\"question\":\"In a filter expression, you create an OR condition how?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206151820321\":{\"title\":\"Ta:20210206151820321\",\"answer\":\"`[tag[Journal]] [tag[Meeting]]`\",\"created\":\"20210206151821987\",\"modified\":\"20210410183003166\",\"origin\":\"Multi-Run Filters\",\"qtype\":\"rememberq\",\"question\":\"Write a filter expression that shows all tiddlers that are tagged `Journal` or `Meeting`.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206151843430\":{\"title\":\"Ta:20210206151843430\",\"created\":\"20210206151845763\",\"modified\":\"20210410183007155\",\"origin\":\"Multi-Run Filters\",\"qtype\":\"remembercz\",\"question\":\"In a filter expression, you can include spaces between filter {runs} but not between filter {steps}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206152022536\":{\"title\":\"Ta:20210206152022536\",\"answer\":\"A tiddler list is a basic filter expression, consisting of several runs, each of which select a single tiddler.\",\"created\":\"20210206152024753\",\"modified\":\"20210410183030931\",\"origin\":\"Multi-Run Filters\",\"qtype\":\"rememberq\",\"question\":\"Explain the relationship between tiddler lists and filter expressions.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206152226708\":{\"title\":\"Ta:20210206152226708\",\"answer\":\"//Dominant appending// (the tiddler appears in the last place it showed up and is removed from any prior position in the list).\",\"created\":\"20210206152230480\",\"modified\":\"20210410183041079\",\"origin\":\"Multi-Run Filters\",\"qtype\":\"rememberq\",\"question\":\"When the same tiddler appears in the output of multiple consecutive filter runs, what concept does TiddlyWiki use to determine where the tiddler should be listed?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206152347300\":{\"title\":\"Ta:20210206152347300\",\"answer\":\"`=` (or `:all`)\",\"created\":\"20210206152348589\",\"modified\":\"20210410183058421\",\"origin\":\"Multi-Run Filters\",\"qtype\":\"rememberq\",\"question\":\"What prefix can you add to a filter run to inhibit dominant appending and allow duplicate values in the list?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206152409644\":{\"title\":\"Ta:20210206152409644\",\"answer\":\"`+` (or `:and`)\",\"created\":\"20210206152410753\",\"modified\":\"20210410183109577\",\"origin\":\"Multi-Run Filters\",\"qtype\":\"rememberq\",\"question\":\"What prefix can you add to a filter run to AND it with the accumulated results of previous runs?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206152427628\":{\"title\":\"Ta:20210206152427628\",\"answer\":\"`-` (or `:except`)\",\"created\":\"20210206152428907\",\"modified\":\"20210410183127863\",\"origin\":\"Multi-Run Filters\",\"qtype\":\"rememberq\",\"question\":\"What prefix can you add to a filter run to remove all outputs of this run from the accumulated results?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206152454854\":{\"title\":\"Ta:20210206152454854\",\"answer\":\"`~` (or `:else`)\",\"created\":\"20210206152455981\",\"modified\":\"20210410183144993\",\"origin\":\"Multi-Run Filters\",\"qtype\":\"rememberq\",\"question\":\"What prefix can you add to a filter run to ignore it unless the accumulated results are empty?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206152557092\":{\"title\":\"Ta:20210206152557092\",\"answer\":\"Removes them from their current position and puts them at the end of the results.\",\"created\":\"20210206152558864\",\"modified\":\"20210410183203836\",\"origin\":\"Multi-Run Filters\",\"qtype\":\"rememberq\",\"question\":\"In a dominant append, TiddlyWiki does what to tiddlers that are already in the accumulated results?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206152939201\":{\"title\":\"Ta:20210206152939201\",\"answer\":\"`[tag[Journal]] -[search[fudge]tag[Meeting]]`\",\"created\":\"20210206152939704\",\"modified\":\"20210410183217605\",\"origin\":\"Multi-Run Filters\",\"qtype\":\"rememberq\",\"question\":\"Write a filter expression that shows all tiddlers that are tagged `Journal`, but do not both contain the word `fudge` in their `text` field and have the tag `Meeting` (having one of the latter two conditions is OK).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206153058234\":{\"title\":\"Ta:20210206153058234\",\"answer\":\"`[tag[Contact]] [search[JaneDoe]] +[sort[]]`\",\"created\":\"20210206153059645\",\"modified\":\"20210410183233423\",\"origin\":\"Multi-Run Filters\",\"qtype\":\"rememberq\",\"question\":\"Write a filter expression that finds all tiddlers that are either tagged `Contact` or contain the word `JaneDoe` in their `text` field. The list should be sorted alphabetically.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206163511138\":{\"title\":\"Ta:20210206163511138\",\"answer\":\"Slice your content up into appropriate tiddlers.\",\"created\":\"20210206163512092\",\"modified\":\"20210409133647911\",\"origin\":\"Slicing Up Content\",\"qtype\":\"rememberq\",\"question\":\"What is the best way to create opportunities for reuse of content in TiddlyWiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206163533246\":{\"title\":\"Ta:20210206163533246\",\"created\":\"20210206163534157\",\"modified\":\"20210409133649829\",\"origin\":\"Slicing Up Content\",\"qtype\":\"remembercz\",\"question\":\"Rule of thumb for dividing tiddlers: create more tiddlers than {you think you should}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206163552612\":{\"title\":\"Ta:20210206163552612\",\"created\":\"20210206163554160\",\"modified\":\"20210409133652153\",\"origin\":\"Slicing Up Content\",\"qtype\":\"remembercz\",\"question\":\"Rule of thumb for dividing tiddlers: a tiddler should not get so large that {it doesn't fit on your screen without scrolling}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206163621213\":{\"title\":\"Ta:20210206163621213\",\"answer\":\"Conceptual ones.\",\"created\":\"20210206163622535\",\"modified\":\"20210409133655044\",\"origin\":\"Slicing Up Content\",\"qtype\":\"rememberq\",\"question\":\"Dividing content into tiddlers should be done based on what type of boundaries?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206163646455\":{\"title\":\"Ta:20210206163646455\",\"created\":\"20210206163647779\",\"modified\":\"20210409133658178\",\"origin\":\"Slicing Up Content\",\"qtype\":\"remembercz\",\"question\":\"Tiddlers are used to model {nouns} (language metaphor).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206163709629\":{\"title\":\"Ta:20210206163709629\",\"answer\":\"By making the noun a tiddler and the properties fields of that tiddler.\",\"created\":\"20210206163710743\",\"modified\":\"20210409133700398\",\"origin\":\"Slicing Up Content\",\"qtype\":\"rememberq\",\"question\":\"How do we describe the properties of a noun in TiddlyWiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206163838278\":{\"title\":\"Ta:20210206163838278\",\"answer\":\"\",\"created\":\"20210206163841179\",\"modified\":\"20210409133707423\",\"origin\":\"Slicing Up Content\",\"qtype\":\"remembercz\",\"question\":\"When tiddlers gather together lists of other tiddlers that meet some criteria, they act like {sentences} (language metaphor).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206163910099\":{\"title\":\"Ta:20210206163910099\",\"created\":\"20210206163911006\",\"modified\":\"20210409133710434\",\"origin\":\"Slicing Up Content\",\"qtype\":\"remembercz\",\"question\":\"When tiddlers perform actions on other tiddlers, they act like {machines} (object in the physical world).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206164032797\":{\"title\":\"Ta:20210206164032797\",\"answer\":\"Transclusion.\",\"created\":\"20210206164033785\",\"modified\":\"20210409133739809\",\"origin\":\"Slicing Up Content\",\"qtype\":\"rememberq\",\"question\":\"What TiddlyWiki concept allows tiddlers to appear within other tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206164140818\":{\"title\":\"Ta:20210206164140818\",\"answer\":\"E.g., `caption`, `author`, `publisher`, `publication-year`, `genre`, `isbn`, `rating`, `price`\",\"created\":\"20210206164142791\",\"modified\":\"20210418131821886\",\"origin\":\"Slicing Up Content\",\"qtype\":\"rememberq\",\"question\":\"Give an example of a field you might use on a tiddler describing a book (try to pick a new one).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206170818374\":{\"title\":\"Ta:20210206170818374\",\"created\":\"20210206170822321\",\"modified\":\"20210418131815401\",\"origin\":\"Templates and the Current Tiddler\",\"qtype\":\"remembercz\",\"question\":\"Templates behave like {lenses}, objects that modify the way we see other objects.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206182434279\":{\"title\":\"Ta:20210206182434279\",\"answer\":\"`myop:one:two[param]`\",\"created\":\"20210206182435827\",\"modified\":\"20210409163144964\",\"origin\":\"Anatomy of Filter Steps\",\"qtype\":\"rememberq\",\"question\":\"If a filter operator `myop` accepts multiple suffixes, `one` and `two`, and a single parameter `param`, what would the resulting filter step look like?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206182504129\":{\"title\":\"Ta:20210206182504129\",\"answer\":\"`myop[one],[two]`\",\"created\":\"20210206182505096\",\"modified\":\"20210409163149763\",\"origin\":\"Anatomy of Filter Steps\",\"qtype\":\"rememberq\",\"question\":\"If a filter operator `myop` accepts multiple parameters, `one` and `two`, and has no suffix, what would the resulting filter step look like?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206183151676\":{\"title\":\"Ta:20210206183151676\",\"answer\":\"`[tag[Contact]search:phone[1234]]` (Careful: not `phone[1234]`, which requires the phone number to be //exactly// `1234`, or `contains:phone[1234]`, which would select a `1234` item from a tiddler list.)\",\"created\":\"20210206183206851\",\"modified\":\"20210409165630489\",\"origin\":\"Common Filter Operators\",\"qtype\":\"rememberq\",\"question\":\"Write a filter step that finds all contacts whose phone number contains the number `1234`.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206183227682\":{\"title\":\"Ta:20210206183227682\",\"answer\":\"`*`\",\"created\":\"20210206183229677\",\"modified\":\"20210409165638425\",\"origin\":\"Common Filter Operators\",\"qtype\":\"rememberq\",\"question\":\"What suffix to the `search` operator causes it to find matches in any field of a tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206183311072\":{\"title\":\"Ta:20210206183311072\",\"answer\":\"`title,text` (in context, `search:title,text[your search query here]`)\",\"created\":\"20210206183312052\",\"modified\":\"20210409165641047\",\"origin\":\"Common Filter Operators\",\"qtype\":\"rememberq\",\"question\":\"What suffix to the search operator causes it to find matches in either the `title` or `text` field of a tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206230505613\":{\"title\":\"Ta:20210206230505613\",\"answer\":\"The `$vars` widget.\",\"created\":\"20210206230506555\",\"modified\":\"20210512023550236\",\"origin\":\"Miscellaneous Widgets\",\"qtype\":\"rememberq\",\"question\":\"What widget allows you to collapse the setting of multiple variables into a single widget?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206230535658\":{\"title\":\"Ta:20210206230535658\",\"answer\":\"`<$let one=\\\"1\\\" two=\\\"2\\\"> ... </$let>`\",\"created\":\"20210206230537330\",\"modified\":\"20210512023552611\",\"origin\":\"Miscellaneous Widgets\",\"qtype\":\"rememberq\",\"question\":\"Write a `$let` widget that sets the variable `one` to `1` and the variable `two` to `2`.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206231054909\":{\"title\":\"Ta:20210206231054909\",\"answer\":\"As the values of transclusions (that is, `<$let <<name>>=\\\"value\\\">` is invalid).\",\"created\":\"20210206231058460\",\"modified\":\"20210502160959147\",\"origin\":\"Miscellaneous Widgets\",\"qtype\":\"rememberq\",\"question\":\"Unlike with the `$set` widget, variables set by the `$let` widget cannot have names specified how?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206231316184\":{\"title\":\"Ta:20210206231316184\",\"answer\":\"The `$count` widget.\",\"created\":\"20210206231317022\",\"modified\":\"20210502161012539\",\"origin\":\"Miscellaneous Widgets\",\"qtype\":\"rememberq\",\"question\":\"What widget displays the number of tiddlers that match a filter?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206231346639\":{\"title\":\"Ta:20210206231346639\",\"answer\":\"`<$count filter=\\\"[tag[Contact]]\\\"/>`\",\"created\":\"20210206231348368\",\"modified\":\"20210502161016052\",\"origin\":\"Miscellaneous Widgets\",\"qtype\":\"rememberq\",\"question\":\"Write a `$count` widget to describe how many tiddlers have the tag `Contact`.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206233305368\":{\"title\":\"Ta:20210206233305368\",\"answer\":\"The `$tiddler` widget.\",\"created\":\"20210206233306616\",\"modified\":\"20210502161018205\",\"origin\":\"Miscellaneous Widgets\",\"qtype\":\"rememberq\",\"question\":\"What widget is specifically designed to allow you to set the current tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206233413592\":{\"title\":\"Ta:20210206233413592\",\"answer\":\"`<$tiddler tiddler=<<myTiddler>>>{{||Example Template}}</$tiddler>` (you could also use a `$transclude` widget inside)\",\"created\":\"20210206233415186\",\"modified\":\"20210512023556342\",\"origin\":\"Miscellaneous Widgets\",\"qtype\":\"rememberq\",\"question\":\"Write a `$tiddler` widget with content that transcludes the tiddler specified in the `myTiddler` variable through the `Example Template` tiddler.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206233716739\":{\"title\":\"Ta:20210206233716739\",\"answer\":\"`<$radio field=\\\"color\\\" value=\\\"teal\\\">&nbsp;Teal</$radio>`\",\"created\":\"20210206233718557\",\"modified\":\"20210502161057496\",\"origin\":\"Miscellaneous Widgets\",\"qtype\":\"rememberq\",\"question\":\"Write a `$radio` widget that sets the value of the `color` field of the current tiddler to `teal`. The label on the button should say “Teal”.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206233839505\":{\"title\":\"Ta:20210206233839505\",\"answer\":\"The `$select` widget.\",\"created\":\"20210206233840308\",\"modified\":\"20210502161100735\",\"origin\":\"Miscellaneous Widgets\",\"qtype\":\"rememberq\",\"question\":\"What widget allows you to create a drop-down menu?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206233859381\":{\"title\":\"Ta:20210206233859381\",\"answer\":\"A series of `<option>` elements.\",\"created\":\"20210206233901108\",\"modified\":\"20210502161102676\",\"origin\":\"Miscellaneous Widgets\",\"qtype\":\"rememberq\",\"question\":\"The various choices offered by a `$select` widget are defined using what nested HTML element?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206234005759\":{\"title\":\"Ta:20210206234005759\",\"answer\":\"`<option value=\\\"excellent\\\">An Excellent Choice</option>`\",\"created\":\"20210206234006739\",\"modified\":\"20210502161108117\",\"origin\":\"Miscellaneous Widgets\",\"qtype\":\"rememberq\",\"question\":\"Write an `option` HTML element which displays the text “An Excellent Choice” and places the text `excellent` in its `$select` widget's bound field.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206234201889\":{\"title\":\"Ta:20210206234201889\",\"answer\":\"`<$select field=\\\"selection\\\"><$list filter=\\\"[tag[Ingredient]]\\\"><option value={{!!title}}>{{!!caption}}</option></$list></$select>`\",\"created\":\"20210206234203279\",\"modified\":\"20210502161126497\",\"origin\":\"Miscellaneous Widgets\",\"qtype\":\"rememberq\",\"question\":\"Write a `$select` widget that allows you to choose from all items with the tag `Ingredient`, placing the value of the selected ingredient's `title` field inside the `selection` field of the current tiddler. The text of each drop-down selection should be the `caption` field of the ingredient.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206234235502\":{\"title\":\"Ta:20210206234235502\",\"answer\":\"`$select`, `$list`, and `option`.\",\"created\":\"20210206234236937\",\"modified\":\"20210502161132257\",\"origin\":\"Miscellaneous Widgets\",\"qtype\":\"rememberq\",\"question\":\"What three widgets/HTML elements must be nested together to produce a drop-down list with dynamically chosen elements in TiddlyWiki?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210206234447506\":{\"title\":\"Ta:20210206234447506\",\"answer\":\"A drop-down menu always takes up the same (reasonable) amount of space, while radio buttons could consume an amount of space limited only by the number of matching items.\",\"created\":\"20210206234448719\",\"modified\":\"20210512023105538\",\"origin\":\"Miscellaneous Widgets\",\"qtype\":\"rememberq\",\"question\":\"Why is it usually better to use a `$select` widget than a `$radio` widget to select from a list of options matching a filter when you don't know how many items may be found by the filter?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207005116544\":{\"title\":\"Ta:20210207005116544\",\"answer\":\"They are assumed to be zero.\",\"created\":\"20210207005117396\",\"modified\":\"20210502162346961\",\"origin\":\"Working with Dates\",\"qtype\":\"rememberq\",\"question\":\"What happens if you leave digits out of a TiddlyWiki timestamp?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207005145077\":{\"title\":\"Ta:20210207005145077\",\"answer\":\"12:00 noon.\",\"created\":\"20210207005146102\",\"modified\":\"20210502162348732\",\"origin\":\"Working with Dates\",\"qtype\":\"rememberq\",\"question\":\"What time should you set a TiddlyWiki timestamp to if you care only about the date?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207005228571\":{\"title\":\"Ta:20210207005228571\",\"answer\":\"If you have a negative UTC offset, the date will otherwise be one day too early when adjusted for time zone and displayed.\",\"created\":\"20210207005229873\",\"modified\":\"20210502162351454\",\"origin\":\"Working with Dates\",\"qtype\":\"rememberq\",\"question\":\"Why is it a good idea to list a time of noon on timestamps if you care only about the date?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207005253185\":{\"title\":\"Ta:20210207005253185\",\"answer\":\"The `$view` widget.\",\"created\":\"20210207005254137\",\"modified\":\"20210502162354660\",\"origin\":\"Working with Dates\",\"qtype\":\"rememberq\",\"question\":\"What widget is used for displaying a date stored as a timestamp in a field of a tiddler in a user-friendly date format?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207005320123\":{\"title\":\"Ta:20210207005320123\",\"answer\":\"`<$view field=\\\"modified\\\" format=\\\"date\\\" template=\\\"YYYY\\\"/>`\",\"created\":\"20210207005321950\",\"modified\":\"20210502162403716\",\"origin\":\"Working with Dates\",\"qtype\":\"rememberq\",\"question\":\"Write a `$view` widget to display the four-digit year in which the current tiddler was last modified.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207005357385\":{\"title\":\"Ta:20210207005357385\",\"answer\":\"`format=\\\"date\\\"`\",\"created\":\"20210207005358389\",\"modified\":\"20210502162407228\",\"origin\":\"Working with Dates\",\"qtype\":\"rememberq\",\"question\":\"What attribute and value passed to the `$view` widget causes it to format a field as a date?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207005414293\":{\"title\":\"Ta:20210207005414293\",\"answer\":\"`template`\",\"created\":\"20210207005415452\",\"modified\":\"20210502162409032\",\"origin\":\"Working with Dates\",\"qtype\":\"rememberq\",\"question\":\"What additional attribute must be supplied to the `$view` widget when choosing `format=\\\"date\\\"`?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207005448591\":{\"title\":\"Ta:20210207005448591\",\"created\":\"20210207005450211\",\"modified\":\"20210502162411552\",\"origin\":\"Working with Dates\",\"qtype\":\"remembercz\",\"question\":\"The template used to describe how to format a date in TiddlyWiki is often known as a {format string}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207005515157\":{\"title\":\"Ta:20210207005515157\",\"answer\":\"The `now` macro.\",\"created\":\"20210207005516658\",\"modified\":\"20210502162419118\",\"origin\":\"Working with Dates\",\"qtype\":\"rememberq\",\"question\":\"What macro retrieves the current date and time and displays it in your chosen format?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207005537472\":{\"title\":\"Ta:20210207005537472\",\"answer\":\"`<<now \\\"YYYY\\\">>`\",\"created\":\"20210207005539067\",\"modified\":\"20210502162422784\",\"origin\":\"Working with Dates\",\"qtype\":\"rememberq\",\"question\":\"Write a call to the `now` macro that displays the current four-digit year.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207005559946\":{\"title\":\"Ta:20210207005559946\",\"answer\":\"The `days` operator.\",\"created\":\"20210207005601117\",\"modified\":\"20210502162426032\",\"origin\":\"Working with Dates\",\"qtype\":\"rememberq\",\"question\":\"What filter operator finds tiddlers with dates that are before or after a specific time?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207014041832\":{\"title\":\"Ta:20210207014041832\",\"answer\":\"`is[draft]`\",\"created\":\"20210207014043275\",\"modified\":\"20210418163720035\",\"origin\":\"Getting the Current Tiddler Right on Drafts\",\"qtype\":\"rememberq\",\"question\":\"What filter step checks if the input tiddler is a draft tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207014108901\":{\"title\":\"Ta:20210207014108901\",\"answer\":\"In a field called `draft.of`.\",\"created\":\"20210207014109677\",\"modified\":\"20210418163723652\",\"origin\":\"Getting the Current Tiddler Right on Drafts\",\"qtype\":\"rememberq\",\"question\":\"How does a draft tiddler store the name of the tiddler it is a draft of?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207014142455\":{\"title\":\"Ta:20210207014142455\",\"answer\":\"Check if the current tiddler is a draft tiddler, and if it is change the current tiddler to the tiddler the draft is of.\",\"created\":\"20210207014143636\",\"modified\":\"20210418163731056\",\"origin\":\"Getting the Current Tiddler Right on Drafts\",\"qtype\":\"rememberq\",\"question\":\"What pattern can be used to allow logic depending on the name of the current tiddler to function in a side-by-side preview?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207032034836\":{\"title\":\"Ta:20210207032034836\",\"answer\":\"Give it a filter that has either one or zero output tiddlers depending on the state of the condition; if it has one, the body of the widget will be displayed, and if it has zero it won't.\",\"created\":\"20210207032035835\",\"modified\":\"20210418165519631\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"rememberq\",\"question\":\"How can you use the `$list` widget to display some content only if a condition is true?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207032115114\":{\"title\":\"Ta:20210207032115114\",\"answer\":\"The `$list` widget and the `$reveal` widget.\",\"created\":\"20210207032116183\",\"modified\":\"20210418165524337\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"rememberq\",\"question\":\"What two widgets can be used to display any content only if a condition is true?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207032239853\":{\"title\":\"Ta:20210207032239853\",\"answer\":\"`<$list filter=\\\"[[$:/config/MyConfigTiddler]text[yes]]\\\"> ... </$list>`\",\"created\":\"20210207032242027\",\"modified\":\"20210418165532962\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"rememberq\",\"question\":\"Write a `$list` widget that displays its contents only if the `text` field of the tiddler `$:/config/MyConfigTiddler` is set to the exact value `yes`. Use only hard parameters.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207032310040\":{\"title\":\"Ta:20210207032310040\",\"answer\":\"`emptyMessage`\",\"created\":\"20210207032311129\",\"modified\":\"20210418165546638\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"rememberq\",\"question\":\"What attribute of the `$list` widget allows you to display some content if there are zero results from the filter?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207032407897\":{\"title\":\"Ta:20210207032407897\",\"answer\":\"`first[]`\",\"created\":\"20210207032408993\",\"modified\":\"20210418165551919\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"rememberq\",\"question\":\"What filter operator is often used with conditionals based on the `$list` widget to ensure the contents of the widget doesn't get displayed more than once?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207032442467\":{\"title\":\"Ta:20210207032442467\",\"created\":\"20210207032448474\",\"modified\":\"20210418165554150\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"remembercz\",\"question\":\"Showing content only in certain circumstances is known as {conditional} inclusion.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207032540788\":{\"title\":\"Ta:20210207032540788\",\"created\":\"20210207032541862\",\"modified\":\"20210418165557425\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"remembercz\",\"question\":\"The `$reveal` widget displays its contents only if a specified {c1::field} matches a {c1::value}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207032652177\":{\"title\":\"Ta:20210207032652177\",\"answer\":\"`state`, `type`, and `text`.\",\"created\":\"20210207032653546\",\"modified\":\"20210418165605358\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"rememberq\",\"question\":\"What three attributes are used for the basic form of the `$reveal` widget?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207032737605\":{\"title\":\"Ta:20210207032737605\",\"answer\":\"`match` (show contents if the text reference matches `text`) and `nomatch` (show contents if it doesn't match)\",\"created\":\"20210207032739798\",\"modified\":\"20210418165608822\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"rememberq\",\"question\":\"What are the two most common values for the `type` attribute of the `$reveal` widget?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207032823367\":{\"title\":\"Ta:20210207032823367\",\"answer\":\"A text reference, like `!!field`.\",\"created\":\"20210207032824674\",\"modified\":\"20210418165615856\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"rememberq\",\"question\":\"What type of reference goes in the value of the `state` attribute to the `$reveal` widget?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207032905690\":{\"title\":\"Ta:20210207032905690\",\"answer\":\"`<$reveal state=\\\"!!show\\\" type=\\\"match\\\" text=\\\"yes\\\"> ... </$reveal>`\",\"created\":\"20210207032906948\",\"modified\":\"20210418165627569\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"rememberq\",\"question\":\"Write a `$reveal` widget that displays its contents when the field `show` of the current tiddler contains the word `yes`.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207032937700\":{\"title\":\"Ta:20210207032937700\",\"answer\":\"It contains the text against which the value of the field specified in the `state` attribute will be matched.\",\"created\":\"20210207032938912\",\"modified\":\"20210418165631401\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"rememberq\",\"question\":\"What is the purpose of the `text` attribute to the `$reveal` widget?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207033024829\":{\"title\":\"Ta:20210207033024829\",\"answer\":\"It creates a new `<span>` or `<div>` element to contain its contents, which may be illegal or have unwanted effects in some places.\",\"created\":\"20210207033028546\",\"modified\":\"20210418165634896\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"rememberq\",\"question\":\"Why does the `$reveal` widget lead to incorrectly formatted output in some contexts?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207033253889\":{\"title\":\"Ta:20210207033253889\",\"answer\":\"`name`, `value`, `filter`, and `emptyValue`.\",\"created\":\"20210207033254670\",\"modified\":\"20210418165643151\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"rememberq\",\"question\":\"What four attributes of `$set` are used to make its value conditional on whether a filter has results?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207033439159\":{\"title\":\"Ta:20210207033439159\",\"answer\":\"`emptyValue`\",\"created\":\"20210207033441465\",\"modified\":\"20210418165740872\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"rememberq\",\"question\":\"When the `filter` attribute is used to make a `$set` widget conditional, what attribute contains the value to be used if the filter returns no results?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207033446919\":{\"title\":\"Ta:20210207033446919\",\"answer\":\"`value`\",\"created\":\"20210207033447893\",\"modified\":\"20210418165744760\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"rememberq\",\"question\":\"When the `filter` attribute is used to make a `$set` widget conditional, what attribute contains the value to be used if the filter returns at least one result?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207033542865\":{\"title\":\"Ta:20210207033542865\",\"answer\":\"`<$set name=\\\"hasContacts\\\" filter=\\\"[tag[Contact]]\\\" value=\\\"yes\\\" emptyValue=\\\"no\\\"> ... </$set>`\",\"created\":\"20210207033544029\",\"modified\":\"20210418165754561\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"rememberq\",\"question\":\"Write a `$set` widget that sets the variable `hasContacts` to `yes` if at least one tiddler in the wiki is tagged `Contact`, to `no` otherwise.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207033639282\":{\"title\":\"Ta:20210207033639282\",\"created\":\"20210207033640469\",\"modified\":\"20210418165759843\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"remembercz\",\"question\":\"The `$transclude` widget differs from the standard wikitext transclusion syntax with curly braces in that it does not {change the current tiddler}.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207033918887\":{\"title\":\"Ta:20210207033918887\",\"answer\":\"Place the fallback in the content/body of the widget.\",\"created\":\"20210207033921565\",\"modified\":\"20210418165801683\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"rememberq\",\"question\":\"How can you provide fallback content to the `$transclude` widget to be used if the tiddler field it specifies does not exist?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207033930875\":{\"title\":\"Ta:20210207033930875\",\"answer\":\"Place the fallback in the content/body of the widget.\",\"created\":\"20210207033933255\",\"modified\":\"20210418165832577\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"rememberq\",\"question\":\"How can you provide fallback content to the `$view` widget to be used if the tiddler field it specifies does not exist?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207034003070\":{\"title\":\"Ta:20210207034003070\",\"created\":\"20210207034004011\",\"modified\":\"20210418165834559\",\"origin\":\"Hiding and Showing Things\",\"qtype\":\"remembercz\",\"question\":\"The `$view` widget differs from the `$transclude` widget in that it does not {wikify} the contents of the field it is accessing.\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207060709278\":{\"title\":\"Ta:20210207060709278\",\"answer\":\"We are able to reuse tiddlified ideas in a wider variety of contexts.\",\"created\":\"20210207060712248\",\"modified\":\"20210408175118923\",\"origin\":\"Tiddlers\",\"qtype\":\"rememberq\",\"question\":\"Why does breaking up information into tiddlers make our notes and our thoughts more flexible?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210207180624866\":{\"title\":\"Ta:20210207180624866\",\"answer\":\"`fields[]`\",\"created\":\"20210207180626371\",\"modified\":\"20210502162428834\",\"origin\":\"Working with Dates\",\"qtype\":\"rememberq\",\"question\":\"What filter operator finds the names of all the fields used on the input tiddlers?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210208023219597\":{\"title\":\"Ta:20210208023219597\",\"answer\":\"The `qualify` macro.\",\"created\":\"20210208023220835\",\"modified\":\"20210502162612438\",\"origin\":\"Qualification\",\"qtype\":\"rememberq\",\"question\":\"What macro creates a name that is unique among all places the call to the macro is transcluded?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210208023320983\":{\"title\":\"Ta:20210208023320983\",\"answer\":\"(any situation that involves using a template in multiple places, where the template refers to a single tiddler storing state which should differ between uses of the template)\",\"created\":\"20210208023322067\",\"modified\":\"20210502162614372\",\"origin\":\"Qualification\",\"qtype\":\"rememberq\",\"question\":\"Describe a situation in which you would need to use the `qualify` macro (try to pick a new one).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210208023605710\":{\"title\":\"Ta:20210208023605710\",\"answer\":\"A field of the tiddler where the template is being transcluded.\",\"created\":\"20210208023607305\",\"modified\":\"20210502162616280\",\"origin\":\"Qualification\",\"qtype\":\"rememberq\",\"question\":\"The `qualify` macro is usually //not// needed when storing state used on a template where?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210208023626366\":{\"title\":\"Ta:20210208023626366\",\"answer\":\"A separate temporary tiddler.\",\"created\":\"20210208023628034\",\"modified\":\"20210502162618236\",\"origin\":\"Qualification\",\"qtype\":\"rememberq\",\"question\":\"The `qualify` macro //is// needed when storing the state of a template in what kind of tiddler?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210208023806895\":{\"title\":\"Ta:20210208023806895\",\"answer\":\"One, the base `title` to which a unique number will be suffixed.\",\"created\":\"20210208023808130\",\"modified\":\"20210502162620685\",\"origin\":\"Qualification\",\"qtype\":\"rememberq\",\"question\":\"What parameters does the `qualify` macro have?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210214165634956\":{\"title\":\"Ta:20210214165634956\",\"answer\":\"Purple.\",\"created\":\"20210214165635960\",\"modified\":\"20210214172141205\",\"origin\":\"TestyTest\",\"qtype\":\"rememberq\",\"question\":\"What color is a purple cow?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210327180615955\":{\"title\":\"Ta:20210327180615955\",\"created\":\"20210327180617038\",\"modified\":\"20210409133748552\",\"origin\":\"Slicing Up Content\",\"qtype\":\"remembercz\",\"question\":\"When tiddlers modify the way other tiddlers are displayed, they act like {lenses} (object in the physical world).\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210327180930007\":{\"title\":\"Ta:20210327180930007\",\"answer\":\"Which tag you want to look for.\",\"created\":\"20210327180931096\",\"modified\":\"20210409165646046\",\"origin\":\"Common Filter Operators\",\"qtype\":\"rememberq\",\"question\":\"You need to use `tagging[]` instead of `tag[]` when you don't know what at the time you write the filter?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Ta:20210327182023927\":{\"title\":\"Ta:20210327182023927\",\"answer\":\"Its square brackets are mismatched; there is a missing closing bracket at the end.\",\"created\":\"20210327182025345\",\"modified\":\"20210409152458301\",\"origin\":\"Using Filter Expressions\",\"qtype\":\"rememberq\",\"question\":\"Why does the filter expression `[tag[Contact]` not work?\",\"tags\":\"Takeaway\",\"type\":\"text/vnd.tiddlywiki\"},\"Tabs\":{\"title\":\"Tabs\",\"created\":\"20200717215952541\",\"description\":\"The `tabs` macro facilitates compact display of a number of related tiddlers, as in the sidebar of a stock TiddlyWiki.\",\"modified\":\"20210410185554583\",\"parent\":\"More Organizational Tools\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"It's often useful to create a summary or links tiddler that uses tabs to show the contents of some other tiddlers, just like the sidebar does in the default installation of TiddlyWiki. We can easily create new sets of tabs with the `tabs` macro.\\n\\nA typical call to the `tabs` macro looks like this:\\n\\n```html\\n<<tabs tabsList:\\\"foo bar baz\\\" default:\\\"foo\\\">>\\n```\\n\\n`tabsList`, in its simplest incarnation, is just a list of tiddler titles, but it can actually be any filter (recall that a list of tiddler titles is in the same format of [[a series of simple filter runs|Multi-Run Filters]]), which makes it possible to choose what tabs should be shown on the fly. For instance, we can create tabs for all of the basic `Concept`s tagged in this book:\\n\\n{{Sn:ConceptTabs||MagicSnippet}}\\n\\nNow, if we add new concepts to the wiki, they'll immediately show up as new tabs. The `caption` field of each tiddler, if it exists, will be used as the text on the tab; otherwise the title will be used.\\n\\nThe optional `default` parameter, set to the title of one of the tiddlers being made into a tab, chooses which tab starts selected. If you leave it blank, you'll have to click on a tab to see anything expand.\\n\\nThe `tabs` macro has several other optional parameters that are occasionally useful, which you can read about in [[the documentation|https://tiddlywiki.com/#tabs%20Macro]].\\n\\nYou can make tabs show up vertically instead of horizontally, like they do under the ''More'' tab of the sidebar, using the parameter `class:\\\"tc-vertical\\\"`.\\n\\n!! Exercises\\n\\n{{Ex:MeetingsToday||ExerciseTemplate}}\\n{{Ex:ContactTabs||ExerciseTemplate}}\\n{{Ex:FixingContactTabs||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Tags\":{\"title\":\"Tags\",\"created\":\"20200530170303661\",\"description\":\"Tags are a special type of link used to categorize tiddlers and arrange them in hierarchies.\",\"modified\":\"20210409020111576\",\"parent\":\"The Shape of TiddlyWiki\",\"tags\":\"Concept Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Forget everything you know about tags for a moment, because TiddlyWiki has a slightly different notion of tags from most tools.\\n\\nTiddlyWiki tags are a way of ''relating two tiddlers''. (You might consider a tag a special kind of [[link|Links]] to another tiddler that's stored in a `tags` [[field|Fields]] instead of the `text` field.) Specifically, the type of relationship expressed by a tag is ''membership''. If I create a tiddler about myself called `Soren` and tag it `Person`, I'm saying that the `Soren` tiddler is a conceptual member of another tiddler called `Person`; or, put another way, “`Soren` is a `Person`.” As with [[traditional links|Links]] in TiddlyWiki, this is a bidirectional relationship and you can search based on that relationship in either direction: `Person` will know that it is //tagging// `Soren`, while `Soren` will know that it is //tagged// `Person`. \\n\\nMaking tagging into a means of relating tiddlers rather than a means of sticking little labels on things dramatically expands the range of things tags can be used for. Traditional tags can only be used for “tag-based” organization -- you can filter your content based on its having or not having a particular tag or set of tags, and that's about it. You can still do this with TiddlyWiki tags, but you can also use them to create more complex structures like multi-level hierarchies -- seemingly the antithesis of traditional tags. If tiddler C is tagged with B, and tiddler B is tagged with A, you have an A > B > C hierarchy. TiddlyWiki provides tools such as [[tables of contents|Creating Hierarchies with a Table of Contents]] for viewing these hierarchies.\\n\\nIn some way, this also just makes sense: if [[everything's a tiddler|Tiddlers]] in TiddlyWiki, why should tags be any different?\\n\\nJust like you can link to a tiddler that doesn't exist yet, you can tag a tiddler with a tiddler that doesn't exist yet. For the more traditional methods of using tags (e.g., filtering tiddlers based on whether they do or do not have a particular tag), you never need to create the tagging tiddler at all -- but you always have the option if you need it, or if you want a convenient place to describe what the tag is used for.\\n\\nIf you look at the top of this section, you can see that its tiddler is tagged <<tag Concept>> and <<tag Section>>. The colored ellipses around the tag names are called ''tag pills'', and if you click on one you will see a list of all tiddlers with that tag. Usually the tagged tiddlers are shown in alphabetical order, but we'll learn later that they can be [[put in any order you like|Ordering Tiddlers]].\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"TakeAway Help/General Takeaway Functions\":{\"title\":\"TakeAway Help/General Takeaway Functions\",\"caption\":\"General takeaway functions\",\"created\":\"20210101234652033\",\"description\":\"Once you've answered a takeaway for the first time, you'll see several options below it, whether you're seeing the takeaway [[in the text|TakeAway Help/Studying In Text]] (//List// tab), [[in the browser|Takeaway Browser]], or [[in review|TakeAway Help/Reviewing]].\",\"modified\":\"20210407194540991\",\"tags\":\"Fragment\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{TakeAway Help/General Takeaway Functions!!description}}\\n\\n* ''next review'' or ''due for review'' (only shown in the text and the browser) -- this indicates when you'll next see the takeaway, or //due for review// if it's time to review it now. See [[Reviewing takeaways|TakeAway Help/Reviewing]] for more information. If the takeaway is due later than tomorrow, you can click //forgot// to tell TakeAway that you've already forgotten the takeaway and would like to see it again right away tomorrow.\\n* ''edit'' -- Open the takeaway's tiddler to edit its text or view its scheduling information.\\n* ''uncollect'' -- If you don't want to see this takeaway at all in review anymore, this option will remove it from review, clear its scheduling history, and put the takeaway back to showing only the question in the text.\\n* ''send feedback'' -- If you think the prompt is unclear or could be improved, click here to send a quick note to the author.\\n* ''help'' -- Open the TakeAway help screen.\\n\\nIn the reviewer and the browser, you'll also notice a link and an ID number in square brackets over on the right. You can click the link to ''return to the section in the text where the takeaway was introduced'', if you need a refresher.\"},\"TakeAway Help/Leeches\":{\"title\":\"TakeAway Help/Leeches\",\"created\":\"20210123182104528\",\"lapses\":\"5\",\"modified\":\"20210407194337860\",\"tags\":\"Fragment\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"''Leeches'' are takeaways that you keep on forgetting. Because you keep forgetting them over and over, they cause frustration and take up a disproportionate amount of your review time. TakeAway will display a banner like this one when it finds a leech:\\n\\n{{||$:/plugins/sobjornstad/TakeAway/LeechBanner}}\\n\\nThe number of times you have to forget a takeaway before this banner appears is called the //leech threshold//. It defaults to 4, but can be adjusted in the [[settings|TakeAway Settings]]. For purposes of leech detection, you're only considered to have “forgotten” a takeaway if you answer something other than “forgot” and then forget it again. That is, pressing “forgot” several days in a row doesn't count as having forgotten the takeaway -- in that case, you never really knew it at all.\\n\\n\\n!! Why leeches happen\\n\\nLeeches are usually a symptom of some other problem, not the problem in themselves:\\n\\n* The takeaway might be worded in a way that's confusing to you (see [[Editing takeaways|TakeAway Help/Editing]]). This could be the result of the author writing the takeaway poorly, or you having a different mental model of the topic or different related knowledge than most other people.\\n* You may not fully understand the topic the takeaway is asking about.\\n* You may be confusing this takeaway with another one (//memory interference//).\\n\\n!! Fixing leeches\\n\\nWhen you see the leech banner, take a moment to see if you can ''identify why you're struggling'', then fix the problem, perhaps by doing some background reading or editing the takeaway text. Click //hide warning// when you've taken care of it. The warning will appear again at each multiple of the leech threshold; by default, this is when you've forgotten the takeaway 8 times, 12 times, 16 times, etc.\\n\\nAnother entirely reasonable option, if you don't believe the information in the takeaway is particularly valuable to you, is to simply ''uncollect it'', preventing it from showing up in reviews again. This will allow you to reallocate your limited study time to material that isn't as frustrating or difficult to retain.\\n\\nFor much more on leeches in spaced-repetition study, check out the article [[Dealing with Leeches|https://controlaltbackspace.org/memory/dealing-with-leeches/]]. The article is focused on Anki, but most of its guidance will apply to TakeAway too.\"},\"Templates and the Current Tiddler\":{\"title\":\"Templates and the Current Tiddler\",\"created\":\"20200530170337337\",\"description\":\"Combining transclusions and manipulation of TiddlyWiki's `currentTiddler` variable gives us //templates//, tiddlers that control the way other tiddlers are displayed.\",\"modified\":\"20220103170417013\",\"parent\":\"Variables, Macros, and Transclusions\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Transclusions have another useful trick up their sleeve: the option to treat the tiddler being transcluded as a ''template''. A template transclusion, like a normal field transclusion, is a means of reusing content, but it allows the tiddler being transcluded to refer to information {{Ltc:TiddlerDoingTransclusion||LieToChildrenTemplate}}. Just as macros extend variables by allowing some parts of the macro body to vary, templates extend transclusion by ''allowing some parts of the transcluded tiddler to vary''.\\n\\nTo return to the metaphor we began back in [[Slicing Up Content]], templates are a sort of lens or optical apparatus with which to look at a tiddler: still nouns themselves, but ones that can be used to modify the way we see other nouns.\\n\\nBe forewarned that templates are probably somewhat unlike anything you've encountered before, so this section might bend your brain a bit. It's OK if you don't get it the first time around.\\n\\n\\n!! The current tiddler\\n\\nTo understand templates, we have to first understand TiddlyWiki's unexpectedly complex concept of the ''current tiddler''. We casually referred to the current tiddler in the [[Transclusions]] section when talking about the syntax `{{!!field}}`, and you probably assumed that the “current” tiddler is the one that you're typing the transclusion into. And in many cases, such as in several of the exercises in that section, it is. But it turns out there's a bit more to it.\\n\\nAn {{Ltc:CurrentTiddlerDefinition||LieToChildrenTemplate}} is straightforward: it's just ''the tiddler that's named in the value of the `<<currentTiddler>>` [[variable|Variables]]''. However, the current tiddler is much more interesting than your average variable, because references to this variable are deeply embedded into the syntax and inner workings of TiddlyWiki.\\n\\nHere are some places you can ''access the current tiddler'':\\n\\n* Via the `<<currentTiddler>>` variable.\\n* In a field transclusion that does not name any tiddler. `{{!!field}}` refers to the `field` field of the current tiddler, as noted in [[Transclusions]].\\n* Via the `all[current]` [[filter step|Common Filter Operators]].\\n* Many [[widgets|Widgets]] assume the tiddler to operate on is the current tiddler unless you say otherwise.\\n\\nHere are some things that ''change the current tiddler'':\\n\\n* Transcluding another tiddler with the `{{curly braces}}` syntax.\\n* Using a `$list` widget to enumerate the outputs of a filter.\\n* Directly setting `currentTiddler` with a `$set` or `$let` widget.\\n* Using a `$tiddler` widget to change the current tiddler.\\n\\nFor completeness, here are some things that ''//don't// change the current tiddler'' that people often guess would change it:\\n\\n* Transcluding another tiddler with a `$transclude` widget.\\n* Transcluding another tiddler with the `{{||piped curly braces}}` syntax (this syntax will be described in detail later in the section).\\n* Transcluding the contents of a tiddler as a [[tab|Tabs]].\\n\\nWhen you are looking at a tiddler `X` directly in the story river and haven't done anything in that tiddler's wikitext to change the current tiddler, the current tiddler is `X`. It's when you start using widgets and transclusions within tiddler `X` that it gets complicated -- or if the tiddler `X` is not displayed directly within the story river but is instead transcluded within another tiddler `Y`.\\n\\n\\n!! The current tiddler changes when transcluding a tiddler\\n\\nLet's take a closer look at what happens when we ''transclude a tiddler''. Think back to the [[first exercise|Ex:JaneDataTransclusion]] in the [[Transclusions]] section, the one in which we made Jane's contact information appear on the `JaneDoe` tiddler by adding a bunch of transclusions like `{{!!email}}` and `{{!!family}}` to the `JaneDoe` tiddler:\\n\\n```html\\n!! Information about Jane\\n\\n* ''Email'': {{!!email}}\\n* ''Phone'': {{!!phone}}\\n* ''Family'': {{!!family}}\\n* ''Manager'': {{!!manager}}\\n```\\n\\nThese field references referred to the `JaneDoe` tiddler, since they were in `JaneDoe`, we hadn't done anything in the `JaneDoe` tiddler to change the current tiddler, and we were looking at the `JaneDoe` tiddler directly in the story river at the time.\\n\\nEasy enough, right? Now let's think about what happens when we transclude Jane's tiddler in another tiddler called `AllContacts`. (If you want, you can go try this in your wiki right now.) If we're looking at `AllContacts`, we definitely don't want the current tiddler to be `AllContacts` while rendering the content of the `JaneDoe` tiddler -- if it were, we wouldn't be able to see any of Jane's contact information, because we referred to it with, e.g., `{{!!phone}}`, and the `AllContacts` tiddler doesn't have a `phone` field, much less one containing Jane's phone number.\\n\\nFor this reason, anytime we transclude a field of a tiddler, the current tiddler is ''changed to the tiddler we're transcluding'', the contents of the field are processed, and then the current tiddler is changed back. You can imagine that TiddlyWiki does something like this:\\n\\n```html\\n<$set name=currentTiddler value=JaneDoe>\\n\\t{{JaneDoe}}\\n</$set>\\n```\\n\\nIn reality, of course, you don't have to put the `$set` there, it just happens when you say `{{JaneDoe}}`.\\n\\n\\n!! When the current tiddler shouldn't change\\n\\nGoing back to the exercise, we did a nice job of displaying Jane's contact information on //Jane's// tiddler…but what about every other contact's tiddler? If we want the contact fields to appear on every contact's tiddler, the most obvious way would be to copy and paste the same list of information and field references to every contact tiddler, but that sounds pretty unpleasant. This sounds like an ideal place to use transclusion, which lets us include the same content in many different tiddlers without repeating the content.\\n\\nLet's try this, then: let's excise the “Information about Jane” section from her tiddler (if you've forgotten, there is a button on the toolbar to do this, or you can press Ctrl+E). Call the excised tiddler `ContactInformationTemplate`, and replace it with a transclusion; `{{ContactInformationTemplate}}` should appear in the wikitext of `JaneDoe`. (If you've done [[Ex:JaneManagerPhone]], you might want to include the macro in the excision as well, so that the logic to select the contact's manager's phone number works correctly.)\\n\\nNice. But wait…none of the information is showing up now! Did you catch why?\\n\\n<$details summary=\\\"Answer\\\">\\nWhen we transclude the `ContactInformationTemplate` into `JaneDoe`, the current tiddler is changed to `ContactInformationTemplate`, which means we don't have access to the fields on `JaneDoe` anymore. We could get around this by changing the transclusions on the `ContactInformationTemplate` to look like, e.g., `{{JaneDoe!!phone}}`, but then this `ContactInformationTemplate` tiddler could only be used with the `JaneDoe` tiddler -- and being able to reuse the `ContactInformationTemplate` tiddler was the entire point of extracting it into a separate tiddler.\\n</$details>\\n\\nIn this use case, suddenly the behavior that looked nice just a moment ago is exactly what we don't want.\\n\\n\\n!! Templates\\n\\nWhat we want is to have a way of //not// changing the current tiddler during a transclusion, or, more generally, making the current tiddler a tiddler of our choice during the transclusion.\\n\\nAs you may have guessed, TiddlyWiki is fully capable of this; it's called ''transcluding a tiddler through a template''. The syntax is `{{tiddler||template}}`. So here it would be:\\n\\n```html\\n{{JaneDoe||ContactInformationTemplate}}\\n```\\n\\nAdd that in the `JaneDoe` tiddler in place of plain `{{ContactInformationTemplate}}`, and you should immediately see Jane's information show up again, because we told TiddlyWiki to transclude `ContactInformationTemplate`, but to make the current tiddler during the transclusion be `JaneDoe`, rather than `ContactInformationTemplate`. Sweet!\\n\\nThere's a shorter and more flexible way to write this. Just like we can write `{{!!field}}` to transclude the `field` field of the current tiddler, we can write `{{||template}}` to transclude the current tiddler through `template` (i.e., not change the current tiddler at all while transcluding `template`). So here we can just say:\\n\\n```html\\n{{||ContactInformationTemplate}}\\n```\\n\\n`{{tiddler||template}}`, and the concept of “transcluding a tiddler through a template,” ''feels backwards'' to many people at first. This operation actually transcludes the //template//, giving it access to the fields of the tiddler; our intuitive notion of transcluding a tiddler seems rather to suggest that the //tiddler// should be transcluded with reference to the information in the template. A good way to read `{{tiddler||template}}` is “Put the contents of //template// right here, but as you're deciding what //template// looks like, the current tiddler is //tiddler//, not //template//.”\\n\\nIt's important to remember that, since [[everything's a tiddler|Tiddlers]], ''a template is not really a thing in itself''; that is, unlike in many other similar tools, your TiddlyWiki is not separated into two kinds of content, tiddlers and templates. Rather, when you transclude a tiddler through a template, you are using a particular tiddler //as// a template, to display the content in the other tiddler. A tiddler can be used as a template in one place, and as an ordinary content tiddler with a link to it, or for that matter as a tag, in another. In fact, in many cases, transclusion will have exactly the same effect whether the transcluded tiddler is treated as a template or not. For instance, `{{EmployeeProfileSetupMeeting}}`, `{{||EmployeeProfileSetupMeeting}}`, and `{{JaneDoe||EmployeeProfileSetupMeeting}}` should all do the same thing if you try them: the contents of the `EmployeeProfileSetupMeeting` tiddler appears. That's because the `EmployeeProfileSetupMeeting` tiddler doesn't contain any references that depend on the current tiddler, such as `{{!!field transclusions}}`.\\n\\nLook out as you move forward: the syntax for templates uses two consecutive pipe characters (`||`), while the syntax for [[links|Links]] with different displayed text and target uses only a single pipe (`|`). This is one of those little warts on TiddlyWiki's syntax that can be hard to remember, and you won't get a useful error if you use the wrong one in the wrong place.\\n\\n\\n!! When is an error not an error?\\n\\nWhen it's displayed on a tiddler you intend to use as a template.\\n\\nSince templates are usually written expecting the current tiddler to be some other tiddler -- not the template tiddler itself -- when you look at a template tiddler directly, it may look pretty funny. For instance, there will likely be some data missing. The formatting may even be incorrect, or TiddlyWiki may show an outright error (e.g., a //Recursive transclusion error//). This should not worry you. In general, the only way to know if a template tiddler is written correctly is to actually use it as a template and see if the expected output appears there.\\n\\n\\n!! Exercises\\n\\n!!! On the current tiddler\\n\\n{{Ex:CurrentTiddlerAndListWidget||ExerciseTemplate}}\\n{{Ex:MeetingListWithoutCurrentTiddler||ExerciseTemplate}}\\n{{Ex:ContainingCurrentTiddler||ExerciseTemplate}}\\n{{Ex:MethodsOfTransclusion||ExerciseTemplate}}\\n{{Ex:TranscludedMacroScope||ExerciseTemplate}}\\n\\n!!! On templates\\n\\n{{Ex:AddContactTemplates||ExerciseTemplate}}\\n{{Ex:CreateMeetingTemplate||ExerciseTemplate}}\\n{{Ex:TicketTrackingTemplate||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\\n\"},\"Templates vs. Macros\":{\"title\":\"Templates vs. Macros\",\"created\":\"20200605153728555\",\"description\":\"Templates and macros share a surprising number of properties; a few guidelines may help you decide when to use one over the other.\",\"modified\":\"20210410143258322\",\"parent\":\"Variables, Macros, and Transclusions\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Templates and macros can both be used to include some content in multiple places. (We haven't seen how to create [[global macros|Global Macros]] yet so we don't have to write the same macro in every tiddler we use it in, but we'll get there soon. If you're curious, you can jump ahead now -- you know everything you need to understand that section.) For instance, in the [[exercise|Ex:CreateMeetingTemplate]] where we created a template that showed a table of the fields on a meeting, we could just as well have written a macro:\\n\\n```html\\n\\\\define meetingTemplate()\\n| !Time|{{!!at}}|\\n| !Participants|{{!!participants}}|\\n\\\\end\\n```\\n\\nFor the most part, this is personal preference and a question of what makes the most sense semantically (that is, the two methods have the same effect, but one might be easier for a person to read and understand). Here are some points that might help you to decide between using a template and a macro:\\n\\n<ul>\\n<li>If you need to ''include the same snippet multiple times with different data'' in a single tiddler, a macro is likely easier since you can pass it parameters.</li>\\n<li>On the other hand, if you want to ''transclude a bunch of different tiddlers into one place using the same formatting'', a template is likely easier.<ul>\\n<li>For instance, this book stores each exercise in a tiddler and uses an `ExerciseTemplate` to format each exercise; where the exercises appear, it simply says, e.g., `{{Ex:CreateMeetingTemplate||ExerciseTemplate}}` for each exercise.</li>\\n</ul></li>\\n<li>If you ''want to use [[text substitution|Text Substitution]]'', a macro is your only option.\\n\\t<ul><li>But you can always include a macro //in// a template if you need to use text substitution.</li></ul></li>\\n<li>Templates work best using ''fields of a particular tiddler'' as input. Macros work best using ''parameters written directly inside the body of the tiddler'' as input. However, either can get data from either source if you set a variable to the appropriate value:\\n\\n{{Sn:MacroInTemplate||BasicSnippet}}\\n\\n<p>In `MyTemplate`, a reference to `<<myvar1>>` will get the value `xyz`, while in `myMacro`, `<<myvar1>>` or `$(myvar1)$` will get the value `xyz`. Similarly with `myvar2` getting the value of `field` on the current tiddler.</p>\\n\\n<p>With a macro, you can also use the `$macrocall` widget to pass field values as parameters.</p>\\n</li>\\n</ul>\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Text Substitution\":{\"title\":\"Text Substitution\",\"created\":\"20200605144511058\",\"description\":\"Macros process parameters in a peculiar way, by //substitution// of their text, which is quite useful but also causes more confusion than almost anything else in TiddlyWiki.\",\"modified\":\"20210521202832974\",\"parent\":\"Variables, Macros, and Transclusions\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"We need to circle back around to answer a perplexing question from earlier. In an [[exercise|Ex:JaneManagerPhone]] in the [[Transclusions]] section, this didn't work:\\n\\n```html\\n{{ {{!!manager}}!!phone }}\\n```\\n\\nYet this did:\\n\\n```html\\n\\\\define getPhone(person)\\n{{$person$!!phone}}\\n\\\\end\\n\\n<$macrocall $name=\\\"getPhone\\\" person={{!!manager}}/>\\n```\\n\\nWhat's up with that? At first glance, these snippets appear to be doing exactly the same thing.\\n\\nThis is one of the most confusing aspects of TiddlyWiki (some might say //the// most confusing), and it can sometimes trip up even veteran users. Fortunately, there is a reasonable explanation, albeit an obscure one, and once you understand the explanation you'll be able to tell what will work and what won't without having to try it.\\n\\n!! Text substitution\\n\\nIt turns out that there's something entirely different about [[macros|Macros]] as compared to any other part of wikitext: Macros have their parameters replaced by ''text substitution'' (elsewhere you may see this called //textual substitution// or just //substitution//; we will use the term //text substitution// throughout this book). This is an extremely simple and dumb mechanism: TiddlyWiki simply takes the text that was provided in the parameter and dumps it into the body of the macro where the placeholder value was. While it's doing this, it completely ''stops understanding wikitext'' -- it only worries about replacing the placeholders.\\n\\nTo see how this works and how it differs from using variables or transclusions outside of macros, let's define an example macro that prints some text if a person attended a meeting:\\n\\n```html\\n\\\\define participantInMeeting(meeting, name)\\n<$list filter=\\\"[title[$meeting$]contains:participants[$name$]]\\\">\\n  The participant was in the meeting.\\n</$list>\\n\\\\end\\n```\\n\\nIf we call this macro as `<<participantInMeeting EmployeeProfileSetupMeeting JaneDoe>>`, we'll get `The participant was in the meeting.` If we instead call it as `<<participantInMeeting EmployeeProfileSetupMeeting JoeSchmoe>>`, we'll get nothing at all.\\n\\nNotice that we're using the `$list` widget in a clever way we haven't seen yet: to [[display some wikitext only if some condition is met|Hiding and Showing Things]]. We know the filter will have either one result, namely the title of the meeting (if the participant was in the meeting), in which case the contents of the list widget will get displayed once, or zero results (if the participant was not in the meeting), in which case the contents of the list widget will not be displayed at all. We don't care exactly what the output of the filter is, only whether there was any.\\n\\nHere's how this relates to text substitution. Suppose we call the macro thus:\\n\\n```html\\n<<participantInMeeting \\\"EmployeeProfileSetupMeeting\\\" \\\"]][[SomeRandomGuy\\\">>\\n```\\n\\n`]][[SomeRandomGuy` is a pretty weird name for a person (see [[Bobby Tables|https://explainxkcd.com/327/]]), but this causes the filter to become:\\n\\n```html\\n[title[EmployeeProfileSetupMeeting]contains:participants[]][[SomeRandomGuy]]\\n```\\n\\nWe then see `The participant was in the meeting.` -- but `]][[SomeRandomGuy` is //not// part of the participants field! (We created a second filter run -- a new set of outer `[square brackets]` -- for `SomeRandomGuy`, so that no matter what the output of the first filter run was, `SomeRandomGuy` would also be part of the output. We'll see more on [[multiple filter runs|Multi-Run Filters]] soon.)\\n\\nIn contrast, if we use variable references inside the filter, we don't see the message:\\n\\n```html\\n<$set name=participant value=\\\"]][[SomeRandomGuy\\\">\\n<$set name=meetingTitle value=\\\"EmployeeProfileSetupMeeting\\\">\\n<$list filter=\\\"[title<meetingTitle>contains:participants<participant>]\\\">\\n  The participant was in the meeting.\\n</$list>\\n</$set>\\n</$set>\\n```\\n\\nIn this case, the `participant` variable can have as many weird characters in it as we want, and we still get the correct result. That's because this time, TiddlyWiki has more smarts: looking at the filter, it sees instructions that the value of the variable `participant` should be matched against a field, so as it checks this, it won't be wondering if there's a filter operator inside `participant`. It ''looks at the value of the variable separately from the text of the filter expression'' as it figures out what to do.\\n\\nWhy doesn't it know that when we use a macro? Well, when we call a macro, TiddlyWiki first goes in and replaces all of the values with the parameters of the macro via text substitution, then ''in an entirely separate step'' it starts deciding how to render the wikitext that comes out of the macro (in this case, as part of a `$list` widget). By the time it gets to evaluating the filter in the `$list` widget, it only has a single chunk of wikitext, and it has no way of telling whether the `]]` was originally part of a macro parameter (and thus intended to be matched to a value in the `participants` field) or whether it was part of the macro body (and thus intended to mark the end of the filter run).\\n\\nClear as mud? Let's work through an example, discussing the steps that TiddlyWiki takes as it renders.\\n\\n\\n!! When you want text substitution\\n\\nAlthough the simplicity and context-blindness of text substitution can cause problems, much of the time it's actually helpful. We saw earlier that this doesn't return the manager's phone number:\\n\\n```html\\n{{ {{!!manager}}!!phone }}\\n```\\n\\nSpecifically, this doesn't work because TiddlyWiki doesn't process wikitext within the `{{ outer curly braces }}`. Even if it did, what TiddlyWiki would see after it processed the inner `{{!!manager}}` would be three different chunks: `{{ `, `ChrisSmith`, and `!!phone }}`.\\n\\nBut this does work:\\n\\n```html\\n\\\\define getPhone(person)\\n{{$person$!!phone}}\\n\\\\end\\n\\n<$macrocall $name=\\\"getPhone\\\" person={{!!manager}} />\\n```\\n\\nLet's walk through the steps TiddlyWiki takes to render this to understand why this one works. \\n\\n# When TiddlyWiki reaches the `$macrocall` widget, it goes to ''expand the macro''. As it does this, it first looks up `{{!!manager}}` to get the value of the parameter `person` to pass to the macro. The value is `ChrisSmith` (or whoever the manager of the person represented by the current tiddler is), so this value is passed into the macro.\\n# TiddlyWiki performs a ''text substitution operation'' on the body of the macro using this parameter value, dumping the value `ChrisSmith` into the macro body in place of the `$person$` placeholder. The result of this substitution is the single chunk of wikitext `{{ChrisSmith!!phone}}`. This expansion replaces the `$macrocall` widget.\\n# Now that the macro is expanded, TiddlyWiki starts ''parsing the output of that macro as wikitext'', sees the transclusion chunk `{{ChrisSmith!!phone}}`, and replaces that with the value of the `phone` field. (If the `phone` field contained further transclusions, TiddlyWiki would repeat this step again.)\\n\\nIn other words, text substitution resulted in a single chunk of valid wikitext, which meant TiddlyWiki could understand what we were asking for.\\n\\n\\n!! When you don't want text substitution\\n\\nIf you don't need text substitution in a macro, you can use a different placeholder syntax, `<<__parameter__>>`, and avoid the possibility of bad effects. If you have the option to do this, you usually should.\\n\\nIn all of our examples so far in this section, we have needed text substitution. Here's a modified `participantInMeeting` macro where we wouldn't need it:\\n\\n```html\\n\\\\define inMeetingIfFilterTrue(filter)\\n<$list filter=\\\"$filter$\\\">\\n  The participant was in the meeting.\\n</$list>\\n\\\\end\\n\\n<<inMeetingIfFilterTrue \\\"[title[EmployeeProfileSetupMeeting]contains:participants[JaneDoe]]\\\">>\\n```\\n\\nThis could land us in trouble, for example, if we passed in a filter that contained a double quote. Instead, we can do it this way:\\n\\n```html\\n\\\\define inMeetingIfFilterTrue(filter)\\n<$list filter=<<__filter__>>>\\n  The participant was in the meeting.\\n</$list>\\n\\\\end\\n```\\n\\nThis works just like standard variable transclusions using the `<<variable>>` syntax in every way, except that by adding the extra double underscores, the reference is to a parameter of the macro rather than a variable.\\n\\n\\n!! Exercises\\n\\n{{Ex:BypassSecurityWithTextSubstitution||ExerciseTemplate}}\\n{{Ex:PreserveSecurityWithTextSubstitution||ExerciseTemplate}}\\n{{Ex:SubstitutionBackporting||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"The Finer Points of Macros\":{\"title\":\"The Finer Points of Macros\",\"created\":\"20200603210614777\",\"description\":\"Macros come in many forms.\",\"modified\":\"20210818010023807\",\"parent\":\"Variables, Macros, and Transclusions\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"We just skimmed the surface of macros in the previous section, and you may be left with quite a few questions. Let's try to tackle some of the most important ones.\\n\\n{{$:/plugins/sobjornstad/TakeAway/ContextualHelp/DetailsWidget}}\\n\\n<$details summary=\\\"Macros have scope\\\">\\n\\nIn the [[Variables]] section, we learned that after the closing `</$set>` tag, a variable goes out of scope and is no longer available for use. So you might wonder, what's the scope of a macro?\\n\\nThe answer is, generally, the macro is available until the end of the tiddler. It's also possible to define //global macros// -- ones that you can use across any tiddler in your wiki. We'll discuss how to do that [[later|Global Macros]].\\n\\n</$details><$details summary=\\\"Macros can have zero parameters\\\">\\n\\nIt's possible, and even common, to have a macro with //no// parameters, which is just a different way of writing a variable (potentially with a greater scope). For instance, this is equivalent to the example of the corporate disclaimer previously discussed in the [[Variables]] section:\\n\\n{{Sn:ParameterlessMacro||MagicSnippet}}\\n\\n\\n</$details><$details summary=\\\"Macros can have multiple parameters\\\">\\n\\nLet's come back to our good old `wikipediaLink` macro again. Let's say we want the user to be able to specify the text as well as the article we're linking to. Here's how we can do that:\\n\\n{{Sn:MultipleParameterMacro||MagicSnippet}}\\n\\nNote that parameters are separated by a space in the macro call but by a comma in the macro definition. No, this doesn't really make any sense, but a lot of programming languages do it this way too.\\n\\nAlso notice the use of \\\"double quotation marks\\\" when a macro parameter contains spaces.\\n\\n\\n</$details><$details summary=\\\"Macros can be called with parameters containing double quotes\\\">\\n\\nA moment ago, we saw that you can include spaces in a macro parameter by surrounding it in double quotes. But what happens when the parameter also contains double quotes? Uh-oh:\\n\\n{{Sn:QuoteWithinQuotesMacro||MagicSnippet}}\\n\\nIn this case, we can use //triple// double quotes:\\n\\n{{Sn:TripleDoublesMacro||MagicSnippet}}\\n\\nThis trick works elsewhere in TiddlyWiki as well, if you ever find yourself needing to quote something that contains quotes.\\n\\n</$details><$details summary=\\\"Macros can be called with parameter names\\\">\\n\\nIf we don't like the order that the macro parameters are specified in, or there are a lot of parameters and it's hard to remember what order they come in, we can list the parameters by name. If we do this, the order becomes unimportant.\\n\\n{{Sn:MacroParameterNames||MagicSnippet}}\\n\\nSometimes this is called using //named parameters//, in contrast to using //positional parameters//.\\n\\nA space may optionally be added after the colon `:`, but most people find it easier to read without a space.\\n\\n\\n</$details><$details summary=\\\"Macros can have optional parameters\\\">\\n\\nWe can specify a default value for a parameter. Then we only need to provide a value in the macro call if we don't like the default:\\n\\n{{Sn:DefaultMacroParameterValues||MagicSnippet}}\\n\\nAgain, a space may optionally be added after the colon.\\n\\n</$details><$details summary=\\\"Macros can be defined on a single line\\\">\\n\\nYou can place short macros that contain only one line on the same line as the `\\\\define` pragma and omit the `\\\\end`:\\n\\n{{Sn:SingleLineMacro||MagicSnippet}}\\n\\n\\n</$details><$details summary=\\\"Macros can be called using a $macrocall widget\\\">\\n\\nIn addition to the handy `<<double angle bracket>>` syntax, it's possible to call a macro using a `$macrocall` [[widget|Widgets]]. As we discussed in the widgets section, this is a common pattern in TiddlyWiki: anything you can do with convenient wikitext syntax can also be done with HTML tags or widgets, and those forms may offer some additional options for advanced use.\\n\\nHere's how we could create our aardvark link with a widget:\\n\\n{{Sn:SimpleMacrocallWidget||MagicSnippet}}\\n\\nNotice the dollar sign in front of `$name`, which is easily missed. (This is in case your macro has a parameter called `name` -- then TiddlyWiki can tell them apart.)\\n\\n\\n</$details><$details summary=\\\"The $macrocall widget can take variables as parameters\\\">\\n\\nFrom the above, it was probably not immediately obvious why you would ever want to write out a macro call the long way. Here's the main reason why: you can pass in //other variables or macro calls// as parameters to the macro. For instance, maybe we want to link to a few different Wikipedia pages, but use the same link name:\\n\\n{{Sn:TranscludedMacrocallWidget||MagicSnippet}}\\n\\n</$details>\\n\\n\\n!! Exercises\\n\\n{{Ex:TicketTrackingLink||ExerciseTemplate}}\\n{{Ex:MacroCallAsParameter||ExerciseTemplate}}\\n{{Ex:QuotedMacroCall||ExerciseTemplate}}\\n{{Ex:UnclosedMacroCall||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"The Shape of TiddlyWiki\":{\"title\":\"The Shape of TiddlyWiki\",\"caption\":\"1: The Shape of TiddlyWiki\",\"created\":\"20200603023507957\",\"description\":\"In which we download and install TiddlyWiki, learn the basics of TiddlyWiki's data model, and begin creating some tiddlers in a sample wiki.\",\"list\":\"[[Installing TiddlyWiki]] [[Downloading Grok TiddlyWiki]] [[The TiddlyWiki Interface]] [[Tweaking Your Settings]] Tiddlers Fields Wikitext Links Tags [[Requirements for the Sample Wiki]] [[Structuring Our Wiki]] [[Journal Tiddlers]] [[Contact Tiddlers]] [[Meeting Tiddlers]] [[Project Tiddlers]] [[Knowledge Tiddlers]] [[Reviewing the Basics]]\",\"modified\":\"20210504014215573\",\"parent\":\"Outline\",\"tags\":\"Chapter\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Welcome to TiddlyWiki! This first chapter will help you get your bearings. At the end of it, you will have a fully functional and useful sample wiki; it just won't take advantage of many of the features that [[make TiddlyWiki special|Why TiddlyWiki?]].\\n\\nThe chapter has three phases:\\n\\n# First, we'll ''set up a sample wiki'' for use in the rest of the book, by [[installing TiddlyWiki|Installing TiddlyWiki]], [[downloading a copy of this book|Downloading Grok TiddlyWiki]], [[exploring the TiddlyWiki interface|The TiddlyWiki Interface]], and [[tweaking settings|Tweaking Your Settings]].\\n# Second, we'll learn about ''five basic concepts'' in TiddlyWiki: [[tiddlers|Tiddlers]], [[fields|Fields]], [[wikitext|Wikitext]], [[links|Links]], and [[tags|Tags]].\\n# Last, we'll go through a ''seven-section tutorial'' to set up the basic structure of the sample wiki, [[gathering requirements|Requirements for the Sample Wiki]], [[outlining the structure of the wiki|Structuring Our Wiki]], and then creating [[journal entries|Journal Tiddlers]], [[contacts|Contact Tiddlers]], [[meeting notes|Meeting Tiddlers]], [[projects|Project Tiddlers]], and [[miscellaneous notes|Knowledge Tiddlers]] in accordance with the requirements and structure. Along the way, you'll learn how to navigate TiddlyWiki's interface, use the basic features of [[wikitext|Wikitext]], and model data in TiddlyWiki.\\n\\nThis chapter will be unusual in that it will include few exercises. Instead, you'll be working nonstop in your sample wiki as you read. Once we move into chapter 2, we'll switch to discussing some concepts and then turning you loose to try them out on your own.\\n\\nIf you haven't yet read [[How to Use This Book]] or watched the video tour there, you may wish to do so now. If you're feeling impatient, you can figure out how it works as you go along and return to that section later if needed.\\n\\n!! In this chapter\\n\\n{{||ChapterOutlineTemplate}}\"},\"The TiddlyWiki Interface\":{\"title\":\"The TiddlyWiki Interface\",\"created\":\"20201125202250940\",\"description\":\"Study an annotated screenshot of TiddlyWiki's interface to help you put names to what you're seeing.\",\"modified\":\"20210818012127580\",\"parent\":\"The Shape of TiddlyWiki\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Let's take a quick look at the interface of a brand-new TiddlyWiki, in annotated form:\\n\\n<$link to=\\\"interface.png\\\">{{interface.png}}</$link>\\n\\nBefore we get started, it's worth pointing out that the interface of TiddlyWiki is highly customizable and extensible, as we will learn in chapter 6, [[Looking Under the Hood]]. If you carefully compare the screenshot above to the interface of //Grok TiddlyWiki//, you'll notice some differences -- for instance, many toolbars will have a different set of buttons, and the tabs in the sidebar will be different. The interface described in this section and in the remainder of the book is that of a stock `empty.html` TiddlyWiki downloaded from https://tiddlywiki.com, except where we change it during the course of the exercises. To avoid confusion, use the example wiki you created in [[Installing TiddlyWiki]] anytime you want to study the interface or see how TiddlyWiki behaves by default.\\n\\nWith that out of the way, take a look at the screenshot again. You can see that the screen is divided into two parts, the ''story river'' (red highlight) and the ''sidebar'' (magenta highlight). If your screen is too narrow to show both side-by-side (for instance, if you're viewing the wiki on a smartphone), the sidebar will come at the top of the page and the story river below it.\\n\\nThe story river shows the tiddlers which are currently open. We'll talk more about [[tiddlers|Tiddlers]] and their function in a moment; for now, just think of them as containers for the content of your wiki, like files or sheets of paper. When you open a new tiddler, it gets a new “card” over in the story river and leaves existing tiddlers open, so you can easily work with several tiddlers at once. The toolbar in the upper-right corner of each tiddler (the ''view toolbar'') lets you edit it, close it, delete it, get a link to it, collapse it, and so on.\\n\\nThe sidebar allows you to navigate to tiddlers that you don't have open and take various system actions. The toolbar at the top-right (the ''page toolbar'') lets you create new tiddlers, adjust options, and save your wiki by default, but it's possible to customize what buttons show up here. Then there is a fast full-text search for all tiddlers in the wiki; we'll discuss this in the [[Searching]] section. Last come four tabs which contain the majority of the sidebar's functionality:\\n\\n; Open\\n: A concise list of the tiddlers in the story river, useful if you have a ton of them open at once or you want to reorder them (just drag and drop).\\n; Recent\\n: A list of tiddlers you've changed recently.\\n; Tools\\n: A list of system actions like importing content, advanced search, changing the colors, and so on. You can place the tools you use most frequently on the page toolbar by checking or unchecking the box next to each tool.\\n; More\\n: A variety of other ways to find tiddlers, which we'll discuss in detail in [[Browsing Your Tiddlers]].\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\\n\"},\"The View Template\":{\"title\":\"The View Template\",\"created\":\"20200718024513554\",\"description\":\"The ViewTemplate is a special template TiddlyWiki uses internally to render each story in the story river; you can customize it to add custom content to all tiddlers or a subset of tiddlers.\",\"modified\":\"20210418135236805\",\"parent\":\"Looking Under the Hood\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"So far, every time we have created a template to display some fields or other useful information about a tiddler, we have had to manually say in each tiddler that we wanted to display that template. For instance, in [[Ex:AddContactTemplates]], you added a `{{||ContactInformationTemplate}}` to every contact in your wiki. This is convenient when we only want to display the template in a few tiddlers, perhaps in different places, but if we want it at the start or end of every tiddler that matches some obvious criteria, it is boring, error-prone, and a waste of time. Let's look at a better way.\\n\\n!! Understanding the ViewTemplate\\n\\nSpeaking of templates, every time TiddlyWiki displays a tiddler in the story river, it uses a template to do so. There are two important templates for this purpose, the ViewTemplate and the EditTemplate. The ''ViewTemplate'' controls what displays when the tiddler is viewed, and the ''EditTemplate'' controls what displays after you click the edit button. Let's look at the ViewTemplate; the EditTemplate will work very similarly.\\n\\nIf you open up and edit $:/core/ui/ViewTemplate, you'll see something of a hornet's nest of filters. If you look closely at the end, though, you'll spot this bit:\\n\\n```html\\n<$list filter=\\\"[all[shadows+tiddlers]tag[$:/tags/ViewTemplate]!has[draft.of]]\\\" variable=\\\"listItem\\\">\\n\\t<$transclude tiddler=<<listItem>>/>\\n</$list>\\n```\\n\\nThis is beautiful, because it means most of the time we need not edit the ViewTemplate itself (and thus have to override a complicated shadow tiddler that could change in a future version of TiddlyWiki). Instead, we merely have to ''adjust the individual tiddlers'' tagged with `$:/tags/ViewTemplate` which define parts of the interface. Go ahead and find that tag in the ''Explorer'' and open it up. You'll see that it has a `list` field, to place the interface elements which appear when rendering a tiddler in a certain order (see [[Ordering Tiddlers]]). In a default installation as of TiddlyWiki 5.1.23, the list looks like this:\\n\\n* $:/core/ui/ViewTemplate/title\\n* $:/core/ui/ViewTemplate/unfold\\n* $:/core/ui/ViewTemplate/subtitle\\n* $:/core/ui/ViewTemplate/tags\\n* $:/core/ui/ViewTemplate/classic\\n* $:/core/ui/ViewTemplate/body\\n\\nWhat we need to do is define our own view tiddler and sneak it into the list wherever we want to display it. We can then transclude the `ContactInformationTemplate` within that view tiddler. (We could also simply tag the `ContactInformationTemplate` itself with `$:/tags/ViewTemplate`, but this would be less flexible, as we'll see in a moment.)\\n\\n!! Adding to the ViewTemplate\\n\\nLet's call our new tiddler `$:/yourname/TiddlerTypeTemplates/Contact`; this will leave space for us to add similar templates for other types of tiddlers. Drop in `{{||ContactInformationTemplate}}` there, add the `$:/tags/ViewTemplate` tag, remove `{{||ContactInformationTemplate}}` from all your contacts so the information isn't displayed twice, and you should be set.\\n\\nActually, there are two small problems. The first is that instead of a header `Information about JaneDoe`, the double exclamation point is ''literally appearing on each tiddler''. This is because the transclusion is starting in [[inline mode|Block Mode and Inline Mode]]. Unfortunately, this can be tricky to fix; I find the easiest way is begin with a block-level HTML element instead of wikitext, so here change the `!! title` to `<h2>title</h2>`. In this case, there's no way TiddlyWiki can parse it wrong; an `<h2>` simply cannot be an inline element, whereas `!!` can be since it could be part of some running text.\\n\\nThe second is that our contact information is now appearing ''even on tiddlers that aren't contacts''! Oops. Fixing this part is left as an exercise.\\n\\n!! Exercises\\n\\n{{Ex:ContactsOnlyOnContacts||ExerciseTemplate}}\\n{{Ex:MoveContactInformation||ExerciseTemplate}}\\n{{Ex:MeetingInformation||ExerciseTemplate}}\\n{{Ex:EditTemplateInformation||ExerciseTemplate}}\\n{{Ex:DontOverrideViewTemplateTag||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Tiddler Titles\":{\"title\":\"Tiddler Titles\",\"created\":\"20200603023508383\",\"description\":\"Carefully naming tiddlers and concepts has many benefits, but is often more art than science.\",\"modified\":\"20210504022745346\",\"parent\":\"Filing and Organizing\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In the [[basic searching|Searching]] section, we mentioned that it was a good idea to include the keywords you're likely to search for in the titles of your tiddlers. So far I've just been giving you titles, so let's talk a bit more about what makes a good tiddler title.\\n\\n\\n!! The obvious\\n\\nSometimes your titles are going to be ''obvious''. For instance, in creating our [[contact tiddlers|Contact Tiddlers]], we made the tiddler titles the person's name. For the Employee Information System, which was a software application, the title was the name of the application. If you're creating a tiddler for something that already //has// a name, then you're probably in pretty decent shape just using that as a name.\\n\\nThere's one exception to that rule: if the name is ambiguous. For instance, if you're creating a tiddler for the technology company Apple, calling your tiddler simply `Apple` could be problematic: are you talking about the company, the [[original computer|https://en.wikipedia.org/wiki/Apple_I]] the company made, the fruit, the [[record label|https://en.wikipedia.org/wiki/Apple_Records]], or something else entirely? If your wiki focuses entirely on music or food, you're probably fine, but otherwise you might want to add an extra word or two to disambiguate.\\n\\n\\n!! Titles for knowledge tiddlers\\n\\nIn many cases, though, we want to create tiddlers that don't have a specific named thing associated with them. For instance, the [[project for our onboarding|Project Tiddlers]] probably does not have an official corporate name, nor does the [[meeting|Meeting Tiddlers]] at which Jane showed us how to use the information system, nor will a tiddler we create describing a new insight we came up with that might help us improve our process.\\n\\nWriting titles is tricky, as anyone who's stared at a computer screen trying to figure out what to call their essay or poem or book knows. But there's a great deal of value in getting them right. The popular academic-writing guide //They Say, I Say// describes titles as //metacommentary//, “a way of commenting on your claims and telling readers how and how not to think about them” (p. 127). It goes on to explain:\\n\\n> Thinking of a title as metacommentary can actually help you to develop sharper titles, leading you to write something that gives readers some sense of your argument rather than merely announcing your topic, or that it's an “English Essay” -- or having no title at all. Essays that bear no title send the message that the writer has simply not bothered to reflect on what he or she is saying.\\n\\nOf course, the audience for your wiki may be only yourself. This doesn't get you off the hook, though; as the old adage goes in computer programming, “There are always at least two people involved, you and you six weeks from now.” And having a good title not only makes it easier to find ideas, it actually makes it easier to //think// about ideas: once the tiddler is no longer fresh in your mind, looking at a good title still immediately gives you that “sense of the argument” therein, without having to look into the contents, and when you do look at the contents it frames your initial impression of it.\\n\\nFurther, we can only hold a small amount of information in our short-term memory at a time; if the title is clear enough to help us understand the idea, we can forget everything except the title, leaving us free to use that capacity to relate the title to other things.\\n\\nGiving your idea or note a title is coming up with a name for that thing. For more on the importance of naming things, check out my blog post, [[The Power of Names|https://controlaltbackspace.org/psychology/the-power-of-names/]]. Also, if you're of a technical bent, Andy Matuschak [[describes|https://notes.andymatuschak.org/Evergreen_note_titles_are_like_APIs]] note titles as ''idea APIs'' -- a way of referencing a complicated idea with a simple interface. \\n\\n!! In practice\\n\\nWe just spent the last few paragraphs describing //why// you should create good titles for things without obvious names, but not //how// to do it. The //how// is much more art than science, and it differs somewhat from wiki to wiki, but if you get in the habit of reflecting on what you're writing about as you create a title, you'll get better at choosing titles over time. That said, here are a few suggestions to help guide your experimentation:\\n\\n* Make sure that your tiddlers are really focused on a ''single idea''. If you have multiple ideas, you should have multiple tiddlers. This is an important skill to develop to get the most out of TiddlyWiki in general, but it's also quite helpful in producing titles. Scoping the title appropriately may make it easier to figure out what content goes in the tiddler, and vice versa.\\n* If a noun phrase (e.g., “Good keyboards” or “Benefits of using a good keyboard”) doesn't seem like it would describe the idea in the tiddler with sufficient precision, try ''making a claim'' instead (e.g., “Using a good keyboard makes injury less likely”).\\n* ''Avoid the word “not,”'' and negations in general, when possible; titles that state what is, rather than what is not, are easier to interpret and are less likely to result in overly broad tiddlers.\\n* If there are any ''keywords'' you know you'll be using when searching for this tiddler later, try including them in the title, as we noted in the [[Searching]] section.\\n\\n\\n!! Exercises\\n\\n{{Ex:NamingOldNotes||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Tiddlers\":{\"title\":\"Tiddlers\",\"created\":\"20200530170154864\",\"description\":\"Tiddlers are the unit of information in TiddlyWiki.\",\"modified\":\"20210329215028919\",\"parent\":\"The Shape of TiddlyWiki\",\"tags\":\"Section Concept\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Before we start creating our sample wiki, we need to go over a few concepts. I know, theory is boring and you want to get your hands on the software, so I'll just introduce five foundational concepts that we can't do without right now, and we'll fill in the rest as we need them.\\n\\n''Tiddlers'' are the unit of information in TiddlyWiki. If we didn't want to use a weird neologism, we might call tiddlers //notes//, or //cards//, or //records//, or //files//, or //pages//, or //articles//. However, tiddlers aren't quite like any of these things, so the designers concluded a word that doesn't carry any baggage from other information systems would ultimately be less confusing. (A tiddler is a kind of small fish.)\\n\\nFor now, you can think of a tiddler as a 3×5 index card: a blank slate used to store a small amount of information. Even better, think of it as an [[edge-notched card|https://en.wikipedia.org/wiki/Edge-notched_card]], an index card that can be mechanically sorted based on metadata punched out of the edges of the card. (In the mid-20th century, these were the height of sophistication for the amateur information geek, and they're still pretty cool even in the computer age!) Tiddlers can do much more complicated things than this, however, so in [[Slicing Up Content]] in chapter 2 we'll see a different, more conceptual metaphor which will be more helpful as we continue.\\n\\n<div style=\\\"text-align: center;\\\">\\n<$link to=\\\"edge-notched.jpg\\\">[img width=300 [edge-notched.jpg]]</$link>\\n<div>//A homemade edge-notched card system with vintage sorting needle and notching punch (click to expand). TiddlyWiki eliminates the [[chads|https://en.wikipedia.org/wiki/Chad_(paper)]], but it keeps alive the spirit of small units of information, non-hierarchical thinking, and easy sorting inherent in these systems.//</div>\\n</div>\\n\\nIn TiddlyWiki, ''everything is a tiddler'': content, configuration, user macros, plugins, {{Ltc:CoreCodeTiddlers||LieToChildrenTemplate}}. This means you get to use the same set of powerful tools for working with all these things. It's much like Unix's [[everything's a file|https://en.wikipedia.org/wiki/Everything_is_a_file]] philosophy, and it has the same benefits.\\n\\nThe way we slice our content up into tiddlers and relate those tiddlers to each other has a strong influence on both our patterns of thinking and the value of our notes. By slicing content into small, carefully defined tiddlers, we are able to reuse ideas and data in many more contexts than we could if they were organized like traditional notes, which makes not only our notes but also our thoughts more flexible. A substantial portion of the first two chapters will be spent on the question of how to slice up and relate tiddlers.\\n\\nThis section of the book, //Tiddlers//, is an example of a tiddler.\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\\n\"},\"Tips and Tricks\":{\"title\":\"Tips and Tricks\",\"caption\":\"7: Tips and Tricks\",\"created\":\"20210120034644865\",\"description\":\"In which we explore some widgets, tips, tricks, and hacks that will serve you well on the rest of your TiddlyWiki journey.\",\"list\":\"[[Getting the Current Tiddler Right on Drafts]] [[Hiding and Showing Things]] [[Miscellaneous Widgets]] [[Working with Dates]] Qualification\",\"modified\":\"20210502190532706\",\"parent\":\"Outline\",\"tags\":\"Chapter\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In this chapter, we'll explore a handful of additional widgets and techniques that may be useful on your TiddlyWiki journey.\\n\\n!! In this chapter\\n\\n{{||ChapterOutlineTemplate}}\"},\"Transclusions\":{\"title\":\"Transclusions\",\"created\":\"20200530170328830\",\"description\":\"Transclusions are like variables, but their value is stored in a field of a tiddler.\",\"modified\":\"20210409195700028\",\"parent\":\"Variables, Macros, and Transclusions\",\"tags\":\"Section Concept\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"''Field transclusions'' are much like [[variable references|Variables]], except instead of being set to a specific value by a `$set` widget or a macro definition, their value comes from a tiddler.\\n\\nSpecifically, a field transclusion, as its name suggests, references ''the contents of a particular field of a tiddler''. If we write `{{JaneDoe!!phone}}`, the contents of the `phone` field of the JaneDoe tiddler -- namely, Jane's phone number -- will appear in the output. Let's start a tiddler called `PhoneNumbers` and try that:\\n\\n```html\\n* JaneDoe -- {{JaneDoe!!phone}}\\n```\\n\\nYou should see:\\n\\n* JaneDoe -- 888-555-1234\\n\\nEither the left or the right side of the reference can be left off. Just `{{JaneDoe}}` refers to the `text` field of the `JaneDoe` tiddler, while just `{{!!phone}}` refers to the `phone` field of the current tiddler.\\n\\nJust like you can use the value of a variable or the result of a macro call as an attribute of a widget, you can use the value of a field transclusion as an attribute of a widget. For example, suppose we had a field on the current tiddler called `wikipedia-reference` that contained the name of a Wikipedia article it was based on, and we wanted to create a link to it:\\n\\n```html\\n<$macrocall $name=\\\"wikipediaLink\\\" article={{!!wikipedia-reference}} />\\n```\\n\\nNotice the similarity in form between the three wikitext methods we've encountered for referring to other content:\\n\\n* `[[double square brackets]]` -- to link to content\\n* `<<double angle brackets>>` -- to get content from a variable or macro\\n* `{{double curly braces}}` -- to get content from a tiddler field\\n\\nDirectly including entire tiddlers within other tiddlers, like `{{My Other Tiddler}}`, is uncommon in most wikis; linking is usually a more useful way of relating ideas. However, transclusion is invaluable in combination with filters for creating dynamic lists, tables, and other content. In fact, the whole interface of TiddlyWiki is actually created by transcluding a bunch of special tiddlers! Transclusion becomes even more useful once you understand //templates//, which we'll cover in the [[next section|Templates and the Current Tiddler]].\\n\\n!! A note on terminology\\n\\nTechnically, the form `<<double angle brackets>>` is called a ''variable transclusion'' or ''macro transclusion''. In the document-management-systems world, the word //transclusion// refers to including some other document or content at the location of the reference, and macros and variables do this just like field transclusions do.\\n\\nHowever, in non-technical contexts, people often use the term //transclusion// by itself to refer to a field transclusion. We will try to explicitly state what kind of transclusion we mean if it might be unclear, but for the most part you should read //transclusion// without a modifier as //field transclusion// in the remainder of this book.\\n\\n\\n!! Exercises\\n\\n{{Ex:JaneDataTransclusion||ExerciseTemplate}}\\n{{Ex:FudgeTransclusion||ExerciseTemplate}}\\n{{Ex:SearchingInTransclusions||ExerciseTemplate}}\\n{{Ex:LinkingInTransclusions||ExerciseTemplate}}\\n{{Ex:MultipleTransclusion||ExerciseTemplate}}\\n{{Ex:SelfTransclusion||ExerciseTemplate}}\\n{{Ex:CircularTransclusion||ExerciseTemplate}}\\n{{Ex:JaneManagerPhone||ExerciseTemplate}}\\n{{Ex:VariableTransclusion||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Tweaking Your Settings\":{\"title\":\"Tweaking Your Settings\",\"created\":\"20200530195556288\",\"description\":\"A quick look at some of the TiddlyWiki options you're most likely to want to change.\",\"modified\":\"20210504015001757\",\"parent\":\"The Shape of TiddlyWiki\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"If you've been following along so far, you should be looking at a `GettingStarted` tiddler in your new wiki. Let's take a few minutes to personalize it so you have somewhere comfortable to work while you do the exercises in this book.\\n\\nStart by setting the title and subtitle to something interesting in the `GettingStarted` tiddler. You'll see them change immediately at the top of the sidebar as you do.\\n\\nYou may also wish to click the “retain story ordering” button, if only because this means you don't have to decide what tiddlers to open when you start the wiki. With this option on, anytime you start up the wiki, any tiddlers you had open when you closed it down will be reopened.\\n\\nClose out of `GettingStarted` and click the gear icon <<textual-button \\\"options-button\\\">> on the page toolbar to open the control panel. There are a //lot// of settings available here, and many of them are interesting, but once you get familiar with TiddlyWiki, they are mostly self-explanatory. Thus, we'll look at a handful that will improve our initial experience, and once you've gotten the hang of TiddlyWiki, you can come back and explore the other options.\\n\\n!! Info tab\\n\\n; Animation duration\\n: Maybe I'm just an impatient person, but I find that dragging animations out over 400&nbsp;ms (almost half a second) makes my wiki feel really laggy. If you decrease it too far, though, you'll get vertigo; I find 200--250 is a nice compromise. To test values, create a new tiddler using the add button <<textual-button \\\"new-button\\\">> on the page toolbar, then close the new tiddler with the cancel button <<textual-button \\\"cancel-button\\\">> in its upper-right, and observe the speed and subjective experience of watching it open and close. Rinse and repeat until you find something comfortable.\\n\\n!! Appearance tab\\n\\n; Palette tab\\n: Pick a color scheme you like. I like to give each of my wikis a different one so I can quickly tell them apart if I have several open at once.\\n\\n; Toolbars tab/View Toolbar\\n: Tick the box next to //info//. The info button is really useful, and if it's hidden in the “more” menu when you're starting out, you may not remember it's even there!\\n\\n; Theme Tweaks tab\\n: If you have a large screen, you'll likely want to increase the amount of space allocated to the story river compared to the sidebar, or most of the space on your screen will be wasted. The easiest way is to change //Sidebar layout// to //Fluid story, fixed sidebar//. Unfortunately, this often makes the story river too wide (extremely long lines [[are much harder to read|https://practicaltypography.com/line-length.html]]), so you may want to increase the //Sidebar width// as well to compensate.\\n\\n!! Settings tab\\n\\n; Camel Case Wiki Links\\n: It's worth calling this one out even though we don't need to change the setting for now, because it's very divisive. If you don't want text RunTogetherLikeThis to automatically become links, switch this setting off. There are advantages and disadvantages to both settings, and I use both settings in different wikis. See the [[CamelCase]] appendix for details. Because I generally like camel-case for personal notes, we'll leave it on for this series.\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Upgrade\":{\"title\":\"Upgrade\",\"created\":\"20210407135618740\",\"modified\":\"20220103163946050\",\"tags\":\"Fragment\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"To update an old copy of //Grok TiddlyWiki// to this version without losing your takeaway progress and other customizations, drag the following links into your wiki: <$link to=\\\"$:/plugins/sobjornstad/GrokTiddlyWiki\\\"><$text text={{{ [[Grok TiddlyWiki version ]addsuffix{Metadata##version}] }}}/></$link>; <$link to=\\\"$:/plugins/sobjornstad/TakeAway\\\"><$set name=\\\"ta-version\\\" value={{{ [[$:/plugins/sobjornstad/TakeAway]get[version]] }}}><$text text={{{ [[TakeAway version ]addsuffix<ta-version>] }}}/></$set></$link>; <$link to=\\\"$:/plugins/sobjornstad/TiddlyRemember\\\"><$set name=\\\"tr-version\\\" value={{{ [[$:/plugins/sobjornstad/TiddlyRemember]get[version]] }}}><$text text={{{ [[TiddlyRemember version ]addsuffix<tr-version>] }}}/></$set></$link>. Sections, takeaways, exercises, and any other tiddlers that you have changed will be untouched during an upgrade.\"},\"Useful Plugins\":{\"title\":\"Useful Plugins\",\"created\":\"20201121233242024\",\"description\":\"A collection of particularly essential or interesting community plugins.\",\"modified\":\"20210327183341374\",\"parent\":\"Appendices\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"This section collects some plugins I find particularly useful that you may want to check out as well. There are //many// more out there.\\n\\n* [[TW5 Locator|https://bimlas.gitlab.io/tw5-locator/]] -- table of contents on steroids. Also makes it possible to easily search in fields and do a wide variety of other tiddler-organization-and-searching-related things.\\n* CodeMirror (find in the official plugins repository in //Control Panel > Plugins//) -- improves the text editor embedded in the edit view of TiddlyWiki with things like find-and-replace and keybinding sets to match popular editors like Emacs and Vim.\\n* Highlight (find in the official plugins repository) -- syntax highlighting on code blocks.\\n* KaTeX (find in the official plugins repository) -- insert mathematical notation and formulas between `$$double dollar signs$$` in your wiki.\\n* [[kin filter|https://bimlas.gitlab.io/tw5-kin-filter/]] -- allow finding tagged or linked items anywhere in a multi-level hierarchy. Like `tags[]`, `links[]`, etc., but more powerful.\\n* [[TiddlyTables|http://tiddlytables.tiddlyspot.com]] -- create pretty dynamic, interactive tables with less fussing with HTML\\n* [[Shiraz|https://kookma.github.io/TW-Shiraz/]] -- adds Bootstrap CSS classes to TiddlyWiki for pretty formatting.\\n* [[Relink|https://flibbles.github.io/tw5-relink/]] -- allows updating all references to a tiddler when renaming it; almost essential in large wikis where things change frequently.\\n* [[TiddlyRemember|https://sobjornstad.github.io/TiddlyRemember/]] -- transfer the most important parts of your notes into your brain by writing flashcards in your wiki and syncing them to [[Anki|https://apps.ankiweb.net/]]. The TakeAway tools in this book are built on TiddlyRemember.\\n* [[Date Picker|http://kixam.github.io/TW5-datePicker/]] -- to create fields that allow easily selecting dates and times, rather than manually typing in dates in TiddlyWiki's weird format.\\n\\nDavid Gifford's [[TiddlyWiki Toolmap|https://dynalist.io/d/zUP-nIWu2FFoXH-oM7L7d9DM]] is a brilliant, actively updated resource for finding plugins and other TiddlyWiki-related tools. The [[TiddlyWiki Links Aggregator|https://links.tiddlywiki.com]] is still in the early stages of development, but promises to be just as valuable.\"},\"Using Filter Expressions\":{\"title\":\"Using Filter Expressions\",\"created\":\"20200603023508416\",\"description\":\"Filter expressions, runs, and steps work together to select tiddlers.\",\"modified\":\"20210818203650408\",\"parent\":\"Filtering and Formatting\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"So that's what [[filters|Filters]] //are//…now what do they look like, and how do we use them?\\n\\nFilters, or, more formally, ''filter expressions'', consist of one or more ''filter runs'', which each contain one or more ''filter steps''. For now, we'll only worry about filter expressions containing a single run -- you'll be able to accomplish most basic tasks without needing multiple runs. However, know that individual runs [[can be combined in various ways|Multi-Run Filters]] to form a more complex filter expression, and we'll discuss this further in chapter 5.\\n\\nIf you've ever used any shell language (Bash, MS-DOS, PowerShell, etc.) -- or even if you haven't -- you can think of a filter run as a ''pipeline''. You put a list of tiddlers into the left end of the pipeline; unless you say otherwise, {{Ltc:AllTiddlersInTheLeft||LieToChildrenTemplate}} go in the left end. The tiddlers then pass from left to right through a series of steps in the pipeline. Each step can remove tiddlers from the list that don't match some criteria, generate and output a new list of tiddlers based on the existing list, or ignore the existing list and spit out an entirely new list. The next step then gets to make its own changes to the list output by this step, and so on until we come to the right side of the pipeline and the output of the last step is the result of the filter run.\\n\\nHere are some very simple filter expressions. Each of them has just one run containing one step:\\n\\n* `[title[JaneDoe]]` -- this returns the tiddler `JaneDoe`\\n** This is such a common usage that you can leave out the word `title`, resulting in just `[[JaneDoe]]`.\\n* `[tag[Contact]]` -- this returns all tiddlers tagged `Contact`\\n* `[links[]]` -- this returns all the tiddlers that have been linked to by any tiddler in your wiki\\n\\n\\n!! Trying some filters\\n\\nLet's try using some of these filters. To do so, open Advanced Search <<textual-button \\\"advanced-search-button\\\">>. You can find this option in the ''Tools'' tab in the sidebar or next to the search box, or you can press Ctrl+Shift+A. Then pick the ''Filter'' tab and type in one of the expressions above. You'll see a list of the tiddlers that match.\\n\\nIf you try the last filter listed above, `[links[]]`, you might notice a whole bunch of funny-looking tiddlers show up, with names starting with `$:/`. What's up with those? Those are [[system tiddlers|System Tiddlers]]; they contain configuration settings or bits and pieces of TiddlyWiki itself. If you don't want to see the system tiddlers, add `!is[system]` to the beginning of the filter run to eliminate them (read `!` as //not//). So that will look like `[!is[system]links[]]`.\\n\\nLet's look at that one again: `[!is[system]links[]]`. This run has two steps: first we eliminate all tiddlers that are system tiddlers (alternatively, you could choose to think of it as “keep all tiddlers that are not system tiddlers”), then we look at each of the tiddlers in that reduced list and spit out all of the tiddlers it links to.\\n\\n!! Common mistakes\\n\\nFilter expressions are quite sensitive to minor mistakes in punctuation. Once you've become familiar with the most common mistakes, spotting and fixing them will be trivial, but at first they may be extremely frustrating. These three errors are particularly common:\\n\\n* ''Forgetting the outer set of square brackets'', which define a filter run. Just `tag[Contact]`, for instance, is not a valid filter expression, as it consists of a single filter step, not a complete filter run. If you see the text //Filter error: Missing [ in filter expression// instead of the list of tiddlers you expected, this is likely your problem.\\n* ''Including the opening square bracket but not the closing one''. For some runs, the filter expression may //look// symmetric even if all the brackets haven't been closed yet (for example, `[tag[Contact]`). A useful habit to develop is inserting both the left and the right square bracket whenever you come to a left square bracket, then pressing the left arrow key to put the cursor back between them -- this way, you won't have to remember how many brackets need to be closed.\\n* ''Putting a space between filter steps'', like <code>[!is[system]&nbsp;links[]]</code>. What this actually does is filter on the values of the [[field|Fields]] called ` links` (a space followed by the word //links//). Unless that is actually what you want, leave out the space.\\n\\n!! Exercises\\n\\n{{Ex:CreatingBasicFilters||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\\n\"},\"Using Variables in Macros\":{\"title\":\"Using Variables in Macros\",\"created\":\"20200606025030461\",\"description\":\"Macros can reference variables as well as parameters via text substitution.\",\"modified\":\"20210410135535433\",\"parent\":\"Variables, Macros, and Transclusions\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"In many cases, macros get all the information they need to vary their output from their parameters. But it's also possible for them to get information from the values of variables where the macro is called.\\n\\nFirst of all, there's the obvious way, by simply using an ordinary ''variable transclusion'':\\n\\n{{Sn:MarksTheSpot||MagicSnippet}}\\n\\nHowever, as we just saw in the previous section, variable transclusions only work in a limited range of situations; sometimes we need [[Text Substitution]] to accomplish the goal of our macro. The syntax for performing ''text substitution on a variable'' is `$(variable)$` -- that is, add parentheses immediately inside the dollar signs that indicate the text substitution of a parameter. (Note that this only works within a macro -- you can't do text substitution of any kind outside a macro.)\\n\\nLet's look at our good old `getPhone` example again and make it work without parameters.\\n\\n```html\\n\\\\define getPhone()\\n{{$(person)$!!phone}}\\n\\\\end\\n\\n<$set name=person value={{!!manager}}>\\n\\t<<getPhone>>\\n</$set>\\n```\\n\\nNothing tricky here beyond remembering the syntax. But why would we want to do this? Generally, if we have the choice, we don't; it's clearer what information the macro is using when we use parameters, and it's not a good thing when macros do something surprising. (See the [[Principle of Least Astonishment|https://en.wikipedia.org/wiki/Principle_of_least_astonishment]].)\\n\\nHowever, there are some situations where text substitution on a variable can allow us to do something we couldn't do otherwise. Let's think back to the situation in [[Filters and Transclusions]] where we tried unsuccessfully to use a macro rather than including field transclusions in a filter. What we were trying to do was essentially this, if only it were valid syntax:\\n\\n```html\\n\\\\define myfilt(people)\\n[enlist[$people$]]\\n\\\\end\\n\\n<$list filter=<<myfilt {{!!family}}>> />\\n```\\n\\nOur attempts to fix this by changing the `myfilt` macro call to a `$macrocall` widget or by adding a variable were also unsuccessful, because we seemingly needed the also-invalid syntax:\\n\\n```html\\n<$set name=myvalue value=<$macrocall $name=\\\"myfilt\\\" people={{!!family}}/>>\\n```\\n\\nWith the ability to do variable text substitutions, now we can do it like this:\\n\\n```html\\n\\\\define myfilt()\\n[enlist[$(people)$]]\\n\\\\end\\n\\n<$set name=people value={{!!family}}>\\n\\t<$list filter=<<myfilt>> />\\n</$set>\\n```\\n\\nThis isn't quite as clean as just transcluding the fields directly into the filter as we learned how to do in [[Filters and Transclusions]] -- and if the list of people contains weird characters we could land ourselves in trouble since we're using text substitution -- but it's much better than some of the stuff we were trying to do before!\\n\\nYou will find this pattern quite helpful when dealing with multiple layers of macros and widgets.\\n\\n!! Exercises\\n\\n{{Ex:TelephoneLink||ExerciseTemplate}}\\n{{Ex:FilteredTelephoneLink||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Variables, Macros, and Transclusions\":{\"title\":\"Variables, Macros, and Transclusions\",\"caption\":\"4: Variables, Macros, and Transclusions\",\"created\":\"20200603200642700\",\"description\":\"In which we study a variety of ways to write some content in one place and reuse it in many other places, a capability which sounds boring but is in fact incredibly powerful and versatile, setting TiddlyWiki apart from the competition.\",\"list\":\"Variables Macros [[The Finer Points of Macros]] Transclusions [[Templates and the Current Tiddler]] [[Filters and Transclusions]] [[Text Substitution]] [[Using Variables in Macros]] Wikification [[Block Mode and Inline Mode]] [[Templates vs. Macros]] [[Summary of Macro and Transclusion Syntax]]\",\"modified\":\"20210407125009293\",\"parent\":\"Outline\",\"tags\":\"Chapter\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"''Variables'', ''macros'', and ''transclusions'' are all ways of writing some content once and using it in several different places. It is this philosophy of reuse that makes TiddlyWiki so powerful and flexible.\\n\\nThis chapter is the core of the book and the core of TiddlyWiki. Variables, macros, and transclusions, in one form or another, power most of the tools in TiddlyWiki that allow you to avoid repetitive work and customize your wiki to your liking. If you fully understand these three things and the way they integrate with the rest of TiddlyWiki, along with [[filters|Filtering and Formatting]], you'll be able to accomplish almost anything in TiddlyWiki.\\n\\nWhile variables, macros, and transclusions are simple concepts, the details take a bit of work to master, so this chapter is packed with exercises and will likely take you somewhat longer than the previous chapters to work through.\\n\\n!! In this chapter\\n\\n{{||ChapterOutlineTemplate}}\"},\"Variables\":{\"title\":\"Variables\",\"created\":\"20200530170346174\",\"description\":\"Variables let you assign a name to an arbitrary value, then use the name in place of the value in multiple places.\",\"modified\":\"20210409192158115\",\"parent\":\"Variables, Macros, and Transclusions\",\"tags\":\"Section Concept\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"''Variables'' are a simple way to define some wikitext in one place and refer to it in many places.\\n\\n!! How variables work\\n\\nA variable has a ''name'', which is how you refer to the variable, and a ''value'', which is the other piece of wikitext that it stands in for.\\n\\nAs a silly example, let's suppose corporate requires us to include a disclaimer at the end of every paragraph we write:\\n\\n> (This paragraph does not represent the formal opinion of my company.)\\n\\nWe can make this text into a variable using a ''`$set` widget'', like this:\\n\\n{{Sn:SetDisclaimer||MagicSnippet}}\\n\\nAs you can see in the example above, the `$set` widget doesn't itself display anything in the rendered version of your tiddler. However, in between the `<$set>` tags, TiddlyWiki will keep track of the fact that the variable `disclaimer` is set to the stated value. (Once we pass the closing `</$set>` tag, TiddlyWiki will forget about the variable. When this happens, we say that the variable has ''gone out of scope''.)\\n\\nIn order to actually use the variable, we put its name between double angle brackets `<<>>` in the spot where we want its value to show up. Let's edit our `EmployeeInformationSystem` tiddler to use this disclaimer:\\n\\n{{Sn:EmployeeInformationSystemDisclaimer||MagicSnippet}}\\n\\nCopy this into your version of the tiddler, and you should see the disclaimer appear in the rendered output at each spot where `<<disclaimer>>` appears in the wikitext.\\n\\n\\n!! Why use variables?\\n\\nEliminating repetition can save typing, which is nice but hardly anything to write home about. Much more importantly, if you want to change a snippet after you create it, ''you only have to change it in one place''. If you only use the snippet a couple of times, changing it in multiple places is no big deal, but there might be some things you end up using dozens or hundreds of times throughout your wiki. And sometimes a full wikitext snippet will be many lines long and easy to mistype, while a reference to a variable is short, concise, and easy to understand.\\n\\nAdditionally, some variables are ''set automatically by TiddlyWiki'', which can allow you to access information you otherwise wouldn't have. For instance, when we created a list widget to show all our meetings in the previous chapter, TiddlyWiki automatically set the `<<currentTiddler>>` variable to refer to the item which was currently being processed by the list widget.\\n\\nIn the real world, you will use [[macros|Macros]] or [[transclusions|Transclusions]] more often than variables when you want to use some wikitext in many places throughout your wiki. But all three of these mechanisms serve the same basic purpose -- avoiding repetition -- and offer the same benefits discussed here.\\n\\n!! Exercises\\n\\n{{Ex:UpdatingDisclaimer||ExerciseTemplate}}\\n{{Ex:EisVariable||ExerciseTemplate}}\\n{{Ex:SpacedVariable||ExerciseTemplate}}\\n{{Ex:VariableAfterSet||ExerciseTemplate}}\\n{{Ex:NestedSets||ExerciseTemplate}}\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Welcome to Grok TiddlyWiki\":{\"title\":\"Welcome to Grok TiddlyWiki\",\"created\":\"20210110055215195\",\"description\":\"An overview of the book and where you should get started.\",\"modified\":\"20210818155334391\",\"parent\":\"Front Matter\",\"tags\":\"Index Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Welcome to ''Grok TiddlyWiki'', the definitive TiddlyWiki learning resource! //Grok TiddlyWiki// is a textbook that helps you build a deep, lasting understanding of and proficiency with TiddlyWiki through a combination of detailed explanations, practical exercises, and [[spaced-repetition reviews|TakeAway Help]] of prompts called //takeaways//.\\n\\n[[TiddlyWiki|https://tiddlywiki.com]] is a human-shaped tool for organizing information and taking notes. It stores and relates information in a non-linear but structured way, just like your brain, and it doesn't forget things. Maintaining a well-organized TiddlyWiki requires a modest amount of effort, and TiddlyWiki has a bit of a learning curve, but it's extremely powerful and customizable, and once you grok it, it will change the way you take notes, think about your work and your ideas, and relate to information in general.\\n\\nTiddlyWiki shines at almost any task that involves organizing information and enabling creativity. People use TiddlyWiki for keeping notes at their jobs, collecting their ideas, keeping track of what they read, drafting books, building static websites, storing recipes, managing genealogical databases, planning tabletop role-playing campaigns, and much more.\\n\\nTo [[grok|https://en.wikipedia.org/wiki/Grok]] something is to understand it on a deep level, so thoroughly that it changes you and becomes part of your identity. This word is particularly appropriate when discussing TiddlyWiki, since its method of organizing information may well change the way you understand and relate to information in general.\\n\\n\\n!! Where do I start?\\n\\n* If you aren't sure if TiddlyWiki is for you yet, check out [[Why TiddlyWiki?]]\\n* If you know you want to learn TiddlyWiki but don't know if you want to learn from this book, read about the [[Philosophy of Grok TiddlyWiki]] to see if it seems like a good fit for you.\\n* If you're already partway through the book, or you want to see what topics are covered, visit the [[Outline]] or click the //Contents// tab in the sidebar.\\n* If you're ready to get started, start at [[How to Use This Book]], or, if you're feeling impatient, at [[The Shape of TiddlyWiki|The Shape of TiddlyWiki]].\\n\\n\\n!! How much does it cost?\\n\\n//Grok TiddlyWiki// is free to read. You are also free to copy and share the book under certain conditions, pursuant to the CC BY-NC-ND 4.0 license; please see the [[copyright notice|Copyright]] for details on the terms and conditions.\\n\\nThat said, I have spent hundreds of hours writing this book already, and the project isn't done – ongoing effort will be needed to keep it up to date as TiddlyWiki changes. So if you read the book and find it helpful, and you have the means to do so, ''please consider donating'' to support my work. You can give whatever you think the book is worth, from $5 to $100.\\n\\n<a href={{$:/sib/DonationLink}} class=\\\"tc-tiddlylink-external\\\">Donate here</a>, or use the //donate// link in the sidebar.\\n\\nYou can find other suggestions for helping out both //Grok TiddlyWiki// and the TiddlyWiki project in the [[Support Us]] appendix.\\n\\n\\n!! Who made this? How do I get in touch?\\n\\n//Grok TiddlyWiki// is written and maintained by Soren Bjornstad ([[about|https://sorenbjornstad.com]]; [[blog|https://controlaltbackspace.org]]; [[public notes|https://zettelkasten.sorenbjornstad.com]]; [[contact|https://sorenbjornstad.com/contact]]). The TiddlyWiki project [[considers GTW|https://tiddlywiki.com/#%22Grok%20TiddlyWiki%22%20by%20Soren%20Bjornstad]] “highly recommended” for learners, and I am an active participant in the TiddlyWiki community.\\n\\nYou can send me feedback on any section by clicking the //send feedback// link at the bottom of that section. Also feel free to email me with general questions, problems, or suggestions (see //contact// link above). Thanks [[to everyone|Acknowledgments]] who has offered feedback and other forms of assistance at every stage of //Grok TiddlyWiki//'s development.\\n\\nIf you're looking for one-on-one help learning TiddlyWiki or getting a wiki set up, I am occasionally available for online tutoring for an hourly fee; [[contact me|https://sorenbjornstad.com/contact]] if that sounds like something you might be interested in.\\n\\n\\n!! What version is this?\\n\\n|!Book version |{{Metadata##version}}|\\n|!TiddlyWiki version |{{Metadata##tw-version}}|\\n\\nEvery time I publish a new version of //Grok TiddlyWiki//, I increase the book's version number. To see what's changed in recent versions, visit [[Changes]]. You can always find the latest version at {{Metadata##project-url}}.\\n\\nThe TiddlyWiki version indicates which version of TiddlyWiki this version of //Grok TiddlyWiki// expects you to have; I try to keep it up to date with the newest version, but if I'm behind, it should be fine to use a newer version of TiddlyWiki than listed here. In contrast, using an older version than listed might mean some things the book tells you to do mysteriously don't work, so that's not a good idea! If you have an older version currently, you can visit the [[TiddlyWiki Upgrader|https://tiddlywiki.com/upgrade.html]] to update your wiki to the latest version.\\n\\n{{Upgrade}}\"},\"When Things Go Wrong\":{\"title\":\"When Things Go Wrong\",\"created\":\"20210120014333991\",\"description\":\"As your wikitext gets more complicated, it occasionally might not do what you were expecting; here's how you can figure out what you did wrong.\",\"modified\":\"20210504025852639\",\"parent\":\"Filtering and Formatting\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<<<\\nError messages can be terrifying when you aren't prepared for them; but they can be fun when you have the right attitude. Just remember that you really haven't hurt the computer's feelings, and that nobody will hold the errors against you.\\n\\n---Donald Knuth, //The TeXbook//\\n<<<\\n\\nIn this chapter, we started looking at some more complicated features of [[wikitext|Wikitext]]. The more complicated wikitext gets, the more likely you use it incorrectly by mistake. So before we finish out the chapter, let's talk briefly about what to do when some wikitext you're writing doesn't do what you think it should. TiddlyWiki, like all software, is pretty fussy: if you leave out a period in the wrong spot, you might get a totally different effect than the one you intended. As you continue to work on the exercises and with your own wikis, you will no doubt run into problems on occasion.\\n\\nFinding the errors will get easier as you learn more about TiddlyWiki. You'll get much faster at spotting minor syntax mistakes, and you'll have a deeper understanding of how TiddlyWiki works, so you'll be able to think through why something might not work. I also try to call out some of the most common errors in exercises and takeaways throughout the book, with the hopes that you'll be able to learn about at least a few of the errors ahead of time instead of through the school of hard knocks. In the meantime, let's look at some cognitive tools for working through problems when your prior experience fails you.\\n\\n\\n!! Use the scientific method\\n\\nIf you ever find yourself unsure how something works, try it! Devise and carry out a simple ''experiment'' that will answer the question. And take a page from science and isolate the single variable that you're wondering about. If you're not sure how a `$list` widget behaves, don't test it in the middle of a three-page-long tiddler with a complicated filter; copy and paste the widget you're having trouble with into a new tiddler by itself, simplify the filter to `[tag[MyTestTag]]` (adding that tag to a couple tiddlers if necessary), and explore from there. Once you've answered the question, you can bring your new understanding back to your original problem.\\n\\nSimilarly, consider ''splitting complex tasks into pieces'' and making sure that each piece is correct before proceeding to the next. That way, if everything doesn't work perfectly, it will be much more obvious where to look for the problem. If you're trying to use a `$list` widget, get your filter working in $:/AdvancedSearch before trying to use it in the widget. Then make sure the content of your widget looks right by itself, and only then wrap it in the `$list` widget and change the content to pick up the `<<currentTiddler>>` from the `$list` widget.\\n\\n\\n!! Talk to the duck\\n\\nGrab a rubber duck or some similar object and put it in front of your monitor. Your task is to ''explain what you're trying to do, from the beginning, to the duck''. The duck has a basic understanding of what TiddlyWiki is, so you don't have to try to explain, e.g., what a web browser or a tiddler is, but the duck still knows much less than you do, being a duck, so you should explain thoroughly and without leaving out any steps.\\n\\nThis works because, after looking at some wikitext for a while, we start to see each part of the wikitext as doing what we think it //should// do, or what we //meant// it to do, rather than what it's actually doing. Having to start the explanation over and go through it in detail means we're more likely to see where the reality doesn't align with our perception.\\n\\nYou can always talk to a real person instead, whether they know anything about TiddlyWiki or not – but a rubber duck is surprisingly functional and doesn't require you to find someone to bother, so there's less friction involved in trying this technique with an inanimate object.\\n\\n\\n!! Display the values of variables\\n\\nIn the next chapter, we'll start discussing [[variables, macros, and transclusions|Variables, Macros, and Transclusions]]. Oftentimes you will use variables, macros, and transclusions as part of widgets or filters (for instance, you might use the value of a variable in a filter). If your widget or filter isn't working right and you are at all uncertain about what's in the variable, try ''using the variable by itself in your wikitext'' and see what shows up in the preview. If the variable's value is wrong, investigating how it got set to the wrong value will likely point you to the problem.\\n\\n\\n!! Use your web browser's inspector\\n\\nIf something isn't displaying on the screen the way you expect, you might be able to spot what's going wrong by ''taking a closer look at the HTML source'' of the page. However, the standard “view source” option that we used in the [[Ex:ViewSource]] exercise in the [[HTML]] section won't work well here. For one, “view source” doesn't convert wikitext to HTML, so you can only get part of the picture. For another, the source for an average TiddlyWiki could be dozens or hundreds of pages long, and we hardly want to scan through it to find the spot on the page that's not working.\\n\\nThere's a better way: if you right-click anywhere on the page in TiddlyWiki, whether you're using it in a browser or in TiddlyDesktop, there will be an //Inspect// option. Choosing this option will open another window to the side of your wiki, which will let you explore the HTML of the page.\\n\\nNow, simply click the pointer icon in the far top-left corner of the inspector and hover the mouse over the area on the page exhibiting the problem. You'll see each area on the page highlighted as your cursor moves over it; each highlighted area represents an HTML element. When you find an element related to your problem, click and the relevant HTML will be highlighted in the inspector window. Taking a close look at the HTML generated by your wikitext may make the problem obvious.\\n\\n\\n!! Take a break\\n\\nIf you start getting frustrated, ''step away from the computer'' for ten to twenty minutes. Ideally, go outside and take a walk, and don't think about the problem at all for at least five minutes; let your mind wander. You'll often have solved the problem by the time you get back, and even if you haven't, you'll be less frustrated and more likely to spot mistakes.\\n\\n\\n!! Ask for help\\n\\nIf you really run out of ideas, you can ask the TiddlyWiki community for assistance; see [[Getting Help]] to learn how.\\n\\n\\n!! Exercises\\n\\n{{Ex:InspectSquare||ExerciseTemplate}}\\n{{Ex:RubberDucking||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\\n\"},\"Why TiddlyWiki?\":{\"title\":\"Why TiddlyWiki?\",\"created\":\"20200531034640143\",\"description\":\"What makes TiddlyWiki worth learning and using?\",\"modified\":\"20211129231939612\",\"parent\":\"Front Matter\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"There are a lot of tools for taking notes and storing information out in the world, and most of them are easier to learn than TiddlyWiki. So you might ask, why should you care? What makes TiddlyWiki good enough that it's worth working through a textbook to learn?\\n\\nBecause TiddlyWiki offers an entirely new way of thinking (there's a reason this book is called //Grok TiddlyWiki//, and it's not just because [[grok|https://en.wikipedia.org/wiki/Grok]] is a fun word), it can be difficult to explain and the benefits can appear underwhelming to those who haven't experienced it. I'll try to share as much as I can in this section.\\n\\n!! Talking points\\n\\n{{$:/plugins/sobjornstad/TakeAway/ContextualHelp/DetailsWidget}}\\n\\n<$details summary=\\\"Works like you think\\\">\\n\\nTraditional information-management systems, both paper and digital, encourage or require you to put notes into “boxes” of one kind or another: notebooks, pages, categories, hierarchies. Notes, once added, stay static, stuck in the same place and time forever, so they quickly get out of date and you forget about them.\\n\\nCategories and hierarchies are sometimes unfairly maligned. In reality, they are powerful supplemental tools for thinking; sometimes, in order to think about a topic, we need to add additional order to a set of ideas to [[reduce them to a level of complexity we're capable of thinking about|https://zettelkasten.sorenbjornstad.com/#InformationalJig]], and these tools give us that ability. But as a general-purpose organization method, these tools are terrible: they prevent ideas from being effectively used outside their original context and force us to collapse distinctions that we might prefer to maintain. For notes to reach their full potential, we need to allow them to relate in a greater variety of ways. Further, we don't naturally think in hierarchies except when we are tackling a specific problem; we think in links and webs of ideas.\\n\\nIf you doubt that we don't think in hierarchies, try this. Think of the color white. You can take this idea in an almost infinite number of directions with no effort at all: What are some white things? What other colors are there? What categories does white fit into? What metaphors involve whiteness? And from each of the ideas you generate as answers to those questions, you can quickly generate another set of associations. Three or four jumps, and the relationship between the two ideas is unrecoverable except by the path you traced. This is not the mark of hierarchical organization.\\n\\nTiddlyWiki mirrors the way you think. While you can create traditional categories and hierarchies where they're helpful, these aren't the primary way of organizing content. Instead, you break ideas out into small, reusable pieces called [[tiddlers|Tiddlers]], and relate them and further describe their properties using [[links|Links]], [[tags|Tags]], and [[fields|Fields]]. You can query based on all these properties and more using [[filters|Filters]], and weave tiddlers together into other tiddlers to create aggregations and summaries using [[transclusion|Transclusions]].\\n\\nThese mechanisms, properly used, allow relationships between ideas to magically jump out at you, and you can easily find the related bits that you //just know// are there somewhere but can't ever seem to find in traditional notes systems. Sometimes you may even find notes you didn't remember you took but turn out to be exactly what you need. Almost every TiddlyWiki user has had the experience of having some brilliant new idea and going to the appropriate spot to add it, only to find that it's already there.\\n\\nMost notes systems fail at the seemingly elementary requirement of matching the way you think. (Why would you use a tool for thinking that doesn't match the way you think?) A few succeed, but those that do usually don't also have the advantages below.\\n\\n</$details><$details summary=\\\"Easy and flexible formatting\\\">\\n\\nIn TiddlyWiki, notes are written and formatted using a markup language called [[wikitext|Wikitext]] (rather like [[Markdown|https://en.wikipedia.org/wiki/Markdown]]). This language is relatively easy to learn and offers a more flexible way of formatting notes than WYSIWYG editors like those used by word processors or email programs.\\n\\nAdvanced users or anyone needing detailed control over how their notes look can fall back to [[HTML]] and [[CSS|Stylesheets]], the same languages used for styling web pages. You can write [[macros|Macros]] or use [[templates|Templates and the Current Tiddler]], along with CSS, for full [[separation of content and presentation|https://en.wikipedia.org/wiki/Separation_of_content_and_presentation]]. You can even write parts of your notes directly in HTML or in Markdown (via a plugin) if you like.\\n\\n[img [side-by-side-wikitext.png]]\\n\\n</$details><$details summary=\\\"Radically customizable\\\">\\n\\nWikitext is mostly a formatting language, but it's also a declarative language for finding and making changes to notes. For instance, you can create an automatically-updating list of all the kinds of tea you've discussed in your wiki, each with a companion button that takes you to the webpage where you can reorder it and records that you've done so in a list of purchases. //Grok TiddlyWiki// implements an integrated spaced-repetition flashcards program, [[TakeAway|TakeAway Help]], entirely in wikitext!\\n\\nAlmost every aspect of TiddlyWiki's user interface and behavior can be changed without leaving your wiki -- though the out-of-the-box situation is plenty good for many use cases already. There are [[scores of useful plugins|Useful Plugins]] on the web, and it's easy to create your own (in fact, [[plugins are nothing more than|Plugins]] an easily distributable bundle of the same content you normally put in a wiki). The ability to evolve your content and the tool you use to create the content simultaneously is uniquely efficient, empowering, and mind-expanding.\\n\\n</$details><$details summary=\\\"Free, future-proof, and portable\\\">\\n\\n* TiddlyWiki is ''free as in beer''. Many notes apps are, but many of the better ones will cost you a monthly fee. A small monthly fee probably isn't a big deal, but who wouldn't prefer not having one if the software is just as good?\\n* TiddlyWiki is ''free as in freedom''. Unlike proprietary tools like Evernote, Roam Research, and OneNote, you have complete freedom to use TiddlyWiki for any purpose you want, share it with others, and modify it if you need or want to. You will never lose access to your notes because a company decided the service wasn't profitable anymore. If you're planning to write a lot of notes, this should be non-negotiable.\\n* TiddlyWiki has a ''commitment to longevity''. Its backwards-compatibility is excellent. When TiddlyWiki 5, which was an entirely new design without backwards compatibility, was introduced some years ago, the old version was not thrown out but continues to be actively maintained and considered a first-class citizen, with even the occasional new feature, for those users who still have large wikis on the old system that aren't worth migrating. This is vanishingly rare in the software world nowadays, and if you're looking at keeping a lot of important notes, it's an important quality. The only note tools I know of likely to achieve a better compatibility and longevity record than TiddlyWiki are plain-text files and paper, both of which are comparatively poor at organizing ideas.\\n* TiddlyWiki is ''portable''. It runs in an ordinary web browser, so it works on virtually any computer or operating system. Many people have reported opening unmodified TiddlyWikis from years prior and having them still work just fine in a modern browser. If you want to share your wiki with someone, you can just email them the file and be virtually assured they can open it.\\n* TiddlyWiki is ''decentralized''. You can choose to keep your wiki as a single HTML file that you can ship around or as a folder of content served by an included lightweight web server. If you go the file route but want your wiki accessible on more than one computer, you can keep it in cloud storage like Dropbox or GitHub, or use a web hosting service. Nobody gets to handle your data unless you choose to trust them, and if you become disenchanted with one provider or storage method, there are dozens of other options.\\n\\n</$details><$details summary=\\\"The bad\\\">\\n\\nWhile I love TiddlyWiki, no software is perfect, so it's worth pointing out some of TiddlyWiki's flaws as well.\\n\\n* Most importantly, TiddlyWiki ''requires some effort to master''. This is inevitable for a tool as powerful as TiddlyWiki, but it's a significant barrier nonetheless. TiddlyWiki works differently from other tools you've used, and you need to develop a few new skills to take full advantage of it. Almost anyone can learn, and this book will help you, but if you're looking for something that works great right away without any commitment on your part, TiddlyWiki may not be for you. (You can get up and running with TiddlyWiki quickly enough, but you likely won't find it much better than any other tool until you learn a bit more.)\\n* Handling ''images and attachments'' in TiddlyWiki can be somewhat troublesome. If you occasionally like to add images or attach files to your notes, this is unlikely to be a big deal. If the main thing you want to do with your note-taking app is organize images or other files, you may be better off looking for a different solution. See [[Images and Attachments]] for details.\\n* TiddlyWiki's ''keyboard shortcuts'' are somewhat deficient compared to a desktop notes application, at least in a default setup, although this has improved recently. It is possible, however, to give at least the text entry fields some standard keybindings (e.g., vi-compatible) using the [[CodeMirror plugin|Useful Plugins]].\\n* Using TiddlyWiki to collaborate on a wiki with ''multiple users'' is still in its infancy. While there is some effort at changing this, particularly with the [[Bob plugin|https://github.com/OokTech/TW5-Bob]], TiddlyWiki is by and large a single-user tool.\\n\\n</$details>\\n\\n!! Experience TW for yourself\\n\\nIf you have around an hour, check out the video [[Experience TiddlyWiki Fluency: Creating a Reading List|https://www.youtube.com/watch?v=vsdDs7oOLlg]], which will show you the experience of building a small tool in TiddlyWiki. You can also play around in some [[Public Wikis]], such as [[my Zettelkasten|https://zettelkasten.sorenbjornstad.com]].\\n\\n<iframe style=\\\"width: 100%; height: 3in;\\\" src=\\\"https://www.youtube.com/embed/vsdDs7oOLlg\\\" title=\\\"YouTube video player\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe>\\n\\n!! Sold?\\n\\nIf TiddlyWiki sounds like what you've been looking for, proceed to [[Philosophy of Grok TiddlyWiki]] to see if this book is a good way for you to learn TiddlyWiki, to [[How to Use This Book]] to learn more about how the book works, or to [[The Shape of TiddlyWiki|The Shape of TiddlyWiki]] to jump in.\\n\\nIf you end up using and liking this book, consider <a href={{$:/sib/DonationLink}} class=\\\"tc-tiddlylink-external\\\">chipping in a few dollars</a> to support my work on it.\"},\"Widgets\":{\"title\":\"Widgets\",\"created\":\"20201125033901397\",\"description\":\"Widgets are a TiddlyWiki extension to HTML exposing wiki-specific functionality.\",\"modified\":\"20210315202332008\",\"parent\":\"Filtering and Formatting\",\"tags\":\"Section Concept\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"''Widgets'' {{Ltc:WidgetsExtension||LieToChildrenTemplate}} to [[HTML]]. They look and work almost exactly like HTML elements, except they have a `$` before the tag name, and TiddlyWiki does further processing on them prior to sending them to your browser for display.\\n\\nAll the formatting instructions you use in wikitext, like `//italics//` or `[[links]]`, have either a corresponding HTML element or a corresponding widget. Just like we sometimes need or want to use raw HTML elements for more control over formatting, we sometimes need or want to use raw widgets.\\n\\nThere are also many widgets that have no equivalent at all in wikitext, because you can only make the symbols on the keyboard do so many things! We will be seeing some of these widgets throughout the rest of the book.\\n\\n!! Widget example\\n\\nLet's suppose we want to link to another tiddler. You can create a link with the double-bracket syntax in wikitext:\\n\\n{{Sn:WikitextLink||MagicSnippet}}\\n\\nOr you can use the `$link` widget:\\n\\n{{Sn:WidgetLink||MagicSnippet}}\\n\\nAt the moment, this looks like it's just an overly verbose way to write a link, but in later chapters, we'll see that there are some things that we can do with this syntax that we can't do with the double-bracket syntax.\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Wikification\":{\"title\":\"Wikification\",\"created\":\"20201124152747833\",\"description\":\"TiddlyWiki converts wikitext into HTML for display by //wikifying// it. This process may sometimes need to be triggered manually.\",\"imageurl\":\"https://upload.wikimedia.org/wikipedia/commons/b/bb/Kittyply_edit1.jpg?download\",\"modified\":\"20210502190009149\",\"parent\":\"Variables, Macros, and Transclusions\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define wikipediaUrl(article)\\n  {{$:/BaseWikipediaUrl}}/$article$\\n\\\\end\\n\\n''Wikification'', in TiddlyWiki, is the process of taking wikitext and turning it into pure HTML that a browser can read directly (or, occasionally, into plain text or some other format). This includes processing markup like `//italics//`, rendering widgets, invoking macros, transcluding other tiddlers, and so on.\\n\\nWikification can be understood as a sort of preprocessing or pre-rendering: first TiddlyWiki renders the wikitext into HTML, then your browser renders the HTML on your screen.\\n\\n!! When wikification happens\\n\\nObviously, processing and formatting wikitext is one of the most essential functions of TiddlyWiki. It happens anytime a tiddler is displayed. However, just because you put some wikitext somewhere in TiddlyWiki does not guarantee it will be wikified.\\n\\nIn general, ''anytime a chunk of wikitext ends up in the body of a tiddler that is being displayed'', TiddlyWiki tries to wikify it. The chunk might be the entire text of the tiddler or the result of a single field or variable transclusion or macro call. (As we discussed in [[Text Substitution]], it will never be composed of the result of //several// of these things next to each other, or the result of one of these things plus some raw text in the body of the main tiddler: the result of each transclusion is a separate chunk.) If the result of wikifying one of these things still contains wikifiable wikitext -- for instance, the result of wikifying the `{{tiddler!!field}}` transclusion syntax is some wikitext contained in the `field` field -- TiddlyWiki will try to wikify that as well. It will repeat this step until there is no more unwikified wikitext, or until it detects that it has gotten stuck in an infinite loop (recall [[Ex:SelfTransclusion]]).\\n\\nHowever, there is one huge exception: when you use a transclusion (whether of a field or a macro/variable) as a parameter to an HTML or widget attribute, ''the result of this transclusion is //not// wikified''. In other words, TiddlyWiki doesn't attempt to repeatedly wikify the result of the initial transclusion like it does with body text; it does it exactly once and then stops.\\n\\nThis will become more clear with an example:\\n\\n{{Sn:TestVar12||MagicSnippet}}\\n\\nAs you can see, `XYZ` is rendered by this snippet. Let's follow along with TiddlyWiki to see why:\\n\\n# In the first `$set` widget, the variable `testVar1` gets set to the text `XYZ`.\\n# In the second `$set` widget, the variable `testVar2` gets set to the text `<<testVar1>>`.\\n# The variable reference `<<testVar2>>` is used directly within the body of the tiddler. When rendering the tiddler, TiddlyWiki comes to it and looks up the value of the variable `testVar2`; it finds `<<testVar1>>`.\\n# `<<testVar1>>` is a new chunk of wikitext that can be further processed, so TiddlyWiki wikifies that as well. This time that process substitutes the value of the variable `testVar1`, yielding `XYZ`.\\n# At this point, there is nothing left to do with the text `XYZ`, since it is already plain text with no wikitext syntax, so TiddlyWiki shows `XYZ` on the screen and moves on to the rest of the tiddler.\\n\\nHowever, if we make a minor change so that `testVar2` is the attribute of a widget…\\n\\n{{Sn:TestVar122||MagicSnippet}}\\n\\n…now the literal text `<<testVar1>>` prints out:\\n\\n# In the first `$set` widget, the variable `testVar1` gets set to the text `XYZ`.\\n# In the second `$set` widget, the variable `testVar2` gets set to the text `<<testVar1>>`.\\n# The macro substitution `<<testVar2>>` is used as an HTML attribute. When rendering the tiddler, TiddlyWiki comes to a variable substitution and looks up the value of the variable `testVar2`; it finds `<<testVar1>>`.\\n# Because this is an HTML attribute, TiddlyWiki does not attempt to wikify the result, `<<testVar1>>`, again; instead, it passes it directly to the `$text` widget.\\n# The `$text` widget sees that it's been asked to display the text `<<testVar1>>`, so it does so.\\n\\nYou might initially think this has something to do with the `$text` widget in particular, since that widget's usual use is to inhibit wikification or formatting, but that isn't the case; it applies to any widget or HTML tag, as we'll see in a moment.\\n\\n\\n!! Manual wikification\\n\\nThat was a good example for demonstrating what TiddlyWiki does and does not wikify, but it didn't do anything useful, so at this point it may be hard to see why the lack of wikified attributes would be a concern. As a more practical example, let's suppose that we're creating a wiki about animals, and we want to include a picture of each animal in its corresponding tiddler. We might add an `imageurl` field to each tiddler to store the URL of an appropriate image. We then want to create a template, called `TiddlerImage`, that displays the image found in the `imageurl` field of the current tiddler.\\n\\nLet's try this in our sample wiki. We can start the `TiddlerImage` tiddler with the HTML syntax for an image:\\n\\n```html\\n<img src={{!!imageurl}}>\\n```\\n\\nNow, if we populate the `imageurl` field on some tiddler with a URL and include the template transclusion `{{||TiddlerImage}}`, the image will appear. If you don't have an image URL handy, you can use this picture of a cat: `https://upload.wikimedia.org/wikipedia/commons/b/bb/Kittyply_edit1.jpg?download`.\\n\\nHowever, what if you want to ''keep part of the URL in another tiddler''? In the above URL, perhaps we are using a lot of images from Wikimedia Commons in our wiki, and we want to store the base URL `https://upload.wikimedia.org/wikipedia/commons` in a tiddler called `WikimediaCommonsUrl`. Then in the `imageurl` we could just use: `{{WikimediaCommonsUrl}}/b/bb/Kittyply_edit1.jpg?download`. This way, if Wikimedia Commons ever changes its web address (unlikely, to be sure!), we can quickly update all our links.\\n\\nIf you try this, though, you'll find that the image doesn't appear; instead a “broken image” icon will appear. Since it might be hard to see exactly //why// it doesn't work, try selecting the image with your browser's element inspector (if you've forgotten how that works, review [[When Things Go Wrong]]). After a close look at the HTML, the problem should be obvious: the `src` attribute literally begins with `{{WikimediaCommonsUrl}}`, it hasn't been replaced with the contents of that tiddler. Since that isn't a valid URL of an image, no image is displayed.\\n\\nHow, then, can we get the transclusion to expand? What we need is a way to wikify the wikitext //while it's still in a variable//, rather than waiting until it's actually rendered as part of a tiddler (because it never will be rendered as part of a tiddler the way we're using it). The appropriately named `$wikify` widget provides this capability. We can modify our example to use this widget as follows:\\n\\n```html\\n<$wikify name=wikifiedImageUrl text={{!!imageurl}}>\\n    <img src=<<wikifiedImageUrl>>>\\n</$wikify>\\n```\\n\\nIf you try again using this snippet, you'll find that the image appears as expected.\\n\\nThe `$wikify` widget has several other options, such as the format to parse the text into (plain text, HTML, a JSON parse tree, and so on). You can read about them in the [[documentation|https://tiddlywiki.com/#WikifyWidget]] on https://tiddlywiki.com.\\n\\n\\n!! Parameter and variable references in macros require wikification\\n\\nIt is worth pointing out that both `<<variable references>>` and `<<__macro-parameter-as-variable references__>>` are not evaluated until they are wikified, which means that such references do not work at all when their containing macro is used as the value of an HTML or widget attribute:\\n\\n{{Sn:AttributeParameterSubstitution||MagicSnippet}}\\n\\nIn practice, this means that [[text substitution|Text Substitution]] must be used when the macro is being used as the value of an attribute.\\n\\n\\n!! Exercises\\n\\n{{Ex:WikifyWikipediaLink||ExerciseTemplate}}\\n{{Ex:LiteralMatters||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\\n\"},\"Wikitext Reference\":{\"title\":\"Wikitext Reference\",\"created\":\"20210131044310808\",\"description\":\"A concise listing of the most common wikitext syntax.\",\"list\":\"Wr:InlineFormatting Wr:Links Wr:Headings Wr:Lists Wr:Quotes Wr:CodeBlocks Wr:Images Wr:Transclusions Wr:Tables Wr:HorizontalRules Wr:LineBreaks Wr:Styles\",\"modified\":\"20210819210139602\",\"parent\":\"Appendices\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"[[Wikitext]] is extremely powerful, but can take a few weeks to fully internalize. When clicking the buttons on the editor toolbar isn't enough to remind you what syntax to use, you can review this concise, example-heavy appendix for details on the most common wikitext markup.\\n\\nThis reference is not exhaustive. In particular, [[widgets|Widgets]] are not included, as that would make it unreasonably long. You can quickly find details on all the widgets by searching in the [[TiddlyWiki documentation|https://tiddlywiki.com]].\\n\\n<$list filter=\\\"[<renderingStatic>!match[yes]]\\\" variable=_ emptyMessage=<<list-links \\\"[all[tiddlers+shadows]tag[Wikitext Reference]]\\\">>>\\n\\t<<tabs \\\"[all[tiddlers+shadows]tag[Wikitext Reference]]\\\" default:\\\"Wr:InlineFormatting\\\">>\\n</$list>\"},\"Wikitext\":{\"title\":\"Wikitext\",\"created\":\"20210115203325002\",\"description\":\"Wikitext is a markup language used to format tiddlers.\",\"modified\":\"20220103154922740\",\"parent\":\"The Shape of TiddlyWiki\",\"tags\":\"Concept Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Many text-editing and note-taking tools are //WYSIWYG// (“What You See is What You Get”): that is, while editing the document, it looks exactly like it will look when viewed or printed. Common tools like Microsoft Word, Google Docs, Outlook, Gmail, and Evernote use this type of editor.\\n\\nTiddlyWiki takes a different approach: it uses a ''markup language'', or ''WYSIWYM'' paradigm (“What You See is What You Mean”). In this type of editor, you see only plain text while editing, and you include special characters or phrases (“markup”) along with the text to explain how it should be formatted when you view it. For instance, to see text in //italics// while viewing it, you put it between `//double slashes//` while editing.\\n\\nIf you've never used a markup language before, this may seem like a primitive and overly difficult way to write content, and it's true that markup languages take a little longer to learn than WYSIWYG editors, but once you've learned them, they are more powerful. You'll see some of the advantages yourself as you work through this book, but if you're impatient, you can check out the [[Advantages of WYSIWYM]] appendix.\\n\\nThe specific markup language TiddlyWiki uses is called ''wikitext''. It is similar, but not identical, to other popular markup languages like MediaWiki, Markdown, reStructuredText, and AsciiDoc.\\n\\nWe'll look at some of the most important and popular wikitext syntax shortly. (//Syntax// comprises the rules for producing correctly formed sentences or expressions in a natural or computer language.) You can also visit the [[Wikitext Reference]] appendix at any time to look up the syntax.\\n\\nAnother useful tool as you're learning is TiddlyWiki's ''editor toolbar'', which includes a number of buttons that insert common markup. For instance, you can click the italics button to insert the text `////` and put the cursor in between the slashes, or click the button with some text already highlighted to surround it with slashes. TiddlyWiki also offers a side-by-side preview, so you can write wikitext on the left and see the displayed version on the right; we'll see how to do this when we start writing tiddlers in the [[Journal Tiddlers]] section. Here's an example of what writing in wikitext looks like with the side-by-side preview (from my [[Zettelkasten|Public Wikis]]):\\n\\n{{side-by-side-wikitext.png}}\\n\\nSometimes text in the raw markup language (in TiddlyWiki, that's wikitext) is called ''source'', and the displayed version is called ''output''. In the screenshot above, the left half is source and the right half is output. The process of turning source into output and displaying it on the screen is called ''rendering''.\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\\n\\n\\n\"},\"Working with Dates\":{\"title\":\"Working with Dates\",\"created\":\"20210206180622120\",\"description\":\"TiddlyWiki offers tooling for displaying, retrieving, and computing differences between dates.\",\"modified\":\"20210502161621186\",\"parent\":\"Tips and Tricks\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Dates are messy. The calendar is weird, for one thing: days of the week don't fall on the same days every year, there are leap years, there used to be the [[Julian calendar|https://en.wikipedia.org/wiki/Julian_calendar]]. Then time zones get in the way. Then we have a zillion different ways of writing the same dates and times.\\n\\nAll this is to say, don't expect TiddlyWiki to work miracles here: dates are hard no matter what, and TiddlyWiki doesn't work that hard for us to make them easier. But if you understand a few things, you should be able to avoid getting entirely defeated by dates and times.\\n\\n!! Timestamp format\\n\\nAs we learned in [[Meeting Tiddlers]], {{Datetime Format}}\\n\\nThis format, sometimes called a ''timestamp'', is used for storing dates in the built-in `created` and `modified` dates. You should normally use this same format for any date fields that you create, so that you can take advantage of all the other date tools described below.\\n\\nIt's possible to leave some digits of precision off, for instance, the milliseconds. Any missing digits are assumed to be zero (if this produces an invalid date, the result is relatively meaningless but will be an earlier day than the remaining digits would suggest).\\n\\n''Beware of leaving the time off entirely.'' If you do that, it will be midnight UTC, and if you live in the Western Hemisphere, your timezone has a negative [[UTC offset|https://en.wikipedia.org/wiki/UTC_offset]]. This will cause dates at midnight UTC to roll over to the previous day when converted to your local time (so if you say `20200602`, it will display as June 1, 2020). It's safer to specify a time of 12:00 noon if you don't care about the time -- this will always work right //almost// everywhere in the world (there are a handful of locations around the Pacific that have a +12 or higher offset, so if you live there you might need to bring it back a couple of hours).\\n\\n\\n!! Displaying dates\\n\\nWay back in [[Meeting Tiddlers]], you were given the following mysterious magic snippet to check your work writing a date field:\\n\\n{{Sn:MagicDateSnippet||BasicSnippet}}\\n\\nThis ought to be easier to understand now. The `$view` widget, as mentioned in [[Hiding and Showing Things]], allows you to look at the contents of fields. It's much like [[transcluding a field|Transclusions]], but it doesn't wikify the contents; instead, it can display them verbatim or apply a variety of other formats. In this case, we've chosen the `date` option, one of the widget's most important applications. We additionally have to supply a `template`, which is a date format string, consisting of placeholders describing what components of a date should go where. In this case, it shows the day of the month, the month name, the four-digit year, and the hour, minute, and second in 12-hour format, with AM or PM listed at the end. A list of all the placeholders can be found in the [[Date Format|https://tiddlywiki.com/#DateFormat]] section of the TiddlyWiki documentation.\\n\\nAs another example, let's see on what day the `Metadata` tiddler describing the version of this book was last modified, in a long date format typical for the United States:\\n\\n{{Sn:MetadataDateUpdated||MagicSnippet}}\\n\\n\\n!! Getting the current date\\n\\nAs we discussed in [[Creating Tiddlers With Predefined Fields]], it's commonly helpful to ''retrieve the current date and time'' in order to prefill a field. This can be done with the `now` macro, which accepts any date format string, as described above, as an argument. For some reason, it does not default to the format string needed to produce the standard internal format, which isn't exactly easy to remember, so I find it helpful to add a [[global macro|Global Macros]] like the following:\\n\\n{{Sn:NowTimestamp||MagicSnippet}}\\n\\n\\n!! Calculations with dates\\n\\nYou can use the `days` filter operator to find tiddlers that have a date tiddler before or after a particular time relative to the current date. For instance, to find all meetings that have occurred in the last 7 days or have yet to occur, we could say:\\n\\n```html\\n<<list-links \\\"[tag[Meeting]days:at[-7]]\\\">>\\n```\\n\\nUnfortunately, the [[documentation|https://tiddlywiki.com/#days%20Operator]] of the `days` operator is, as of this writing, almost useless. I have read it dozens of times and am no closer to understanding what it means, and nobody I have talked to has professed to actually understand the operator. A more useful reference I often visit is this [[forum thread|https://groups.google.com/g/tiddlywiki/c/60yAONBAh04/]]; you might want to bookmark that now.\\n\\n\\n!! Plugins\\n\\nFor more complicated needs, a wide variety of [[plugins|Useful Plugins]] and tricks are available, including these:\\n\\n* [[Calculating “N days from now”|https://groups.google.com/g/tiddlywiki/c/y_GjM302u60]]\\n* [[Date picker|http://kixam.github.io/TW5-datePicker/]] -- provides an `$edit-date` widget so you don't have to manually figure out what the appropriate timestamp is for an arbitrary date\\n\\n\\n!! Exercises\\n\\n{{Ex:CreatedNowButton||ExerciseTemplate}}\\n{{Ex:DateFormatter||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Wr:CodeBlocks\":{\"title\":\"Wr:CodeBlocks\",\"caption\":\"{{$:/core/images/mono-block}} Code blocks\",\"created\":\"20210131145918563\",\"modified\":\"20210320144937334\",\"tags\":\"[[Wikitext Reference]]\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Code blocks work much like block quotes, only they begin and end with <code>&#96;&#96;&#96;</code> instead of `<<<`, and they display their contents in a fixed-width font, respecting line breaks. If you install the official Highlight [[plugin|Plugins]], you can also specify a language for [[syntax highlighting|https://en.wikipedia.org/wiki/Syntax_highlighting]] after the opening backticks.\\n\\n{{Sn:WikitextCodeBlock||MagicSnippet}}\"},\"Wr:Headings\":{\"title\":\"Wr:Headings\",\"caption\":\"{{$:/core/images/heading-1}} Headings\",\"created\":\"20210131145939469\",\"modified\":\"20210320145007635\",\"tags\":\"[[Wikitext Reference]]\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{Sn:WikitextHeadings||MagicSnippet}}\\n\\nHeadings should be used sparingly in TiddlyWiki. If you find yourself creating complex multi-level headings within a tiddler, you [[should probably be creating multiple tiddlers|Slicing Up Content]] instead.\\n\\nHeading 1 is usually not used (in HTML documents, it is reserved for the page title).\\n\\nAnything below Heading 4 is smaller than the body text and not particularly useful. If you find yourself needing anything deeper than Heading 3, you should //definitely// be splitting out into multiple tiddlers anyway. I typically try to avoid more than one level of headings within an individual tiddler.\\n\\nHeadings are [[block-level elements|Block Mode and Inline Mode]], so you need to put a blank line between text and a following heading, or the heading will get rolled into the preceding paragraph, which is almost certainly not what you want:\\n\\n{{Sn:WikitextHeadingsRolledIn||MagicSnippet}}\"},\"Wr:HorizontalRules\":{\"title\":\"Wr:HorizontalRules\",\"caption\":\"Horizontal rules\",\"created\":\"20210131152830004\",\"modified\":\"20210320145050316\",\"tags\":\"[[Wikitext Reference]]\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"You can put a horizontal rule in your tiddler to mark a new, unnamed section by putting at least three hyphens on a line by themselves after a blank line:\\n\\n{{Sn:WikitextHorizontalRule||MagicSnippet}}\"},\"Wr:Images\":{\"title\":\"Wr:Images\",\"caption\":\"{{$:/core/images/picture}} Images\",\"created\":\"20210131152534431\",\"modified\":\"20210320145130516\",\"tags\":\"[[Wikitext Reference]]\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"[[Image tiddlers|Images and Attachments]] can be simply displayed within other tiddlers via [[transclusion|Transclusions]]:\\n\\n{{Sn:WikitextImageTransclusion||MagicSnippet}}\\n\\nUsing the `img` link-like syntax, you can also specify a size:\\n\\n{{Sn:WikitextImageImgify||MagicSnippet}}\\n\\nThe `img` syntax can also directly include images available at a web URL:\\n\\n{{Sn:WikitextWebImage||MagicSnippet}}\\n\\nFor more on including images in your wiki, see [[Images and Attachments]].\"},\"Wr:InlineFormatting\":{\"title\":\"Wr:InlineFormatting\",\"caption\":\"{{$:/core/images/italic}} Inline formatting\",\"created\":\"20210131145932529\",\"modified\":\"20210322015851587\",\"tags\":\"[[Wikitext Reference]]\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{Sn:WikitextInlineTextFormatting||MagicSnippet}}\\n\\nUsing backticks to create monospaced text also inhibits further parsing of wikitext inside the backticks, so you can use this to talk about TiddlyWiki markup or prevent TiddlyWiki from treating computer code or other punctuation-heavy text as wiki markup.\\n\\nWhen creating bold italics (or any other combination of formatting), be sure to close the bold and italic in the opposite order you opened them, or you will [[get stuck in inline mode|Block Mode and Inline Mode]] and the remainder of the tiddler will be formatted incorrectly:\\n\\n{{Sn:WikitextBoldItalicBad||MagicSnippet}}\"},\"Wr:LineBreaks\":{\"title\":\"Wr:LineBreaks\",\"caption\":\"Maintaining line breaks\",\"created\":\"20210131151340756\",\"modified\":\"20210131153038726\",\"tags\":\"[[Wikitext Reference]]\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Normally, TiddlyWiki only starts a new paragraph when you leave a blank line (two presses of the Enter key). While usually helpful, this can be unwanted in a few circumstances, like when trying to display poetry. You can turn off this behavior for a block of text by wrapping it in triple quotes:\\n\\n{{Sn:WikitextTripleQuotes||MagicSnippet}}\\n\\nWhen displaying passages this way, you might also want to put the text in a block quote or indent some lines. You can combine this with the block-quote syntax, and use HTML //em spaces// (`&emsp;`) to add a small indent:\\n\\n{{Sn:WikitextPoetryMarkup||MagicSnippet}}\\n\"},\"Wr:Links\":{\"title\":\"Wr:Links\",\"caption\":\"{{$:/core/images/link}} Links\",\"created\":\"20210131145925457\",\"modified\":\"20210320191211734\",\"tags\":\"[[Wikitext Reference]]\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"You can create both internal and external [[links|Links]] using the `[[double bracket]]` syntax. Internal links go to another tiddler, while external links go to a URL; TiddlyWiki automatically selects the correct type based on the link target. To make the link text different than the target, you place the link text first, followed by a pipe (`|`) character and then the link target.\\n\\nHere are some examples:\\n\\n{{Sn:WikitextLinksExample||MagicSnippet}}\\n\\nURLs or paths to files are automatically linked if they appear in the text of your tiddler. However, there are a handful of cases where TiddlyWiki can't automatically detect something as a URL, for instance if it's a relative path to a file on your computer (see [[Images and Attachments]]) for why you might want that. Then placing the path by itself will make it normal text, and putting it in double square brackets will try to link to a tiddler with that name. In this case, you can use the `ext` syntax to force an external link.\\n\\n{{Sn:WikitextExtForce||MagicSnippet}}\\n\\nIf CamelCase links are on in the control panel, words in CamelCase are automatically turned into links. If you want to prevent a CamelCase word from turning into a link, precede it with a tilde: `~CamelCase` (note that the tilde will appear literally in the output if you have camel-case linking off, though). See the [[CamelCase appendix|CamelCase]] for details.\"},\"Wr:Lists\":{\"title\":\"Wr:Lists\",\"caption\":\"{{$:/core/images/list-bullet}} Lists\",\"created\":\"20210131145945917\",\"modified\":\"20210320145234700\",\"tags\":\"[[Wikitext Reference]]\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Bulleted (//unordered//) lists:\\n\\n{{Sn:WikitextBulletedList||MagicSnippet}}\\n\\nNumbered (//ordered//) lists:\\n\\n{{Sn:WikitextNumberedList||MagicSnippet}}\\n\\nBulleted and numbered lists can be combined:\\n\\n{{Sn:WikitextCombinedList||MagicSnippet}}\\n\\nTo nest multiple lines of [[HTML]] within a wikitext list, for instance to include multiple paragraphs or other complicated content within a single list item, you can open a `<div>` at the end of a list element:\\n\\n{{Sn:WikitextHtmlInList||MagicSnippet}}\\n\\nDefinition lists:\\n\\n{{Sn:WikitextDefinitionList||MagicSnippet}}\"},\"Wr:Quotes\":{\"title\":\"Wr:Quotes\",\"caption\":\"{{$:/core/images/quote}} Quotes\",\"created\":\"20210131145912549\",\"modified\":\"20210320145248231\",\"tags\":\"[[Wikitext Reference]]\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"There are two forms of block quotes. The line form uses a single `>`, like plain-text email. This form can be nested. The block form opens and closes with `<<<` on a separate line.\\n\\n{{Sn:WikitextQuotes||MagicSnippet}}\"},\"Wr:Styles\":{\"title\":\"Wr:Styles\",\"caption\":\"Styles\",\"created\":\"20210131152547938\",\"modified\":\"20210131154106270\",\"tags\":\"[[Wikitext Reference]]\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"You can apply arbitrary CSS styles or classes to blocks of text.\\n\\n{{Sn:WikitextStyles||MagicSnippet}}\\n\\nSee [[Stylesheets]] for more information on styles and this syntax.\"},\"Wr:Tables\":{\"title\":\"Wr:Tables\",\"caption\":\"Tables\",\"created\":\"20210131145854489\",\"modified\":\"20210213232523034\",\"tags\":\"[[Wikitext Reference]]\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Tables are created by putting pipe characters (`|`) between the columns, and putting each row on a separate line. A `!` can be placed at the beginning of a cell to turn it into a header.\\n\\n{{Sn:WikitextTableReference||MagicSnippet}}\\n\\nAlignment can be accomplished by adding spaces next to the vertical bars. To left-align, put a space at the right; to right-align, put a space at the left; and to center-align, put a space on both sides. By default, header cells are centered and other cells are left-aligned. You can see this in action below:\\n\\n{{Sn:WikitextTableAlignment||MagicSnippet}}\\n\\nIt's also possible to merge cells and apply further [[HTML]] markup. In most cases, you likely won't need these features, but if they sound useful, you can read about them in the [[TiddlyWiki documentation|https://tiddlywiki.com/#Tables%20in%20WikiText]].\"},\"Wr:Transclusions\":{\"title\":\"Wr:Transclusions\",\"caption\":\"{{$:/core/images/transcludify}} Transclusions\",\"created\":\"20210131145843458\",\"modified\":\"20210320190055105\",\"tags\":\"[[Wikitext Reference]]\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"[[Transclusions]] of [[fields|Fields]], [[macros|Macros]], and [[variables|Variables]] are an essential part of TiddlyWiki. Here's the standard syntax for including bits and pieces from other tiddlers in this tiddler.\\n\\nSee [[Summary of Macro and Transclusion Syntax]] for a more detailed treatment.\\n\\n<table class=\\\"gtw-transclusions-table\\\" >\\n\\t<tr>\\n\\t\\t<td>[[Transclude the text field of a tiddler|Transclusions]]</td>\\n\\t\\t<td>{{Sn:WikitextTransclusionBasic||MagicSnippet}}</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>[[Transclude a specific field of a tiddler|Transclusions]], here `caption`</td>\\n\\t\\t<td>{{Sn:WikitextTransclusionField||MagicSnippet}}</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>Transclude an index from a [[data tiddler|Data Tiddlers]]</td>\\n\\t\\t<td>(The [[Metadata]] tiddler contains details about //Grok TiddlyWiki// like its version number and project URL.)\\n\\n\\t\\t{{Sn:WikitextTransclusionData||MagicSnippet}}</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>[[Transclude a tiddler through a template|Templates and the Current Tiddler]]</td>\\n\\t\\t<td>{{Sn:WikitextTransclusionTemplate||MagicSnippet}}</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>Transclude the [[current tiddler|Templates and the Current Tiddler]] through a template</td>\\n\\t\\t<td>{{Sn:WikitextCurrentTransclusionTemplate||MagicSnippet}}</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>[[Transclude the result|Filters and Transclusions]] of a [[filter|Filters]]</td>\\n\\t\\t<td>{{Sn:WikitextTransclusionFilter||MagicSnippet}}</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>Transclude the result of a filter through a [[template|Templates and the Current Tiddler]]</td>\\n\\t\\t<td>{{Sn:WikitextTransclusionFilterTemplate||MagicSnippet}}</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>Transclude the value of a [[variable|Variables]]</td>\\n\\t\\t<td>{{Sn:WikitextTransclusionVariable||MagicSnippet}}</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>Call a [[macro|Macros]] (transcluding its result), [[treating its parameter as a variable|Text Substitution]]</td>\\n\\t\\t<td>{{Sn:WikitextTransclusionMacro||MagicSnippet}}</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>Call a [[macro|Macros]] (transcluding its result), [[using its parameter in text substitution|Text Substitution]]</td>\\n\\t\\t<td>{{Sn:WikitextTransclusionMacroSubst||MagicSnippet}}</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>Transclude the value of a variable in a macro via [[text substitution|Text Substitution]]</td>\\n\\t\\t<td>{{Sn:MacroVariableTextSubstitution||MagicSnippet}}</td>\\n\\t</tr>\\n</table>\\n\\n<style>\\ntable.gtw-transclusions-table {\\n\\twidth: 100%;\\n}\\ntable.gtw-transclusions-table tr td {\\n\\tpadding: 5px;\\n}\\ntable.gtw-transclusions-table tr td:first {\\n\\twidth: 20%;\\n}\\n</style>\"},\"Writing Shell Scripts Against a TiddlyWiki\":{\"title\":\"Writing Shell Scripts Against a TiddlyWiki\",\"created\":\"20200822201508518\",\"description\":\"External tools can access the data in your TiddlyWiki by reading files and calling a Node.js CLI.\",\"modified\":\"20210502164024462\",\"parent\":\"Getting Technical\",\"prerequisite\":\"A basic background in shell scripting or some other scripting language like Python\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"(''Prerequisite'' for this section: {{!!prerequisite}}.)\\n\\nIf you're a [[Unix philosophy|https://en.wikipedia.org/wiki/Unix_philosophy]] person and believe that programs should do one thing well and integrate well with other programs, you might be wondering whether your data is going to be trapped in TiddlyWiki. Good news: if you install the Node.js backend on your computer and host your wiki there, you can easily integrate with other programs in whatever way you please. (It's also possible to quickly convert a single-file wiki to a Node.js folder wiki, so if you prefer to use a single file but sometimes need to get at the contents programmatically, you can extract a new folder wiki from the file to a temporary directory and then operate on that.)\\n\\n\\n!! File structure\\n\\nThe Node.js backend stores text tiddlers in individual files, which are easy for a script or other application to read. The format is much like email: first the fields of the tiddler are listed with the name separated from the value by a colon and a space, and then after one blank line comes the contents of the `text` field.\\n\\nTiddlers containing non-textual data, such as images, are instead included unmodified, and the fields associated with their tiddlers are stored in a separate text file with a `.meta` extension. So if you have an image tiddler called `image.png`, there will be an `image.png` PNG file which can be opened in a normal image viewer, and an `image.png.meta` file containing the fields of the tiddler.\\n\\nFor the most part, the names of tiddlers are used as their filenames, with a `.tid` extension added. However, a few characters are changed so as to avoid those that are invalid in filenames on some operating systems. It's also possible to add additional transformations as TiddlyWiki filters, for instance to put tiddlers with particular tags in a different folder. The details can be found in the [[Customizing Tiddler File Naming|https://tiddlywiki.com/#Customising Tiddler File Naming]] tiddler in the TW documentation.\\n\\n\\n!! The TiddlyWiki CLI\\n\\nWhen simply looking at the files is not enough, the ''`tiddlywiki` command'', installed with the npm package, lets you perform most any operation you need, such as rendering tiddlers to HTML or plain text, or selecting tiddlers that match a filter and writing them into a new wiki.\\n\\nThe TiddlyWiki CLI has a rather unconventional syntax that often confuses new users. Most CLIs would use positional parameters with the first parameter being the operation to perform:\\n\\n```bash\\ntiddlywiki render FILTER\\n```\\n\\nOr perhaps a positional parameter for the operations and double-dashed options for the details:\\n\\n```bash\\ntiddlywiki render --filter=FILTER\\n```\\n\\nInstead, TiddlyWiki uses double-dashed options for the actual //operations//, and positional arguments for the details on each operation:\\n\\n```bash\\ntiddlywiki --render FILTER\\n```\\n\\nYou can, and often must, chain these together. So to set the source wiki and then save the wiki folder, you would do:\\n\\n```bash\\ntiddlywiki --load SOURCE_WIKI --render FILTER\\n```\\n\\nThis is important because the CLI is stateless. From the help message, you might expect this to work:\\n\\n```bash\\ntiddlywiki --load SOURCE_WIKI\\ntiddlywiki --render FILTER\\n```\\n\\nBut it doesn't -- the first command sets the wiki to load but doesn't persist that setting, then exits, so it amounts to a no-op. The second command will continue to use the default source location (the current directory).\\n\\n\\n!! Editing wiki files\\n\\nIf you're going to edit wiki files on disk, rather than just reading them, be aware that you will need to ''restart the server to pick up the changes'', as it assumes it is the exclusive user of the folder while it's running and does not watch files on disk. The plugin [[Bob|https://github.com/OokTech/TW5-Bob]] adds listening functionality along with some other helpful features and is worth a look if you plan to do this more than occasionally,\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\"},\"Your First Dynamic List\":{\"title\":\"Your First Dynamic List\",\"created\":\"20200603023508451\",\"description\":\"You can create lists of tiddlers that automatically update to show all the tiddlers that currently match a filter.\",\"modified\":\"20210409172018970\",\"parent\":\"Filtering and Formatting\",\"tags\":\"Section\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Searching with filters is all very nice, but what if we want to look for the same thing all the time? For instance, we probably often need to go back and look at our notes from recent meetings. It would be nice to have a list of all our meetings from newest to oldest, rather than having to remember what we called each meeting or exactly when it was and search for it.\\n\\nFortunately, one of the things TiddlyWiki does best is create dynamic lists -- lists of tiddlers or other content that automatically update as the wiki changes. Dynamic lists take a filter and do something with all of the tiddlers that filter returns. In [[Slicing Up Content]], we said the role of a tiddler containing a dynamic list was much like that of a sentence: it describes the relationships between other things.\\n\\nLet's create a new tiddler and call it `MeetingList`. If we want to give it a tag, we could tag it `Tool`.\\n\\n\\n!! Creating a `$list` widget\\n\\nThe ''`$list` widget'' is among the most important and frequently used TiddlyWiki widgets. This widget is named quite appropriately for our purpose, since we're trying to create a list, but you can also use a list widget to accomplish some other things that don't necessarily look like they involve listing anything. We'll see more of those uses later.\\n\\nHere's how we create a list of meetings from the output of a filter:\\n\\n```html\\n<$list filter=\\\"[tag[Meeting]]\\\"></$list>\\n```\\n\\nThat was easy. But wait, there's something wrong…all of the meeting names are run together in a single line, without even a space between them!\\n\\nWhen the list widget is used without any contents, like we did above, it simply plops each tiddler title that the filter returns right after the previous one. In HTML, line breaks only happen when you explicitly ask for them, either with a rich formatting tag like `</p>` to indicate the end of a paragraph or `</li>` to indicate the end of a list item, or with the simple `<br>` for a line break. Let's fix this by adding a `<br>` between each item:\\n\\n```html\\n<$list filter=\\\"[tag[Meeting]]\\\">\\n  <<currentTiddler>><br>\\n</$list>\\n```\\n\\nThat's better! But you're probably wondering, what the heck is this `<<currentTiddler>>` thing? We'll be talking more about the concept of the [[current tiddler|Templates and the Current Tiddler]], as well as the `<<double angle bracket>>` [[syntax|Variables]], in [[chapter 4|Variables, Macros, and Transclusions]]. For now, just think of it as a placeholder for “the item in the list currently being processed”. (If you've done any programming, the `$list` widget is much like a loop: the contents of the widget are displayed once for each output tiddler in the filter.)\\n\\nThere's one more problem here, which is that we haven't actually listed our meetings from newest to oldest. Let's fix that by adding a `sort` filter step:\\n\\n```html\\nHere are all your meetings from newest to oldest:\\n\\n<$list filter=\\\"[tag[Meeting]!sort[at]]\\\">\\n  <<currentTiddler>><br>\\n</$list>\\n```\\n\\n!! The future\\n\\nIn this example, we only see a list of tiddler titles that match the search criteria, which is nifty but hardly revolutionary. However, it turns out we can actually display ''any information we want'' that can be derived from the contents of the tiddlers we're listing: any field on those tiddlers, the tiddlers they link to, the number of tags they have, and so on. We'll learn how to do this in the [[next chapter|Variables, Macros, and Transclusions]].\\n\\n\\n!! Exercises\\n\\n{{Ex:JaneMeetingList||ExerciseTemplate}}\\n{{Ex:BulletedMeetingList||ExerciseTemplate}}\\n{{Ex:ContactList||ExerciseTemplate}}\\n{{Ex:ContactListNoPhoneExclusion||ExerciseTemplate}}\\n{{Ex:LinkPattern||ExerciseTemplate}}\\n\\n\\n!! Takeaways\\n\\n{{||TakeawaysTemplate}}\\n\"},\"anki-config-screenshot.png\":{\"title\":\"anki-config-screenshot.png\",\"text\":\"\",\"type\":\"image/png\",\"created\":\"20210130011052905\",\"modified\":\"20210130011003808\",\"tags\":\"Screenshot\"},\"date-formatter-example.png\":{\"title\":\"date-formatter-example.png\",\"text\":\"\",\"type\":\"image/png\",\"created\":\"20210207181258370\",\"modified\":\"20210207181207524\",\"tags\":\"Screenshot\"},\"edge-notched.jpg\":{\"title\":\"edge-notched.jpg\",\"text\":\"\",\"type\":\"image/jpeg\",\"created\":\"20210213211831550\",\"modified\":\"20210213211740069\",\"source\":\"Soren Bjornstad, 2021-02-06. Own work.\",\"tags\":\"Screenshot\"},\"interface.png\":{\"title\":\"interface.png\",\"text\":\"\",\"type\":\"image/png\",\"created\":\"20201125202846778\",\"modified\":\"20201125202818887\",\"tags\":\"Screenshot\"},\"open-button.png\":{\"title\":\"open-button.png\",\"text\":\"\",\"type\":\"image/png\",\"created\":\"20210408173444566\",\"modified\":\"20210408173449540\",\"tags\":\"Screenshot\"},\"side-by-side-wikitext.png\":{\"title\":\"side-by-side-wikitext.png\",\"text\":\"\",\"type\":\"image/png\",\"created\":\"20210324115335174\",\"modified\":\"20210324115210682\",\"tags\":\"Screenshot\"}}}"}]